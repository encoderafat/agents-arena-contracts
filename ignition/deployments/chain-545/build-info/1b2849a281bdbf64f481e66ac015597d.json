{
  "id": "1b2849a281bdbf64f481e66ac015597d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Arena.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./Interfaces.sol\";\n\ncontract Arena {\n    IAgentFactory public agentFactory;\n    address public cadenceArch;\n\n    enum ArenaType { NeutralFields, VolcanicPlains, MysticForest }\n    enum BattleStatus { Ongoing, Finished }\n\n    struct Battle {\n        uint256 battleId;\n        uint256[] agentIds;\n        BattleTactics[] tactics; // Store tactics for the battle\n        ArenaType arena;\n        BattleStatus status;\n        uint256 winner;\n    }\n\n    struct BattleView {\n        uint256 battleId;\n        uint256[] agentIds;\n        uint256[] agentHealths;\n        BattleTactics[] tactics;\n        ArenaType arena;\n        BattleStatus status;\n        uint256 winner;\n    }\n\n    struct AttackParameters {\n        IAgentFactory.Agent attacker;\n        BattleTactics attackerTactics;\n        IAgentFactory.Agent defender;\n        BattleTactics defenderTactics;\n        ArenaType arena;\n        bytes32 randomSeed;\n    }\n\n    Battle[] public battles;\n    mapping(uint256 => mapping(uint256 => uint256)) public battleAgentHealth; // battleId => agentId => health\n    mapping(uint256 => bool) public agentInBattle; // Prevent agent from being in multiple battles\n\n    event BattleStarted(uint256 battleId, uint256 agent1, uint256 agent2, ArenaType arena);\n    event Attack(uint256 indexed battleId, uint256 indexed attacker, uint256 indexed defender, uint256 damage);\n    event BattleFinished(uint256 indexed battleId, uint256 indexed winner, uint256 indexed loser);\n\n    constructor(address _agentFactoryAddress, address _cadenceArch) {\n        agentFactory = IAgentFactory(_agentFactoryAddress);\n        cadenceArch = _cadenceArch;\n    }\n\n    function startBattle(\n        uint256 _agent1Id,\n        BattleTactics memory _tactics1,\n        uint256 _agent2Id,\n        BattleTactics memory _tactics2\n    ) public {\n        \n        IAgentFactory.Agent memory agent1 = agentFactory.getAgent(_agent1Id);\n        IAgentFactory.Agent memory agent2 = agentFactory.getAgent(_agent2Id);\n        require(agent1.id != 0 && agent2.id != 0, \"Agent does not exist\");\n        require(_tactics1.aggressiveness <= 100 && _tactics2.aggressiveness <= 100, \"Invalid aggressiveness\");\n        require(_tactics1.riskTolerance <= 100 && _tactics2.riskTolerance <= 100, \"Invalid risk tolerance\");\n\n\n        uint256 battleId = battles.length;\n\n        uint64 randomValue = ICadenceArch(cadenceArch).revertibleRandom();\n        ArenaType arenaType = ArenaType(randomValue % 3);\n\n        uint256[] memory agentIds = new uint256[](2);\n        agentIds[0] = _agent1Id;\n        agentIds[1] = _agent2Id;\n\n        BattleTactics[] memory tactics = new BattleTactics[](2);\n        tactics[0] = _tactics1;\n        tactics[1] = _tactics2;\n\n        battles.push(Battle({\n            battleId: battleId,\n            agentIds: agentIds,\n            tactics: tactics,\n            arena: arenaType,\n            status: BattleStatus.Ongoing,\n            winner: 0\n        }));\n        \n        uint256 health1 = agent1.level * 20 + agent1.dna.strength * 5;\n        uint256 health2 = agent2.level * 20 + agent2.dna.strength * 5;\n        battleAgentHealth[battleId][_agent1Id] = health1;\n        battleAgentHealth[battleId][_agent2Id] = health2;\n\n        emit BattleStarted(battleId, _agent1Id, _agent2Id, arenaType);\n    }\n\n    function fight(uint256 _battleId) public {\n        require(_battleId < battles.length, \"Battle does not exist\");\n        Battle storage currentBattle = battles[_battleId];\n        require(currentBattle.status == BattleStatus.Ongoing, \"Battle is already finished\");\n\n        uint256 agent1Id = currentBattle.agentIds[0];\n        uint256 agent2Id = currentBattle.agentIds[1];\n        require(!agentInBattle[agent1Id] && !agentInBattle[agent2Id], \"Agent already in battle\");\n\n        agentInBattle[agent1Id] = true;\n        agentInBattle[agent2Id] = true;\n        \n        IAgentFactory.Agent memory agent1 = agentFactory.getAgent(agent1Id);\n        IAgentFactory.Agent memory agent2 = agentFactory.getAgent(agent2Id);\n\n        uint256 health1 = battleAgentHealth[_battleId][agent1Id];\n        uint256 health2 = battleAgentHealth[_battleId][agent2Id];\n\n        uint256 winnerId;\n        uint256 loserId;\n\n        // Use a VRF seed for the entire battle's sequence of events\n        bytes32 randomSeed = keccak256(abi.encodePacked(ICadenceArch(cadenceArch).revertibleRandom(), _battleId));\n\n        // Simulate 3 rounds of combat\n        for (uint i = 0; i < 3; i++) {\n            // Create AttackParameters for agent1's attack\n            AttackParameters memory attackParams1 = AttackParameters({\n                attacker: agent1,\n                attackerTactics: currentBattle.tactics[0],\n                defender: agent2,\n                defenderTactics: currentBattle.tactics[1],\n                arena: currentBattle.arena,\n                randomSeed: randomSeed\n            });\n\n            // Agent 1 attacks Agent 2\n            uint256 damageTo2 = _resolveAttackAndGetDamage(attackParams1);\n            health2 = (damageTo2 >= health2) ? 0 : (health2 - damageTo2);\n            emit Attack(_battleId, agent1Id, agent2Id, damageTo2);\n            if (health2 == 0) {\n                winnerId = agent1Id;\n                loserId = agent2Id;\n                break;\n            }\n\n            // Update seed for the next action to ensure fairness and prevent mirroring\n            randomSeed = keccak256(abi.encodePacked(randomSeed));\n\n            // Create AttackParameters for agent2's attack\n            AttackParameters memory attackParams2 = AttackParameters({\n                attacker: agent2,\n                attackerTactics: currentBattle.tactics[1],\n                defender: agent1,\n                defenderTactics: currentBattle.tactics[0],\n                arena: currentBattle.arena,\n                randomSeed: randomSeed\n            });\n\n            // Agent 2 attacks Agent 1\n            uint256 damageTo1 = _resolveAttackAndGetDamage(attackParams2);\n            health1 = (damageTo1 >= health1) ? 0 : (health1 - damageTo1);\n            emit Attack(_battleId, agent2Id, agent1Id, damageTo1);\n            if (health1 == 0) {\n                winnerId = agent2Id;\n                loserId = agent1Id;\n                break;\n            }\n            randomSeed = keccak256(abi.encodePacked(randomSeed));\n        }\n\n        // If no winner after 3 rounds, winner is one with more health %\n        if (winnerId == 0) {\n            uint256 initialHealth1 = agent1.level * 20 + agent1.dna.strength * 5;\n            uint256 initialHealth2 = agent2.level * 20 + agent2.dna.strength * 5;\n            if ((health1 * 100) / initialHealth1 >= (health2 * 100) / initialHealth2) {\n                winnerId = agent1Id;\n                loserId = agent2Id;\n            } else {\n                winnerId = agent2Id;\n                loserId = agent1Id;\n            }\n        }\n\n        // Finalize battle\n        currentBattle.status = BattleStatus.Finished;\n        currentBattle.winner = winnerId;\n        agentInBattle[agent1Id] = false;\n        agentInBattle[agent2Id] = false;\n        agentFactory.gainExperience(winnerId, 50); // Winner gets 50 XP\n        emit BattleFinished(_battleId, winnerId, loserId);\n    }\n\n    \n    function _resolveAttackAndGetDamage(AttackParameters memory params) internal pure returns (uint256) {\n        // 1. Base Power Calculation\n        uint256 attackPower = params.attacker.dna.strength * 2 + params.attacker.dna.intelligence;\n        uint256 defensePower = params.defender.dna.strength + params.defender.dna.intelligence * 2;\n\n        // 2. Apply Strategy & Aggressiveness Modifiers\n        // Modifiers are parts-per-100. 100 is neutral.\n        uint256 attackModifier = 100;\n        uint256 defenseModifier = 100;\n\n        // Apply attacker's strategy\n        if (params.attackerTactics.strategy == Strategy.Berserker) { attackModifier += 30; } // +30% attack\n        else if (params.attackerTactics.strategy == Strategy.Tactician) { attackModifier += 15; defenseModifier += 15; } // +15% attack/defense\n\n        // Apply defender's strategy\n        if (params.defenderTactics.strategy == Strategy.Defensive) { defenseModifier += 30; } // +30% defense\n\n        // Apply aggressiveness (affects both attacker and defender)\n        attackModifier += (params.attackerTactics.aggressiveness / 4); // Up to +25%\n        defenseModifier -= (params.attackerTactics.aggressiveness / 4); // Up to -25%\n\n        attackPower = (attackPower * attackModifier) / 100;\n        defensePower = (defensePower * defenseModifier) / 100;\n\n        // 3. Calculate Damage Pre-Mitigation\n        if (attackPower <= defensePower) { return 1; } // Always do at least 1 damage on a hit\n        uint256 damage = attackPower - defensePower;\n\n        // 4. Evasion Check (based on defender's agility)\n        uint256 evasionRoll = uint256(uint160(bytes20(params.randomSeed))) % 100;\n        // Agility gives a direct % chance to evade, capped at 50%\n        uint256 evasionChance = params.defender.dna.agility > 50 ? 50 : params.defender.dna.agility;\n        if (evasionRoll < evasionChance) { return 0; } // Successful evasion\n\n        // 5. Critical Hit / Fumble (based on attacker's risk tolerance)\n        uint256 luckRoll = (uint256(uint160(bytes20(params.randomSeed << 160)))) % 100;\n        uint256 critChance = params.attackerTactics.riskTolerance / 2; // Max 50%\n        uint256 fumbleChance = (100 - params.attackerTactics.riskTolerance) / 4; // Max 25%\n\n        if (luckRoll < critChance) { damage = (damage * 15) / 10; } // Critical hit: +50% damage\n        else if (luckRoll > (100 - fumbleChance)) { damage = (damage * 5) / 10; } // Fumble: -50% damage\n\n        // 6. Arena Bonus\n        if (params.arena == ArenaType.VolcanicPlains && params.attacker.dna.elementalAffinity == 1) { // Fire\n            damage = (damage * 115) / 100; // +15%\n        } else if (params.arena == ArenaType.MysticForest && (params.attacker.dna.elementalAffinity == 3 || params.attacker.dna.elementalAffinity == 4)) { // Earth or Air\n            damage = (damage * 115) / 100; // +15%\n        }\n\n        return damage;\n    }\n\n\n    function getBattle(uint256 _battleId) public view returns (BattleView memory) {\n        require(_battleId < battles.length, \"Battle does not exist\");\n        Battle storage b = battles[_battleId];\n        \n        uint256[] memory agentHealths = new uint256[](b.agentIds.length);\n        for (uint256 i = 0; i < b.agentIds.length; i++) {\n            agentHealths[i] = battleAgentHealth[_battleId][b.agentIds[i]];\n        }\n        \n        return BattleView({\n            battleId: b.battleId,\n            agentIds: b.agentIds,\n            agentHealths: agentHealths,\n            tactics: b.tactics,\n            arena: b.arena,\n            status: b.status,\n            winner: b.winner\n        });\n    }\n\n    function getBattleCount() public view returns (uint256) {\n        return battles.length;\n    }\n}"
      },
      "contracts/Interfaces.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n// Interface for Flow's On-chain Randomness\ninterface ICadenceArch {\n    function revertibleRandom() external view returns (uint64);\n}\n\n// Enum and Struct for new Battle Tactics\nenum Strategy { Balanced, Berserker, Tactician, Defensive }\n\nstruct BattleTactics {\n    uint8 aggressiveness; // 0-100: How aggressive the agent fights\n    Strategy strategy;   // Battle strategy choice\n    uint8 riskTolerance; // 0-100: Willingness to take risks\n}\n\n\n// Interface for your AgentFactory\ninterface IAgentFactory {\n    struct DNA {\n        uint256 strength;\n        uint256 agility;\n        uint256 intelligence;\n        uint8 elementalAffinity; // 0:Neutral, 1:Fire, 2:Water, 3:Earth, 4:Air\n    }\n\n    struct Agent {\n        uint256 id;\n        uint256 level;\n        uint256 experience;\n        DNA dna;\n        string metadataCID;\n        uint256 equippedItem;\n    }\n\n    function getAgent(uint256 tokenId) external view returns (Agent memory);\n    function gainExperience(uint256 tokenId, uint256 xp) external;\n}\n\n// Interface for your ItemFactory\ninterface IItemFactory {\n    function mint(address to, uint8 itemType, uint256 power) external returns (uint256);\n}"
      }
    },
    "settings": {
      "viaIR": true,
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/Arena.sol": {
        "ast": {
          "absolutePath": "contracts/Arena.sol",
          "exportedSymbols": {
            "Arena": [
              1098
            ],
            "BattleTactics": [
              1119
            ],
            "IAgentFactory": [
              1158
            ],
            "ICadenceArch": [
              1106
            ],
            "IItemFactory": [
              1170
            ],
            "Strategy": [
              1111
            ]
          },
          "id": 1099,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:0"
            },
            {
              "absolutePath": "contracts/Interfaces.sol",
              "file": "./Interfaces.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1099,
              "sourceUnit": 1171,
              "src": "58:26:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Arena",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1098,
              "linearizedBaseContracts": [
                1098
              ],
              "name": "Arena",
              "nameLocation": "95:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "7df107ea",
                  "id": 5,
                  "mutability": "mutable",
                  "name": "agentFactory",
                  "nameLocation": "128:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "107:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                    "typeString": "contract IAgentFactory"
                  },
                  "typeName": {
                    "id": 4,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3,
                      "name": "IAgentFactory",
                      "nameLocations": [
                        "107:13:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1158,
                      "src": "107:13:0"
                    },
                    "referencedDeclaration": 1158,
                    "src": "107:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                      "typeString": "contract IAgentFactory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d0d250bd",
                  "id": 7,
                  "mutability": "mutable",
                  "name": "cadenceArch",
                  "nameLocation": "161:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "146:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "146:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "Arena.ArenaType",
                  "id": 11,
                  "members": [
                    {
                      "id": 8,
                      "name": "NeutralFields",
                      "nameLocation": "196:13:0",
                      "nodeType": "EnumValue",
                      "src": "196:13:0"
                    },
                    {
                      "id": 9,
                      "name": "VolcanicPlains",
                      "nameLocation": "211:14:0",
                      "nodeType": "EnumValue",
                      "src": "211:14:0"
                    },
                    {
                      "id": 10,
                      "name": "MysticForest",
                      "nameLocation": "227:12:0",
                      "nodeType": "EnumValue",
                      "src": "227:12:0"
                    }
                  ],
                  "name": "ArenaType",
                  "nameLocation": "184:9:0",
                  "nodeType": "EnumDefinition",
                  "src": "179:62:0"
                },
                {
                  "canonicalName": "Arena.BattleStatus",
                  "id": 14,
                  "members": [
                    {
                      "id": 12,
                      "name": "Ongoing",
                      "nameLocation": "266:7:0",
                      "nodeType": "EnumValue",
                      "src": "266:7:0"
                    },
                    {
                      "id": 13,
                      "name": "Finished",
                      "nameLocation": "275:8:0",
                      "nodeType": "EnumValue",
                      "src": "275:8:0"
                    }
                  ],
                  "name": "BattleStatus",
                  "nameLocation": "251:12:0",
                  "nodeType": "EnumDefinition",
                  "src": "246:39:0"
                },
                {
                  "canonicalName": "Arena.Battle",
                  "id": 32,
                  "members": [
                    {
                      "constant": false,
                      "id": 16,
                      "mutability": "mutable",
                      "name": "battleId",
                      "nameLocation": "323:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "315:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "315:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19,
                      "mutability": "mutable",
                      "name": "agentIds",
                      "nameLocation": "351:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "341:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "341:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18,
                        "nodeType": "ArrayTypeName",
                        "src": "341:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "tactics",
                      "nameLocation": "385:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "369:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage_ptr",
                        "typeString": "struct BattleTactics[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 21,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 20,
                            "name": "BattleTactics",
                            "nameLocations": [
                              "369:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1119,
                            "src": "369:13:0"
                          },
                          "referencedDeclaration": 1119,
                          "src": "369:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                            "typeString": "struct BattleTactics"
                          }
                        },
                        "id": 22,
                        "nodeType": "ArrayTypeName",
                        "src": "369:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage_ptr",
                          "typeString": "struct BattleTactics[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "arena",
                      "nameLocation": "444:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "434:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ArenaType_$11",
                        "typeString": "enum Arena.ArenaType"
                      },
                      "typeName": {
                        "id": 25,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24,
                          "name": "ArenaType",
                          "nameLocations": [
                            "434:9:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "434:9:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "434:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ArenaType_$11",
                          "typeString": "enum Arena.ArenaType"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 29,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "472:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "459:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BattleStatus_$14",
                        "typeString": "enum Arena.BattleStatus"
                      },
                      "typeName": {
                        "id": 28,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27,
                          "name": "BattleStatus",
                          "nameLocations": [
                            "459:12:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "459:12:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "459:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BattleStatus_$14",
                          "typeString": "enum Arena.BattleStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "496:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 32,
                      "src": "488:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "488:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Battle",
                  "nameLocation": "298:6:0",
                  "nodeType": "StructDefinition",
                  "scope": 1098,
                  "src": "291:218:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Arena.BattleView",
                  "id": 53,
                  "members": [
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "battleId",
                      "nameLocation": "551:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "543:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "agentIds",
                      "nameLocation": "579:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "569:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "569:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 36,
                        "nodeType": "ArrayTypeName",
                        "src": "569:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "agentHealths",
                      "nameLocation": "607:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "597:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39,
                        "nodeType": "ArrayTypeName",
                        "src": "597:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "tactics",
                      "nameLocation": "645:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "629:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage_ptr",
                        "typeString": "struct BattleTactics[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41,
                            "name": "BattleTactics",
                            "nameLocations": [
                              "629:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1119,
                            "src": "629:13:0"
                          },
                          "referencedDeclaration": 1119,
                          "src": "629:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                            "typeString": "struct BattleTactics"
                          }
                        },
                        "id": 43,
                        "nodeType": "ArrayTypeName",
                        "src": "629:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage_ptr",
                          "typeString": "struct BattleTactics[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 47,
                      "mutability": "mutable",
                      "name": "arena",
                      "nameLocation": "672:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "662:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ArenaType_$11",
                        "typeString": "enum Arena.ArenaType"
                      },
                      "typeName": {
                        "id": 46,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45,
                          "name": "ArenaType",
                          "nameLocations": [
                            "662:9:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "662:9:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "662:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ArenaType_$11",
                          "typeString": "enum Arena.ArenaType"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "700:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "687:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BattleStatus_$14",
                        "typeString": "enum Arena.BattleStatus"
                      },
                      "typeName": {
                        "id": 49,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48,
                          "name": "BattleStatus",
                          "nameLocations": [
                            "687:12:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "687:12:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "687:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BattleStatus_$14",
                          "typeString": "enum Arena.BattleStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "724:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "716:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "716:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BattleView",
                  "nameLocation": "522:10:0",
                  "nodeType": "StructDefinition",
                  "scope": 1098,
                  "src": "515:222:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Arena.AttackParameters",
                  "id": 71,
                  "members": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "attacker",
                      "nameLocation": "797:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "777:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                        "typeString": "struct IAgentFactory.Agent"
                      },
                      "typeName": {
                        "id": 55,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54,
                          "name": "IAgentFactory.Agent",
                          "nameLocations": [
                            "777:13:0",
                            "791:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1142,
                          "src": "777:19:0"
                        },
                        "referencedDeclaration": 1142,
                        "src": "777:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                          "typeString": "struct IAgentFactory.Agent"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "attackerTactics",
                      "nameLocation": "829:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "815:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                        "typeString": "struct BattleTactics"
                      },
                      "typeName": {
                        "id": 58,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 57,
                          "name": "BattleTactics",
                          "nameLocations": [
                            "815:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1119,
                          "src": "815:13:0"
                        },
                        "referencedDeclaration": 1119,
                        "src": "815:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                          "typeString": "struct BattleTactics"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 62,
                      "mutability": "mutable",
                      "name": "defender",
                      "nameLocation": "874:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "854:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                        "typeString": "struct IAgentFactory.Agent"
                      },
                      "typeName": {
                        "id": 61,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60,
                          "name": "IAgentFactory.Agent",
                          "nameLocations": [
                            "854:13:0",
                            "868:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1142,
                          "src": "854:19:0"
                        },
                        "referencedDeclaration": 1142,
                        "src": "854:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                          "typeString": "struct IAgentFactory.Agent"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "defenderTactics",
                      "nameLocation": "906:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "892:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                        "typeString": "struct BattleTactics"
                      },
                      "typeName": {
                        "id": 64,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63,
                          "name": "BattleTactics",
                          "nameLocations": [
                            "892:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1119,
                          "src": "892:13:0"
                        },
                        "referencedDeclaration": 1119,
                        "src": "892:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                          "typeString": "struct BattleTactics"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68,
                      "mutability": "mutable",
                      "name": "arena",
                      "nameLocation": "941:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "931:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ArenaType_$11",
                        "typeString": "enum Arena.ArenaType"
                      },
                      "typeName": {
                        "id": 67,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66,
                          "name": "ArenaType",
                          "nameLocations": [
                            "931:9:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "931:9:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "931:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ArenaType_$11",
                          "typeString": "enum Arena.ArenaType"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "randomSeed",
                      "nameLocation": "964:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "956:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AttackParameters",
                  "nameLocation": "750:16:0",
                  "nodeType": "StructDefinition",
                  "scope": 1098,
                  "src": "743:238:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "606d2e96",
                  "id": 75,
                  "mutability": "mutable",
                  "name": "battles",
                  "nameLocation": "1003:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "987:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                    "typeString": "struct Arena.Battle[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 73,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 72,
                        "name": "Battle",
                        "nameLocations": [
                          "987:6:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 32,
                        "src": "987:6:0"
                      },
                      "referencedDeclaration": 32,
                      "src": "987:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                        "typeString": "struct Arena.Battle"
                      }
                    },
                    "id": 74,
                    "nodeType": "ArrayTypeName",
                    "src": "987:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage_ptr",
                      "typeString": "struct Arena.Battle[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2d24d097",
                  "id": 81,
                  "mutability": "mutable",
                  "name": "battleAgentHealth",
                  "nameLocation": "1071:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "1016:72:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                    "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                  },
                  "typeName": {
                    "id": 80,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 76,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1024:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1016:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                      "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 79,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 77,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1043:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1035:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 78,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1054:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "825b2124",
                  "id": 85,
                  "mutability": "mutable",
                  "name": "agentInBattle",
                  "nameLocation": "1159:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "1127:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 84,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 82,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1135:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1127:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 83,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1146:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ee1f4a056590adca336ca88ea149bd251d1d2c5ea0530bd96f4724b968713c94",
                  "id": 96,
                  "name": "BattleStarted",
                  "nameLocation": "1233:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "battleId",
                        "nameLocation": "1255:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1247:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 89,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agent1",
                        "nameLocation": "1273:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1265:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1265:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agent2",
                        "nameLocation": "1289:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1281:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1281:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 94,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "arena",
                        "nameLocation": "1307:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1297:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ArenaType_$11",
                          "typeString": "enum Arena.ArenaType"
                        },
                        "typeName": {
                          "id": 93,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 92,
                            "name": "ArenaType",
                            "nameLocations": [
                              "1297:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11,
                            "src": "1297:9:0"
                          },
                          "referencedDeclaration": 11,
                          "src": "1297:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ArenaType_$11",
                            "typeString": "enum Arena.ArenaType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:67:0"
                  },
                  "src": "1227:87:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "cf2d586a11b0df2dc974a66369ad4e68566a0635fd2448e810592eac3d3bedae",
                  "id": 106,
                  "name": "Attack",
                  "nameLocation": "1325:6:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 98,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "battleId",
                        "nameLocation": "1348:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1332:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 100,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "attacker",
                        "nameLocation": "1374:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1358:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 102,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "defender",
                        "nameLocation": "1400:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1384:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1384:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 104,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "damage",
                        "nameLocation": "1418:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1410:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1410:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1331:94:0"
                  },
                  "src": "1319:107:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c76e6de66e7f50844440b686c8189ef9b89939dfe8f4560382213011ed5d31c7",
                  "id": 114,
                  "name": "BattleFinished",
                  "nameLocation": "1437:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "battleId",
                        "nameLocation": "1468:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1452:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 110,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "1494:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1478:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1478:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 112,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "loser",
                        "nameLocation": "1518:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "1502:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1502:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1451:73:0"
                  },
                  "src": "1431:94:0"
                },
                {
                  "body": {
                    "id": 131,
                    "nodeType": "Block",
                    "src": "1595:103:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 121,
                            "name": "agentFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "1605:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                              "typeString": "contract IAgentFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 123,
                                "name": "_agentFactoryAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "1634:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 122,
                              "name": "IAgentFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "1620:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAgentFactory_$1158_$",
                                "typeString": "type(contract IAgentFactory)"
                              }
                            },
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1620:35:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                              "typeString": "contract IAgentFactory"
                            }
                          },
                          "src": "1605:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                            "typeString": "contract IAgentFactory"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1605:50:0"
                      },
                      {
                        "expression": {
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 127,
                            "name": "cadenceArch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1665:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 128,
                            "name": "_cadenceArch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "1679:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1665:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1665:26:0"
                      }
                    ]
                  },
                  "id": 132,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "_agentFactoryAddress",
                        "nameLocation": "1551:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "1543:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1543:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "_cadenceArch",
                        "nameLocation": "1581:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "1573:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1573:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1542:52:0"
                  },
                  "returnParameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1595:0:0"
                  },
                  "scope": 1098,
                  "src": "1531:167:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "1872:1468:0",
                    "statements": [
                      {
                        "assignments": [
                          149
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 149,
                            "mutability": "mutable",
                            "name": "agent1",
                            "nameLocation": "1918:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "1891:33:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                              "typeString": "struct IAgentFactory.Agent"
                            },
                            "typeName": {
                              "id": 148,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 147,
                                "name": "IAgentFactory.Agent",
                                "nameLocations": [
                                  "1891:13:0",
                                  "1905:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1142,
                                "src": "1891:19:0"
                              },
                              "referencedDeclaration": 1142,
                              "src": "1891:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                                "typeString": "struct IAgentFactory.Agent"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 154,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 152,
                              "name": "_agent1Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "1949:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 150,
                              "name": "agentFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "1927:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                                "typeString": "contract IAgentFactory"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1940:8:0",
                            "memberName": "getAgent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "1927:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Agent_$1142_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct IAgentFactory.Agent memory)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1927:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                            "typeString": "struct IAgentFactory.Agent memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1891:68:0"
                      },
                      {
                        "assignments": [
                          159
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 159,
                            "mutability": "mutable",
                            "name": "agent2",
                            "nameLocation": "1996:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "1969:33:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                              "typeString": "struct IAgentFactory.Agent"
                            },
                            "typeName": {
                              "id": 158,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 157,
                                "name": "IAgentFactory.Agent",
                                "nameLocations": [
                                  "1969:13:0",
                                  "1983:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1142,
                                "src": "1969:19:0"
                              },
                              "referencedDeclaration": 1142,
                              "src": "1969:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                                "typeString": "struct IAgentFactory.Agent"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 164,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 162,
                              "name": "_agent2Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2027:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 160,
                              "name": "agentFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "2005:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                                "typeString": "contract IAgentFactory"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2018:8:0",
                            "memberName": "getAgent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "2005:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Agent_$1142_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct IAgentFactory.Agent memory)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2005:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                            "typeString": "struct IAgentFactory.Agent memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1969:68:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 166,
                                    "name": "agent1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 149,
                                    "src": "2055:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    }
                                  },
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2062:2:0",
                                  "memberName": "id",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1130,
                                  "src": "2055:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2068:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2055:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 170,
                                    "name": "agent2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 159,
                                    "src": "2073:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    }
                                  },
                                  "id": 171,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2080:2:0",
                                  "memberName": "id",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1130,
                                  "src": "2073:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2086:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2073:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2055:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4167656e7420646f6573206e6f74206578697374",
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2089:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b51a60bc5e6b61a74994c9f159617a23abde1488c38ac02c2b4f32f9b8b378da",
                                "typeString": "literal_string \"Agent does not exist\""
                              },
                              "value": "Agent does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b51a60bc5e6b61a74994c9f159617a23abde1488c38ac02c2b4f32f9b8b378da",
                                "typeString": "literal_string \"Agent does not exist\""
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2047:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2047:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "2047:65:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 179,
                                    "name": "_tactics1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "2130:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 180,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2140:14:0",
                                  "memberName": "aggressiveness",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1113,
                                  "src": "2130:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2158:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "2130:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 183,
                                    "name": "_tactics2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "2165:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 184,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2175:14:0",
                                  "memberName": "aggressiveness",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1113,
                                  "src": "2165:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 185,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2193:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "2165:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2130:66:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616767726573736976656e657373",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2198:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9e269b6c028bcd2b8e5dd509617c5ca0118eb9eecbcbff14751da7b454f6ef0",
                                "typeString": "literal_string \"Invalid aggressiveness\""
                              },
                              "value": "Invalid aggressiveness"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9e269b6c028bcd2b8e5dd509617c5ca0118eb9eecbcbff14751da7b454f6ef0",
                                "typeString": "literal_string \"Invalid aggressiveness\""
                              }
                            ],
                            "id": 178,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2122:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2122:101:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "2122:101:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 192,
                                    "name": "_tactics1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 137,
                                    "src": "2241:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2251:13:0",
                                  "memberName": "riskTolerance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1118,
                                  "src": "2241:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 194,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2268:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "2241:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 196,
                                    "name": "_tactics2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 142,
                                    "src": "2275:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 197,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2285:13:0",
                                  "memberName": "riskTolerance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1118,
                                  "src": "2275:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2302:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "2275:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2241:64:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207269736b20746f6c6572616e6365",
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2307:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80f60b4c8ea0558097a4af06c46cabc28c35c3194874fbba69e0eefbdf981186",
                                "typeString": "literal_string \"Invalid risk tolerance\""
                              },
                              "value": "Invalid risk tolerance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80f60b4c8ea0558097a4af06c46cabc28c35c3194874fbba69e0eefbdf981186",
                                "typeString": "literal_string \"Invalid risk tolerance\""
                              }
                            ],
                            "id": 191,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2233:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2233:99:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "2233:99:0"
                      },
                      {
                        "assignments": [
                          205
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 205,
                            "mutability": "mutable",
                            "name": "battleId",
                            "nameLocation": "2352:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "2344:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 204,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2344:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 208,
                        "initialValue": {
                          "expression": {
                            "id": 206,
                            "name": "battles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "2363:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                              "typeString": "struct Arena.Battle storage ref[] storage ref"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2371:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2363:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2344:33:0"
                      },
                      {
                        "assignments": [
                          210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 210,
                            "mutability": "mutable",
                            "name": "randomValue",
                            "nameLocation": "2395:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "2388:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 209,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "2388:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 216,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 212,
                                  "name": "cadenceArch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "2422:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 211,
                                "name": "ICadenceArch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "2409:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICadenceArch_$1106_$",
                                  "typeString": "type(contract ICadenceArch)"
                                }
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2409:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICadenceArch_$1106",
                                "typeString": "contract ICadenceArch"
                              }
                            },
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2435:16:0",
                            "memberName": "revertibleRandom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1105,
                            "src": "2409:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
                              "typeString": "function () view external returns (uint64)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2409:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2388:65:0"
                      },
                      {
                        "assignments": [
                          219
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 219,
                            "mutability": "mutable",
                            "name": "arenaType",
                            "nameLocation": "2473:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "2463:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ArenaType_$11",
                              "typeString": "enum Arena.ArenaType"
                            },
                            "typeName": {
                              "id": 218,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 217,
                                "name": "ArenaType",
                                "nameLocations": [
                                  "2463:9:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 11,
                                "src": "2463:9:0"
                              },
                              "referencedDeclaration": 11,
                              "src": "2463:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 225,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 221,
                                "name": "randomValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "2495:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2509:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "2495:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 220,
                            "name": "ArenaType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2485:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ArenaType_$11_$",
                              "typeString": "type(enum Arena.ArenaType)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2485:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ArenaType_$11",
                            "typeString": "enum Arena.ArenaType"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2463:48:0"
                      },
                      {
                        "assignments": [
                          230
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 230,
                            "mutability": "mutable",
                            "name": "agentIds",
                            "nameLocation": "2539:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "2522:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 228,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2522:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 229,
                              "nodeType": "ArrayTypeName",
                              "src": "2522:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 236,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2564:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2550:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 231,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2554:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 232,
                              "nodeType": "ArrayTypeName",
                              "src": "2554:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2550:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2522:44:0"
                      },
                      {
                        "expression": {
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 237,
                              "name": "agentIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 230,
                              "src": "2576:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2585:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2576:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 240,
                            "name": "_agent1Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "2590:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2576:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "2576:23:0"
                      },
                      {
                        "expression": {
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 243,
                              "name": "agentIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 230,
                              "src": "2609:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 245,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2618:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2609:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 246,
                            "name": "_agent2Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2623:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2609:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "2609:23:0"
                      },
                      {
                        "assignments": [
                          253
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 253,
                            "mutability": "mutable",
                            "name": "tactics",
                            "nameLocation": "2666:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "2643:30:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct BattleTactics[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 251,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 250,
                                  "name": "BattleTactics",
                                  "nameLocations": [
                                    "2643:13:0"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1119,
                                  "src": "2643:13:0"
                                },
                                "referencedDeclaration": 1119,
                                "src": "2643:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                                  "typeString": "struct BattleTactics"
                                }
                              },
                              "id": 252,
                              "nodeType": "ArrayTypeName",
                              "src": "2643:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage_ptr",
                                "typeString": "struct BattleTactics[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 260,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2696:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2676:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct BattleTactics memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 255,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 254,
                                  "name": "BattleTactics",
                                  "nameLocations": [
                                    "2680:13:0"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1119,
                                  "src": "2680:13:0"
                                },
                                "referencedDeclaration": 1119,
                                "src": "2680:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                                  "typeString": "struct BattleTactics"
                                }
                              },
                              "id": 256,
                              "nodeType": "ArrayTypeName",
                              "src": "2680:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage_ptr",
                                "typeString": "struct BattleTactics[]"
                              }
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2676:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct BattleTactics memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2643:55:0"
                      },
                      {
                        "expression": {
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 261,
                              "name": "tactics",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "2708:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct BattleTactics memory[] memory"
                              }
                            },
                            "id": 263,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2716:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2708:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                              "typeString": "struct BattleTactics memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 264,
                            "name": "_tactics1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2721:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                              "typeString": "struct BattleTactics memory"
                            }
                          },
                          "src": "2708:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                            "typeString": "struct BattleTactics memory"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "2708:22:0"
                      },
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 267,
                              "name": "tactics",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "2740:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct BattleTactics memory[] memory"
                              }
                            },
                            "id": 269,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2748:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2740:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                              "typeString": "struct BattleTactics memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 270,
                            "name": "_tactics2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "2753:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                              "typeString": "struct BattleTactics memory"
                            }
                          },
                          "src": "2740:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                            "typeString": "struct BattleTactics memory"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "2740:22:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 277,
                                  "name": "battleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "2817:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 278,
                                  "name": "agentIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 230,
                                  "src": "2849:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                {
                                  "id": 279,
                                  "name": "tactics",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 253,
                                  "src": "2880:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct BattleTactics memory[] memory"
                                  }
                                },
                                {
                                  "id": 280,
                                  "name": "arenaType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "2908:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ArenaType_$11",
                                    "typeString": "enum Arena.ArenaType"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 281,
                                    "name": "BattleStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "2939:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_BattleStatus_$14_$",
                                      "typeString": "type(enum Arena.BattleStatus)"
                                    }
                                  },
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2952:7:0",
                                  "memberName": "Ongoing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12,
                                  "src": "2939:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BattleStatus_$14",
                                    "typeString": "enum Arena.BattleStatus"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2981:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct BattleTactics memory[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_ArenaType_$11",
                                    "typeString": "enum Arena.ArenaType"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_BattleStatus_$14",
                                    "typeString": "enum Arena.BattleStatus"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 276,
                                "name": "Battle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "2786:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Battle_$32_storage_ptr_$",
                                  "typeString": "type(struct Arena.Battle storage pointer)"
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "2807:8:0",
                                "2839:8:0",
                                "2871:7:0",
                                "2901:5:0",
                                "2931:6:0",
                                "2973:6:0"
                              ],
                              "names": [
                                "battleId",
                                "agentIds",
                                "tactics",
                                "arena",
                                "status",
                                "winner"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2786:207:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_memory_ptr",
                                "typeString": "struct Arena.Battle memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Battle_$32_memory_ptr",
                                "typeString": "struct Arena.Battle memory"
                              }
                            ],
                            "expression": {
                              "id": 273,
                              "name": "battles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "2773:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                                "typeString": "struct Arena.Battle storage ref[] storage ref"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2781:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2773:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Battle_$32_storage_$dyn_storage_ptr_$_t_struct$_Battle_$32_storage_$returns$__$attached_to$_t_array$_t_struct$_Battle_$32_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Arena.Battle storage ref[] storage pointer,struct Arena.Battle storage ref)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2773:221:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "2773:221:0"
                      },
                      {
                        "assignments": [
                          288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 288,
                            "mutability": "mutable",
                            "name": "health1",
                            "nameLocation": "3021:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "3013:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 287,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3013:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 299,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 289,
                                "name": "agent1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 149,
                                "src": "3031:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                  "typeString": "struct IAgentFactory.Agent memory"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3038:5:0",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1132,
                              "src": "3031:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3046:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "3031:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 293,
                                  "name": "agent1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "3051:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                    "typeString": "struct IAgentFactory.Agent memory"
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3058:3:0",
                                "memberName": "dna",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1137,
                                "src": "3051:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                  "typeString": "struct IAgentFactory.DNA memory"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3062:8:0",
                              "memberName": "strength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1121,
                              "src": "3051:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3073:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "3051:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3031:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3013:61:0"
                      },
                      {
                        "assignments": [
                          301
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 301,
                            "mutability": "mutable",
                            "name": "health2",
                            "nameLocation": "3092:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "3084:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 300,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3084:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 312,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 302,
                                "name": "agent2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "3102:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                  "typeString": "struct IAgentFactory.Agent memory"
                                }
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3109:5:0",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1132,
                              "src": "3102:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3117:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "3102:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 306,
                                  "name": "agent2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159,
                                  "src": "3122:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                    "typeString": "struct IAgentFactory.Agent memory"
                                  }
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3129:3:0",
                                "memberName": "dna",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1137,
                                "src": "3122:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                  "typeString": "struct IAgentFactory.DNA memory"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3133:8:0",
                              "memberName": "strength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1121,
                              "src": "3122:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3144:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "3122:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3102:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3084:61:0"
                      },
                      {
                        "expression": {
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 313,
                                "name": "battleAgentHealth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "3155:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 316,
                              "indexExpression": {
                                "id": 314,
                                "name": "battleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "3173:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3155:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 317,
                            "indexExpression": {
                              "id": 315,
                              "name": "_agent1Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "3183:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3155:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 318,
                            "name": "health1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3196:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3155:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "3155:48:0"
                      },
                      {
                        "expression": {
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 321,
                                "name": "battleAgentHealth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "3213:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 324,
                              "indexExpression": {
                                "id": 322,
                                "name": "battleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "3231:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3213:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 325,
                            "indexExpression": {
                              "id": 323,
                              "name": "_agent2Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3241:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3213:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 326,
                            "name": "health2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3254:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3213:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 328,
                        "nodeType": "ExpressionStatement",
                        "src": "3213:48:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 330,
                              "name": "battleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "3291:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 331,
                              "name": "_agent1Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "3301:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 332,
                              "name": "_agent2Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3312:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 333,
                              "name": "arenaType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "3323:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              }
                            ],
                            "id": 329,
                            "name": "BattleStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "3277:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_ArenaType_$11_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,enum Arena.ArenaType)"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3277:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 335,
                        "nodeType": "EmitStatement",
                        "src": "3272:61:0"
                      }
                    ]
                  },
                  "functionSelector": "c230fe0b",
                  "id": 337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "startBattle",
                  "nameLocation": "1713:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "_agent1Id",
                        "nameLocation": "1742:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "1734:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "_tactics1",
                        "nameLocation": "1782:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "1761:30:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                          "typeString": "struct BattleTactics"
                        },
                        "typeName": {
                          "id": 136,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135,
                            "name": "BattleTactics",
                            "nameLocations": [
                              "1761:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1119,
                            "src": "1761:13:0"
                          },
                          "referencedDeclaration": 1119,
                          "src": "1761:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                            "typeString": "struct BattleTactics"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "_agent2Id",
                        "nameLocation": "1809:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "1801:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1801:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "_tactics2",
                        "nameLocation": "1849:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "1828:30:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                          "typeString": "struct BattleTactics"
                        },
                        "typeName": {
                          "id": 141,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 140,
                            "name": "BattleTactics",
                            "nameLocations": [
                              "1828:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1119,
                            "src": "1828:13:0"
                          },
                          "referencedDeclaration": 1119,
                          "src": "1828:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleTactics_$1119_storage_ptr",
                            "typeString": "struct BattleTactics"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1724:140:0"
                  },
                  "returnParameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1872:0:0"
                  },
                  "scope": 1098,
                  "src": "1704:1636:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 710,
                    "nodeType": "Block",
                    "src": "3387:3869:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 343,
                                "name": "_battleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "3405:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 344,
                                  "name": "battles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "3417:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                                    "typeString": "struct Arena.Battle storage ref[] storage ref"
                                  }
                                },
                                "id": 345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3425:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3417:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3405:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426174746c6520646f6573206e6f74206578697374",
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3433:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2dae7c63f6305af19a395c7310c7a132a9c999e94714d71ec139465e375c7abb",
                                "typeString": "literal_string \"Battle does not exist\""
                              },
                              "value": "Battle does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2dae7c63f6305af19a395c7310c7a132a9c999e94714d71ec139465e375c7abb",
                                "typeString": "literal_string \"Battle does not exist\""
                              }
                            ],
                            "id": 342,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3397:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "3397:60:0"
                      },
                      {
                        "assignments": [
                          352
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 352,
                            "mutability": "mutable",
                            "name": "currentBattle",
                            "nameLocation": "3482:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "3467:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                              "typeString": "struct Arena.Battle"
                            },
                            "typeName": {
                              "id": 351,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 350,
                                "name": "Battle",
                                "nameLocations": [
                                  "3467:6:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32,
                                "src": "3467:6:0"
                              },
                              "referencedDeclaration": 32,
                              "src": "3467:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                "typeString": "struct Arena.Battle"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 356,
                        "initialValue": {
                          "baseExpression": {
                            "id": 353,
                            "name": "battles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "3498:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                              "typeString": "struct Arena.Battle storage ref[] storage ref"
                            }
                          },
                          "id": 355,
                          "indexExpression": {
                            "id": 354,
                            "name": "_battleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "3506:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3498:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Battle_$32_storage",
                            "typeString": "struct Arena.Battle storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3467:49:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_BattleStatus_$14",
                                "typeString": "enum Arena.BattleStatus"
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 358,
                                  "name": "currentBattle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 352,
                                  "src": "3534:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                    "typeString": "struct Arena.Battle storage pointer"
                                  }
                                },
                                "id": 359,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3548:6:0",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29,
                                "src": "3534:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_BattleStatus_$14",
                                  "typeString": "enum Arena.BattleStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 360,
                                  "name": "BattleStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "3558:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_BattleStatus_$14_$",
                                    "typeString": "type(enum Arena.BattleStatus)"
                                  }
                                },
                                "id": 361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3571:7:0",
                                "memberName": "Ongoing",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12,
                                "src": "3558:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_BattleStatus_$14",
                                  "typeString": "enum Arena.BattleStatus"
                                }
                              },
                              "src": "3534:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426174746c6520697320616c72656164792066696e6973686564",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3580:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aa4ecc9358ce6ad6330ecb2a7adc5604d42cd563da542df4d30926e59aae4b3b",
                                "typeString": "literal_string \"Battle is already finished\""
                              },
                              "value": "Battle is already finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aa4ecc9358ce6ad6330ecb2a7adc5604d42cd563da542df4d30926e59aae4b3b",
                                "typeString": "literal_string \"Battle is already finished\""
                              }
                            ],
                            "id": 357,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3526:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "3526:83:0"
                      },
                      {
                        "assignments": [
                          367
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 367,
                            "mutability": "mutable",
                            "name": "agent1Id",
                            "nameLocation": "3628:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "3620:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 366,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3620:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 372,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 368,
                              "name": "currentBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "3639:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                "typeString": "struct Arena.Battle storage pointer"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3653:8:0",
                            "memberName": "agentIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "3639:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 371,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3662:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3639:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3620:44:0"
                      },
                      {
                        "assignments": [
                          374
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 374,
                            "mutability": "mutable",
                            "name": "agent2Id",
                            "nameLocation": "3682:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "3674:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 373,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3674:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 379,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 375,
                              "name": "currentBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "3693:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                "typeString": "struct Arena.Battle storage pointer"
                              }
                            },
                            "id": 376,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3707:8:0",
                            "memberName": "agentIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "3693:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 378,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3716:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3693:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3674:44:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "3736:24:0",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 381,
                                    "name": "agentInBattle",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "3737:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 383,
                                  "indexExpression": {
                                    "id": 382,
                                    "name": "agent1Id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 367,
                                    "src": "3751:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3737:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "3764:24:0",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 385,
                                    "name": "agentInBattle",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "3765:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 387,
                                  "indexExpression": {
                                    "id": 386,
                                    "name": "agent2Id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "3779:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3765:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3736:52:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4167656e7420616c726561647920696e20626174746c65",
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3790:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_291ac9c7916825c1f892e5ab5495727e332be642db1f3e18e259e0cfed7ab80a",
                                "typeString": "literal_string \"Agent already in battle\""
                              },
                              "value": "Agent already in battle"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_291ac9c7916825c1f892e5ab5495727e332be642db1f3e18e259e0cfed7ab80a",
                                "typeString": "literal_string \"Agent already in battle\""
                              }
                            ],
                            "id": 380,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3728:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3728:88:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 392,
                        "nodeType": "ExpressionStatement",
                        "src": "3728:88:0"
                      },
                      {
                        "expression": {
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 393,
                              "name": "agentInBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "3827:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 395,
                            "indexExpression": {
                              "id": 394,
                              "name": "agent1Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "3841:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3827:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3853:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3827:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 398,
                        "nodeType": "ExpressionStatement",
                        "src": "3827:30:0"
                      },
                      {
                        "expression": {
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 399,
                              "name": "agentInBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "3867:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 401,
                            "indexExpression": {
                              "id": 400,
                              "name": "agent2Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "3881:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3867:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3893:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3867:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 404,
                        "nodeType": "ExpressionStatement",
                        "src": "3867:30:0"
                      },
                      {
                        "assignments": [
                          409
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 409,
                            "mutability": "mutable",
                            "name": "agent1",
                            "nameLocation": "3943:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "3916:33:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                              "typeString": "struct IAgentFactory.Agent"
                            },
                            "typeName": {
                              "id": 408,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 407,
                                "name": "IAgentFactory.Agent",
                                "nameLocations": [
                                  "3916:13:0",
                                  "3930:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1142,
                                "src": "3916:19:0"
                              },
                              "referencedDeclaration": 1142,
                              "src": "3916:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                                "typeString": "struct IAgentFactory.Agent"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 414,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 412,
                              "name": "agent1Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "3974:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 410,
                              "name": "agentFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "3952:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                                "typeString": "contract IAgentFactory"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3965:8:0",
                            "memberName": "getAgent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "3952:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Agent_$1142_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct IAgentFactory.Agent memory)"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3952:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                            "typeString": "struct IAgentFactory.Agent memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3916:67:0"
                      },
                      {
                        "assignments": [
                          419
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 419,
                            "mutability": "mutable",
                            "name": "agent2",
                            "nameLocation": "4020:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "3993:33:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                              "typeString": "struct IAgentFactory.Agent"
                            },
                            "typeName": {
                              "id": 418,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 417,
                                "name": "IAgentFactory.Agent",
                                "nameLocations": [
                                  "3993:13:0",
                                  "4007:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1142,
                                "src": "3993:19:0"
                              },
                              "referencedDeclaration": 1142,
                              "src": "3993:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                                "typeString": "struct IAgentFactory.Agent"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 424,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 422,
                              "name": "agent2Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "4051:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 420,
                              "name": "agentFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "4029:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                                "typeString": "contract IAgentFactory"
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4042:8:0",
                            "memberName": "getAgent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1150,
                            "src": "4029:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Agent_$1142_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct IAgentFactory.Agent memory)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                            "typeString": "struct IAgentFactory.Agent memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3993:67:0"
                      },
                      {
                        "assignments": [
                          426
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 426,
                            "mutability": "mutable",
                            "name": "health1",
                            "nameLocation": "4079:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "4071:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 425,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4071:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 432,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 427,
                              "name": "battleAgentHealth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "4089:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "id": 428,
                              "name": "_battleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "4107:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4089:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 431,
                          "indexExpression": {
                            "id": 430,
                            "name": "agent1Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "4118:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4089:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4071:56:0"
                      },
                      {
                        "assignments": [
                          434
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 434,
                            "mutability": "mutable",
                            "name": "health2",
                            "nameLocation": "4145:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "4137:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 433,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4137:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 435,
                              "name": "battleAgentHealth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "4155:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 437,
                            "indexExpression": {
                              "id": 436,
                              "name": "_battleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "4173:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4155:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 439,
                          "indexExpression": {
                            "id": 438,
                            "name": "agent2Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "4184:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4155:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4137:56:0"
                      },
                      {
                        "assignments": [
                          442
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 442,
                            "mutability": "mutable",
                            "name": "winnerId",
                            "nameLocation": "4212:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "4204:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 441,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4204:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 443,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4204:16:0"
                      },
                      {
                        "assignments": [
                          445
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 445,
                            "mutability": "mutable",
                            "name": "loserId",
                            "nameLocation": "4238:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "4230:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 444,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4230:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 446,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4230:15:0"
                      },
                      {
                        "assignments": [
                          448
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 448,
                            "mutability": "mutable",
                            "name": "randomSeed",
                            "nameLocation": "4333:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 710,
                            "src": "4325:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 447,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4325:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 460,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 453,
                                          "name": "cadenceArch",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7,
                                          "src": "4386:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 452,
                                        "name": "ICadenceArch",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1106,
                                        "src": "4373:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ICadenceArch_$1106_$",
                                          "typeString": "type(contract ICadenceArch)"
                                        }
                                      },
                                      "id": 454,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4373:25:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ICadenceArch_$1106",
                                        "typeString": "contract ICadenceArch"
                                      }
                                    },
                                    "id": 455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4399:16:0",
                                    "memberName": "revertibleRandom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1105,
                                    "src": "4373:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
                                      "typeString": "function () view external returns (uint64)"
                                    }
                                  },
                                  "id": 456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4373:44:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                {
                                  "id": 457,
                                  "name": "_battleId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 339,
                                  "src": "4419:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 450,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4356:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4360:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4356:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4356:73:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 449,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4346:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4346:84:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4325:105:0"
                      },
                      {
                        "body": {
                          "id": 607,
                          "nodeType": "Block",
                          "src": "4509:1859:0",
                          "statements": [
                            {
                              "assignments": [
                                473
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 473,
                                  "mutability": "mutable",
                                  "name": "attackParams1",
                                  "nameLocation": "4606:13:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 607,
                                  "src": "4582:37:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters"
                                  },
                                  "typeName": {
                                    "id": 472,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 471,
                                      "name": "AttackParameters",
                                      "nameLocations": [
                                        "4582:16:0"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 71,
                                      "src": "4582:16:0"
                                    },
                                    "referencedDeclaration": 71,
                                    "src": "4582:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_storage_ptr",
                                      "typeString": "struct Arena.AttackParameters"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 489,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 475,
                                    "name": "agent1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 409,
                                    "src": "4667:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 476,
                                        "name": "currentBattle",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 352,
                                        "src": "4708:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                          "typeString": "struct Arena.Battle storage pointer"
                                        }
                                      },
                                      "id": 477,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4722:7:0",
                                      "memberName": "tactics",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "4708:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage",
                                        "typeString": "struct BattleTactics storage ref[] storage ref"
                                      }
                                    },
                                    "id": 479,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4730:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4708:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    }
                                  },
                                  {
                                    "id": 480,
                                    "name": "agent2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "4760:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 481,
                                        "name": "currentBattle",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 352,
                                        "src": "4801:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                          "typeString": "struct Arena.Battle storage pointer"
                                        }
                                      },
                                      "id": 482,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4815:7:0",
                                      "memberName": "tactics",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "4801:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage",
                                        "typeString": "struct BattleTactics storage ref[] storage ref"
                                      }
                                    },
                                    "id": 484,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4823:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4801:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 485,
                                      "name": "currentBattle",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 352,
                                      "src": "4850:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                        "typeString": "struct Arena.Battle storage pointer"
                                      }
                                    },
                                    "id": 486,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4864:5:0",
                                    "memberName": "arena",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "4850:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ArenaType_$11",
                                      "typeString": "enum Arena.ArenaType"
                                    }
                                  },
                                  {
                                    "id": 487,
                                    "name": "randomSeed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 448,
                                    "src": "4899:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_ArenaType_$11",
                                      "typeString": "enum Arena.ArenaType"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 474,
                                  "name": "AttackParameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "4622:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_AttackParameters_$71_storage_ptr_$",
                                    "typeString": "type(struct Arena.AttackParameters storage pointer)"
                                  }
                                },
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "4657:8:0",
                                  "4691:15:0",
                                  "4750:8:0",
                                  "4784:15:0",
                                  "4843:5:0",
                                  "4887:10:0"
                                ],
                                "names": [
                                  "attacker",
                                  "attackerTactics",
                                  "defender",
                                  "defenderTactics",
                                  "arena",
                                  "randomSeed"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "4622:302:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                  "typeString": "struct Arena.AttackParameters memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4582:342:0"
                            },
                            {
                              "assignments": [
                                491
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 491,
                                  "mutability": "mutable",
                                  "name": "damageTo2",
                                  "nameLocation": "4986:9:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 607,
                                  "src": "4978:17:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 490,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4978:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 495,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 493,
                                    "name": "attackParams1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 473,
                                    "src": "5025:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  ],
                                  "id": 492,
                                  "name": "_resolveAttackAndGetDamage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1008,
                                  "src": "4998:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_AttackParameters_$71_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Arena.AttackParameters memory) pure returns (uint256)"
                                  }
                                },
                                "id": 494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4998:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4978:61:0"
                            },
                            {
                              "expression": {
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 496,
                                  "name": "health2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 434,
                                  "src": "5053:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 497,
                                          "name": "damageTo2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 491,
                                          "src": "5064:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">=",
                                        "rightExpression": {
                                          "id": 498,
                                          "name": "health2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 434,
                                          "src": "5077:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5064:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 500,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5063:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 504,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 502,
                                          "name": "health2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 434,
                                          "src": "5093:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 503,
                                          "name": "damageTo2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 491,
                                          "src": "5103:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5093:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 505,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5092:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "5063:50:0",
                                  "trueExpression": {
                                    "hexValue": "30",
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5088:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5053:60:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 508,
                              "nodeType": "ExpressionStatement",
                              "src": "5053:60:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 510,
                                    "name": "_battleId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 339,
                                    "src": "5139:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 511,
                                    "name": "agent1Id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 367,
                                    "src": "5150:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 512,
                                    "name": "agent2Id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "5160:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 513,
                                    "name": "damageTo2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 491,
                                    "src": "5170:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 509,
                                  "name": "Attack",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "5132:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5132:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 515,
                              "nodeType": "EmitStatement",
                              "src": "5127:53:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 516,
                                  "name": "health2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 434,
                                  "src": "5198:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5209:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5198:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 529,
                              "nodeType": "IfStatement",
                              "src": "5194:129:0",
                              "trueBody": {
                                "id": 528,
                                "nodeType": "Block",
                                "src": "5212:111:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 521,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 519,
                                        "name": "winnerId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 442,
                                        "src": "5230:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 520,
                                        "name": "agent1Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 367,
                                        "src": "5241:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5230:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 522,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5230:19:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 525,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 523,
                                        "name": "loserId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 445,
                                        "src": "5267:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 524,
                                        "name": "agent2Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 374,
                                        "src": "5277:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5267:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 526,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5267:18:0"
                                  },
                                  {
                                    "id": 527,
                                    "nodeType": "Break",
                                    "src": "5303:5:0"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 530,
                                  "name": "randomSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "5425:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 534,
                                          "name": "randomSeed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 448,
                                          "src": "5465:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 532,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "5448:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 533,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "5452:12:0",
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "5448:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5448:28:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 531,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5438:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5438:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "5425:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 538,
                              "nodeType": "ExpressionStatement",
                              "src": "5425:52:0"
                            },
                            {
                              "assignments": [
                                541
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 541,
                                  "mutability": "mutable",
                                  "name": "attackParams2",
                                  "nameLocation": "5575:13:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 607,
                                  "src": "5551:37:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters"
                                  },
                                  "typeName": {
                                    "id": 540,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 539,
                                      "name": "AttackParameters",
                                      "nameLocations": [
                                        "5551:16:0"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 71,
                                      "src": "5551:16:0"
                                    },
                                    "referencedDeclaration": 71,
                                    "src": "5551:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_storage_ptr",
                                      "typeString": "struct Arena.AttackParameters"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 557,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 543,
                                    "name": "agent2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "5636:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 544,
                                        "name": "currentBattle",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 352,
                                        "src": "5677:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                          "typeString": "struct Arena.Battle storage pointer"
                                        }
                                      },
                                      "id": 545,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5691:7:0",
                                      "memberName": "tactics",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "5677:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage",
                                        "typeString": "struct BattleTactics storage ref[] storage ref"
                                      }
                                    },
                                    "id": 547,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5699:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5677:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    }
                                  },
                                  {
                                    "id": 548,
                                    "name": "agent1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 409,
                                    "src": "5729:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 549,
                                        "name": "currentBattle",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 352,
                                        "src": "5770:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                          "typeString": "struct Arena.Battle storage pointer"
                                        }
                                      },
                                      "id": 550,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5784:7:0",
                                      "memberName": "tactics",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 23,
                                      "src": "5770:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage",
                                        "typeString": "struct BattleTactics storage ref[] storage ref"
                                      }
                                    },
                                    "id": 552,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 551,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5792:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5770:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 553,
                                      "name": "currentBattle",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 352,
                                      "src": "5819:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                        "typeString": "struct Arena.Battle storage pointer"
                                      }
                                    },
                                    "id": 554,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5833:5:0",
                                    "memberName": "arena",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "5819:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_ArenaType_$11",
                                      "typeString": "enum Arena.ArenaType"
                                    }
                                  },
                                  {
                                    "id": 555,
                                    "name": "randomSeed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 448,
                                    "src": "5868:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                      "typeString": "struct IAgentFactory.Agent memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_storage",
                                      "typeString": "struct BattleTactics storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_ArenaType_$11",
                                      "typeString": "enum Arena.ArenaType"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 542,
                                  "name": "AttackParameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "5591:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_AttackParameters_$71_storage_ptr_$",
                                    "typeString": "type(struct Arena.AttackParameters storage pointer)"
                                  }
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "5626:8:0",
                                  "5660:15:0",
                                  "5719:8:0",
                                  "5753:15:0",
                                  "5812:5:0",
                                  "5856:10:0"
                                ],
                                "names": [
                                  "attacker",
                                  "attackerTactics",
                                  "defender",
                                  "defenderTactics",
                                  "arena",
                                  "randomSeed"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5591:302:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                  "typeString": "struct Arena.AttackParameters memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5551:342:0"
                            },
                            {
                              "assignments": [
                                559
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 559,
                                  "mutability": "mutable",
                                  "name": "damageTo1",
                                  "nameLocation": "5955:9:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 607,
                                  "src": "5947:17:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 558,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5947:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 563,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 561,
                                    "name": "attackParams2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 541,
                                    "src": "5994:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  ],
                                  "id": 560,
                                  "name": "_resolveAttackAndGetDamage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1008,
                                  "src": "5967:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_AttackParameters_$71_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Arena.AttackParameters memory) pure returns (uint256)"
                                  }
                                },
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5967:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5947:61:0"
                            },
                            {
                              "expression": {
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 564,
                                  "name": "health1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "6022:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 567,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 565,
                                          "name": "damageTo1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 559,
                                          "src": "6033:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">=",
                                        "rightExpression": {
                                          "id": 566,
                                          "name": "health1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 426,
                                          "src": "6046:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6033:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 568,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6032:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 572,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 570,
                                          "name": "health1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 426,
                                          "src": "6062:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 571,
                                          "name": "damageTo1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 559,
                                          "src": "6072:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6062:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 573,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6061:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "6032:50:0",
                                  "trueExpression": {
                                    "hexValue": "30",
                                    "id": 569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6057:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6022:60:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 576,
                              "nodeType": "ExpressionStatement",
                              "src": "6022:60:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 578,
                                    "name": "_battleId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 339,
                                    "src": "6108:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 579,
                                    "name": "agent2Id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "6119:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 580,
                                    "name": "agent1Id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 367,
                                    "src": "6129:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 581,
                                    "name": "damageTo1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 559,
                                    "src": "6139:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 577,
                                  "name": "Attack",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "6101:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6101:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 583,
                              "nodeType": "EmitStatement",
                              "src": "6096:53:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 584,
                                  "name": "health1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "6167:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 585,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6178:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6167:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 597,
                              "nodeType": "IfStatement",
                              "src": "6163:129:0",
                              "trueBody": {
                                "id": 596,
                                "nodeType": "Block",
                                "src": "6181:111:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 589,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 587,
                                        "name": "winnerId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 442,
                                        "src": "6199:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 588,
                                        "name": "agent2Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 374,
                                        "src": "6210:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6199:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 590,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6199:19:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 591,
                                        "name": "loserId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 445,
                                        "src": "6236:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 592,
                                        "name": "agent1Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 367,
                                        "src": "6246:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6236:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 594,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6236:18:0"
                                  },
                                  {
                                    "id": 595,
                                    "nodeType": "Break",
                                    "src": "6272:5:0"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 598,
                                  "name": "randomSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "6305:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 602,
                                          "name": "randomSeed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 448,
                                          "src": "6345:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 600,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "6328:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 601,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "6332:12:0",
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "6328:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 603,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6328:28:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 599,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "6318:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6318:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "6305:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 606,
                              "nodeType": "ExpressionStatement",
                              "src": "6305:52:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 465,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "4497:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4501:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "4497:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 608,
                        "initializationExpression": {
                          "assignments": [
                            462
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 462,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4490:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 608,
                              "src": "4485:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 461,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4485:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 464,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4494:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4485:10:0"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4504:3:0",
                            "subExpression": {
                              "id": 468,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "4504:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 470,
                          "nodeType": "ExpressionStatement",
                          "src": "4504:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "4480:1888:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 609,
                            "name": "winnerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6455:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6467:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6455:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 671,
                        "nodeType": "IfStatement",
                        "src": "6451:463:0",
                        "trueBody": {
                          "id": 670,
                          "nodeType": "Block",
                          "src": "6470:444:0",
                          "statements": [
                            {
                              "assignments": [
                                613
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 613,
                                  "mutability": "mutable",
                                  "name": "initialHealth1",
                                  "nameLocation": "6492:14:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 670,
                                  "src": "6484:22:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 612,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6484:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 624,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 614,
                                      "name": "agent1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 409,
                                      "src": "6509:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                        "typeString": "struct IAgentFactory.Agent memory"
                                      }
                                    },
                                    "id": 615,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6516:5:0",
                                    "memberName": "level",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1132,
                                    "src": "6509:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3230",
                                    "id": 616,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6524:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    },
                                    "value": "20"
                                  },
                                  "src": "6509:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 618,
                                        "name": "agent1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 409,
                                        "src": "6529:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                          "typeString": "struct IAgentFactory.Agent memory"
                                        }
                                      },
                                      "id": 619,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6536:3:0",
                                      "memberName": "dna",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1137,
                                      "src": "6529:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                        "typeString": "struct IAgentFactory.DNA memory"
                                      }
                                    },
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6540:8:0",
                                    "memberName": "strength",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1121,
                                    "src": "6529:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "35",
                                    "id": 621,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6551:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_5_by_1",
                                      "typeString": "int_const 5"
                                    },
                                    "value": "5"
                                  },
                                  "src": "6529:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6509:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6484:68:0"
                            },
                            {
                              "assignments": [
                                626
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 626,
                                  "mutability": "mutable",
                                  "name": "initialHealth2",
                                  "nameLocation": "6574:14:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 670,
                                  "src": "6566:22:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 625,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6566:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 637,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 627,
                                      "name": "agent2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 419,
                                      "src": "6591:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                        "typeString": "struct IAgentFactory.Agent memory"
                                      }
                                    },
                                    "id": 628,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6598:5:0",
                                    "memberName": "level",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1132,
                                    "src": "6591:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3230",
                                    "id": 629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6606:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    },
                                    "value": "20"
                                  },
                                  "src": "6591:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 631,
                                        "name": "agent2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "6611:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                          "typeString": "struct IAgentFactory.Agent memory"
                                        }
                                      },
                                      "id": 632,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6618:3:0",
                                      "memberName": "dna",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1137,
                                      "src": "6611:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                        "typeString": "struct IAgentFactory.DNA memory"
                                      }
                                    },
                                    "id": 633,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6622:8:0",
                                    "memberName": "strength",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1121,
                                    "src": "6611:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "35",
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6633:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_5_by_1",
                                      "typeString": "int_const 5"
                                    },
                                    "value": "5"
                                  },
                                  "src": "6611:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6591:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6566:68:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 640,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 638,
                                          "name": "health1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 426,
                                          "src": "6653:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "313030",
                                          "id": 639,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6663:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "src": "6653:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 641,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6652:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 642,
                                    "name": "initialHealth1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 613,
                                    "src": "6670:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6652:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 646,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 644,
                                          "name": "health2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 434,
                                          "src": "6689:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "313030",
                                          "id": 645,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6699:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "src": "6689:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 647,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6688:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 648,
                                    "name": "initialHealth2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 626,
                                    "src": "6706:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6688:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6652:68:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 668,
                                "nodeType": "Block",
                                "src": "6816:88:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 660,
                                        "name": "winnerId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 442,
                                        "src": "6834:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 661,
                                        "name": "agent2Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 374,
                                        "src": "6845:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6834:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 663,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6834:19:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 666,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 664,
                                        "name": "loserId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 445,
                                        "src": "6871:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 665,
                                        "name": "agent1Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 367,
                                        "src": "6881:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6871:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 667,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6871:18:0"
                                  }
                                ]
                              },
                              "id": 669,
                              "nodeType": "IfStatement",
                              "src": "6648:256:0",
                              "trueBody": {
                                "id": 659,
                                "nodeType": "Block",
                                "src": "6722:88:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 651,
                                        "name": "winnerId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 442,
                                        "src": "6740:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 652,
                                        "name": "agent1Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 367,
                                        "src": "6751:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6740:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 654,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6740:19:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 655,
                                        "name": "loserId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 445,
                                        "src": "6777:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 656,
                                        "name": "agent2Id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 374,
                                        "src": "6787:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6777:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 658,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6777:18:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 672,
                              "name": "currentBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "6951:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                "typeString": "struct Arena.Battle storage pointer"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6965:6:0",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "6951:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BattleStatus_$14",
                              "typeString": "enum Arena.BattleStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 675,
                              "name": "BattleStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "6974:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BattleStatus_$14_$",
                                "typeString": "type(enum Arena.BattleStatus)"
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6987:8:0",
                            "memberName": "Finished",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "6974:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BattleStatus_$14",
                              "typeString": "enum Arena.BattleStatus"
                            }
                          },
                          "src": "6951:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BattleStatus_$14",
                            "typeString": "enum Arena.BattleStatus"
                          }
                        },
                        "id": 678,
                        "nodeType": "ExpressionStatement",
                        "src": "6951:44:0"
                      },
                      {
                        "expression": {
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 679,
                              "name": "currentBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "7005:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                "typeString": "struct Arena.Battle storage pointer"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7019:6:0",
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "7005:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 682,
                            "name": "winnerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "7028:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7005:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 684,
                        "nodeType": "ExpressionStatement",
                        "src": "7005:31:0"
                      },
                      {
                        "expression": {
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 685,
                              "name": "agentInBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "7046:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 687,
                            "indexExpression": {
                              "id": 686,
                              "name": "agent1Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "7060:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7046:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7072:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "7046:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 690,
                        "nodeType": "ExpressionStatement",
                        "src": "7046:31:0"
                      },
                      {
                        "expression": {
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 691,
                              "name": "agentInBattle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "7087:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 693,
                            "indexExpression": {
                              "id": 692,
                              "name": "agent2Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "7101:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7087:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7113:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "7087:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 696,
                        "nodeType": "ExpressionStatement",
                        "src": "7087:31:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 700,
                              "name": "winnerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "7156:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "3530",
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7166:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              }
                            ],
                            "expression": {
                              "id": 697,
                              "name": "agentFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "7128:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAgentFactory_$1158",
                                "typeString": "contract IAgentFactory"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7141:14:0",
                            "memberName": "gainExperience",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1157,
                            "src": "7128:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7128:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "7128:41:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "_battleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "7220:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 706,
                              "name": "winnerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "7231:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 707,
                              "name": "loserId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "7241:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 704,
                            "name": "BattleFinished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "7205:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7205:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "EmitStatement",
                        "src": "7200:49:0"
                      }
                    ]
                  },
                  "functionSelector": "df6a37aa",
                  "id": 711,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fight",
                  "nameLocation": "3355:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "_battleId",
                        "nameLocation": "3369:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 711,
                        "src": "3361:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3361:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3360:19:0"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3387:0:0"
                  },
                  "scope": 1098,
                  "src": "3346:3910:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1007,
                    "nodeType": "Block",
                    "src": "7367:2800:0",
                    "statements": [
                      {
                        "assignments": [
                          720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 720,
                            "mutability": "mutable",
                            "name": "attackPower",
                            "nameLocation": "7422:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "7414:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 719,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7414:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 732,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 721,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 714,
                                    "src": "7436:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7443:8:0",
                                  "memberName": "attacker",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 56,
                                  "src": "7436:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                    "typeString": "struct IAgentFactory.Agent memory"
                                  }
                                },
                                "id": 723,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7452:3:0",
                                "memberName": "dna",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1137,
                                "src": "7436:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                  "typeString": "struct IAgentFactory.DNA memory"
                                }
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7456:8:0",
                              "memberName": "strength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1121,
                              "src": "7436:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7467:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "7436:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 727,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 714,
                                  "src": "7471:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters memory"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7478:8:0",
                                "memberName": "attacker",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 56,
                                "src": "7471:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                  "typeString": "struct IAgentFactory.Agent memory"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7487:3:0",
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1137,
                              "src": "7471:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                "typeString": "struct IAgentFactory.DNA memory"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7491:12:0",
                            "memberName": "intelligence",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1125,
                            "src": "7471:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7436:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7414:89:0"
                      },
                      {
                        "assignments": [
                          734
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 734,
                            "mutability": "mutable",
                            "name": "defensePower",
                            "nameLocation": "7521:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "7513:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 733,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7513:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 746,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 735,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 714,
                                  "src": "7536:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters memory"
                                  }
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7543:8:0",
                                "memberName": "defender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 62,
                                "src": "7536:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                  "typeString": "struct IAgentFactory.Agent memory"
                                }
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7552:3:0",
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1137,
                              "src": "7536:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                "typeString": "struct IAgentFactory.DNA memory"
                              }
                            },
                            "id": 738,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7556:8:0",
                            "memberName": "strength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1121,
                            "src": "7536:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 739,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 714,
                                    "src": "7567:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7574:8:0",
                                  "memberName": "defender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 62,
                                  "src": "7567:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                    "typeString": "struct IAgentFactory.Agent memory"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7583:3:0",
                                "memberName": "dna",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1137,
                                "src": "7567:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                  "typeString": "struct IAgentFactory.DNA memory"
                                }
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7587:12:0",
                              "memberName": "intelligence",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1125,
                              "src": "7567:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7602:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "7567:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7536:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7513:90:0"
                      },
                      {
                        "assignments": [
                          748
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 748,
                            "mutability": "mutable",
                            "name": "attackModifier",
                            "nameLocation": "7734:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "7726:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7726:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 750,
                        "initialValue": {
                          "hexValue": "313030",
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7751:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7726:28:0"
                      },
                      {
                        "assignments": [
                          752
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 752,
                            "mutability": "mutable",
                            "name": "defenseModifier",
                            "nameLocation": "7772:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "7764:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 751,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7764:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 754,
                        "initialValue": {
                          "hexValue": "313030",
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7790:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7764:29:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Strategy_$1111",
                            "typeString": "enum Strategy"
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 755,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 714,
                                "src": "7845:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                  "typeString": "struct Arena.AttackParameters memory"
                                }
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7852:15:0",
                              "memberName": "attackerTactics",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "7845:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                "typeString": "struct BattleTactics memory"
                              }
                            },
                            "id": 757,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7868:8:0",
                            "memberName": "strategy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "7845:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Strategy_$1111",
                              "typeString": "enum Strategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 758,
                              "name": "Strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "7880:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Strategy_$1111_$",
                                "typeString": "type(enum Strategy)"
                              }
                            },
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7889:9:0",
                            "memberName": "Berserker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1108,
                            "src": "7880:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Strategy_$1111",
                              "typeString": "enum Strategy"
                            }
                          },
                          "src": "7845:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Strategy_$1111",
                              "typeString": "enum Strategy"
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 766,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 714,
                                  "src": "7958:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters memory"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7965:15:0",
                                "memberName": "attackerTactics",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "7958:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                  "typeString": "struct BattleTactics memory"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7981:8:0",
                              "memberName": "strategy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1116,
                              "src": "7958:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Strategy_$1111",
                                "typeString": "enum Strategy"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 769,
                                "name": "Strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "7993:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Strategy_$1111_$",
                                  "typeString": "type(enum Strategy)"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8002:9:0",
                              "memberName": "Tactician",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1109,
                              "src": "7993:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Strategy_$1111",
                                "typeString": "enum Strategy"
                              }
                            },
                            "src": "7958:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 781,
                          "nodeType": "IfStatement",
                          "src": "7954:107:0",
                          "trueBody": {
                            "id": 780,
                            "nodeType": "Block",
                            "src": "8013:48:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 772,
                                    "name": "attackModifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 748,
                                    "src": "8015:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "hexValue": "3135",
                                    "id": 773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8033:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_15_by_1",
                                      "typeString": "int_const 15"
                                    },
                                    "value": "15"
                                  },
                                  "src": "8015:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 775,
                                "nodeType": "ExpressionStatement",
                                "src": "8015:20:0"
                              },
                              {
                                "expression": {
                                  "id": 778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 776,
                                    "name": "defenseModifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "8037:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "hexValue": "3135",
                                    "id": 777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8056:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_15_by_1",
                                      "typeString": "int_const 15"
                                    },
                                    "value": "15"
                                  },
                                  "src": "8037:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 779,
                                "nodeType": "ExpressionStatement",
                                "src": "8037:21:0"
                              }
                            ]
                          }
                        },
                        "id": 782,
                        "nodeType": "IfStatement",
                        "src": "7841:220:0",
                        "trueBody": {
                          "id": 765,
                          "nodeType": "Block",
                          "src": "7900:25:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 761,
                                  "name": "attackModifier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 748,
                                  "src": "7902:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "3330",
                                  "id": 762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7920:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_30_by_1",
                                    "typeString": "int_const 30"
                                  },
                                  "value": "30"
                                },
                                "src": "7902:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 764,
                              "nodeType": "ExpressionStatement",
                              "src": "7902:20:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Strategy_$1111",
                            "typeString": "enum Strategy"
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 783,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 714,
                                "src": "8135:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                  "typeString": "struct Arena.AttackParameters memory"
                                }
                              },
                              "id": 784,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8142:15:0",
                              "memberName": "defenderTactics",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65,
                              "src": "8135:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                "typeString": "struct BattleTactics memory"
                              }
                            },
                            "id": 785,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8158:8:0",
                            "memberName": "strategy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "8135:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Strategy_$1111",
                              "typeString": "enum Strategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 786,
                              "name": "Strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1111,
                              "src": "8170:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Strategy_$1111_$",
                                "typeString": "type(enum Strategy)"
                              }
                            },
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8179:9:0",
                            "memberName": "Defensive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1110,
                            "src": "8170:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Strategy_$1111",
                              "typeString": "enum Strategy"
                            }
                          },
                          "src": "8135:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 794,
                        "nodeType": "IfStatement",
                        "src": "8131:85:0",
                        "trueBody": {
                          "id": 793,
                          "nodeType": "Block",
                          "src": "8190:26:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 789,
                                  "name": "defenseModifier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 752,
                                  "src": "8192:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "3330",
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8211:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_30_by_1",
                                    "typeString": "int_const 30"
                                  },
                                  "value": "30"
                                },
                                "src": "8192:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 792,
                              "nodeType": "ExpressionStatement",
                              "src": "8192:21:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 795,
                            "name": "attackModifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "8311:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 796,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 714,
                                      "src": "8330:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                        "typeString": "struct Arena.AttackParameters memory"
                                      }
                                    },
                                    "id": 797,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8337:15:0",
                                    "memberName": "attackerTactics",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "8330:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8353:14:0",
                                  "memberName": "aggressiveness",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1113,
                                  "src": "8330:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8370:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "8330:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 801,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8329:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8311:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 803,
                        "nodeType": "ExpressionStatement",
                        "src": "8311:61:0"
                      },
                      {
                        "expression": {
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 804,
                            "name": "defenseModifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "8396:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 805,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 714,
                                      "src": "8416:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                        "typeString": "struct Arena.AttackParameters memory"
                                      }
                                    },
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8423:15:0",
                                    "memberName": "attackerTactics",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "8416:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8439:14:0",
                                  "memberName": "aggressiveness",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1113,
                                  "src": "8416:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8456:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "8416:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 810,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8415:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "8396:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 812,
                        "nodeType": "ExpressionStatement",
                        "src": "8396:62:0"
                      },
                      {
                        "expression": {
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 813,
                            "name": "attackPower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8483:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 814,
                                    "name": "attackPower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 720,
                                    "src": "8498:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 815,
                                    "name": "attackModifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 748,
                                    "src": "8512:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8498:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 817,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8497:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8530:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8497:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8483:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "8483:50:0"
                      },
                      {
                        "expression": {
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 822,
                            "name": "defensePower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "8543:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 825,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 823,
                                    "name": "defensePower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 734,
                                    "src": "8559:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 824,
                                    "name": "defenseModifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 752,
                                    "src": "8574:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8559:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 826,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8558:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8593:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8558:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8543:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "8543:53:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 831,
                            "name": "attackPower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8657:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 832,
                            "name": "defensePower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "8672:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8657:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 837,
                        "nodeType": "IfStatement",
                        "src": "8653:46:0",
                        "trueBody": {
                          "id": 836,
                          "nodeType": "Block",
                          "src": "8686:13:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "31",
                                "id": 834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8695:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "functionReturnParameters": 718,
                              "id": 835,
                              "nodeType": "Return",
                              "src": "8688:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          839
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 839,
                            "mutability": "mutable",
                            "name": "damage",
                            "nameLocation": "8756:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "8748:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 838,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8748:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 843,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 840,
                            "name": "attackPower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8765:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 841,
                            "name": "defensePower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "8779:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8765:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8748:43:0"
                      },
                      {
                        "assignments": [
                          845
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 845,
                            "mutability": "mutable",
                            "name": "evasionRoll",
                            "nameLocation": "8868:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "8860:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 844,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8860:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 859,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 852,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 714,
                                          "src": "8906:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                            "typeString": "struct Arena.AttackParameters memory"
                                          }
                                        },
                                        "id": 853,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8913:10:0",
                                        "memberName": "randomSeed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 70,
                                        "src": "8906:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 851,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8898:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes20_$",
                                        "typeString": "type(bytes20)"
                                      },
                                      "typeName": {
                                        "id": 850,
                                        "name": "bytes20",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8898:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8898:26:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes20",
                                      "typeString": "bytes20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes20",
                                      "typeString": "bytes20"
                                    }
                                  ],
                                  "id": 849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8890:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 848,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8890:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8890:35:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8882:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 846,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8882:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8882:44:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8929:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8882:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8860:72:0"
                      },
                      {
                        "assignments": [
                          861
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 861,
                            "mutability": "mutable",
                            "name": "evasionChance",
                            "nameLocation": "9017:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "9009:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 860,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9009:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 874,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 862,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 714,
                                    "src": "9033:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9040:8:0",
                                  "memberName": "defender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 62,
                                  "src": "9033:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                    "typeString": "struct IAgentFactory.Agent memory"
                                  }
                                },
                                "id": 864,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9049:3:0",
                                "memberName": "dna",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1137,
                                "src": "9033:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                  "typeString": "struct IAgentFactory.DNA memory"
                                }
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9053:7:0",
                              "memberName": "agility",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1123,
                              "src": "9033:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "3530",
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9063:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            },
                            "src": "9033:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 869,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 714,
                                  "src": "9073:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters memory"
                                  }
                                },
                                "id": 870,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9080:8:0",
                                "memberName": "defender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 62,
                                "src": "9073:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                  "typeString": "struct IAgentFactory.Agent memory"
                                }
                              },
                              "id": 871,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9089:3:0",
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1137,
                              "src": "9073:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                "typeString": "struct IAgentFactory.DNA memory"
                              }
                            },
                            "id": 872,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9093:7:0",
                            "memberName": "agility",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1123,
                            "src": "9073:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9033:67:0",
                          "trueExpression": {
                            "hexValue": "3530",
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9068:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9009:91:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 875,
                            "name": "evasionRoll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "9114:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 876,
                            "name": "evasionChance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 861,
                            "src": "9128:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9114:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 881,
                        "nodeType": "IfStatement",
                        "src": "9110:46:0",
                        "trueBody": {
                          "id": 880,
                          "nodeType": "Block",
                          "src": "9143:13:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9152:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 718,
                              "id": 879,
                              "nodeType": "Return",
                              "src": "9145:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          883
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 883,
                            "mutability": "mutable",
                            "name": "luckRoll",
                            "nameLocation": "9269:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "9261:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 882,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9261:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 900,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            "id": 893,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 890,
                                                "name": "params",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 714,
                                                "src": "9305:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                                  "typeString": "struct Arena.AttackParameters memory"
                                                }
                                              },
                                              "id": 891,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "9312:10:0",
                                              "memberName": "randomSeed",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 70,
                                              "src": "9305:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<<",
                                            "rightExpression": {
                                              "hexValue": "313630",
                                              "id": 892,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9326:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_160_by_1",
                                                "typeString": "int_const 160"
                                              },
                                              "value": "160"
                                            },
                                            "src": "9305:24:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 889,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "9297:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes20_$",
                                            "typeString": "type(bytes20)"
                                          },
                                          "typeName": {
                                            "id": 888,
                                            "name": "bytes20",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "9297:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 894,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9297:33:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes20",
                                          "typeString": "bytes20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes20",
                                          "typeString": "bytes20"
                                        }
                                      ],
                                      "id": 887,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9289:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint160_$",
                                        "typeString": "type(uint160)"
                                      },
                                      "typeName": {
                                        "id": 886,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9289:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 895,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9289:42:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  ],
                                  "id": 885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9281:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 884,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9281:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9281:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 897,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9280:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9336:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "9280:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9261:78:0"
                      },
                      {
                        "assignments": [
                          902
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 902,
                            "mutability": "mutable",
                            "name": "critChance",
                            "nameLocation": "9357:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "9349:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 901,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9349:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 908,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 903,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 714,
                                "src": "9370:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                  "typeString": "struct Arena.AttackParameters memory"
                                }
                              },
                              "id": 904,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9377:15:0",
                              "memberName": "attackerTactics",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "9370:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                "typeString": "struct BattleTactics memory"
                              }
                            },
                            "id": 905,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9393:13:0",
                            "memberName": "riskTolerance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1118,
                            "src": "9370:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9409:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "9370:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9349:61:0"
                      },
                      {
                        "assignments": [
                          910
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 910,
                            "mutability": "mutable",
                            "name": "fumbleChance",
                            "nameLocation": "9439:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1007,
                            "src": "9431:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 909,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9431:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 919,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "313030",
                                  "id": 911,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9455:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 912,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 714,
                                      "src": "9461:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                        "typeString": "struct Arena.AttackParameters memory"
                                      }
                                    },
                                    "id": 913,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9468:15:0",
                                    "memberName": "attackerTactics",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "9461:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BattleTactics_$1119_memory_ptr",
                                      "typeString": "struct BattleTactics memory"
                                    }
                                  },
                                  "id": 914,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9484:13:0",
                                  "memberName": "riskTolerance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1118,
                                  "src": "9461:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "9455:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 916,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9454:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9501:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "9454:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9431:71:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 920,
                            "name": "luckRoll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "9528:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 921,
                            "name": "critChance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "9539:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9528:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 933,
                              "name": "luckRoll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "9630:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 934,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9642:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 935,
                                    "name": "fumbleChance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "9648:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9642:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 937,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9641:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9630:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 949,
                          "nodeType": "IfStatement",
                          "src": "9626:68:0",
                          "trueBody": {
                            "id": 948,
                            "nodeType": "Block",
                            "src": "9663:31:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 939,
                                    "name": "damage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 839,
                                    "src": "9665:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 945,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 942,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 940,
                                            "name": "damage",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 839,
                                            "src": "9675:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "35",
                                            "id": 941,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9684:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_5_by_1",
                                              "typeString": "int_const 5"
                                            },
                                            "value": "5"
                                          },
                                          "src": "9675:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 943,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9674:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3130",
                                      "id": 944,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9689:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "9674:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9665:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 947,
                                "nodeType": "ExpressionStatement",
                                "src": "9665:26:0"
                              }
                            ]
                          }
                        },
                        "id": 950,
                        "nodeType": "IfStatement",
                        "src": "9524:170:0",
                        "trueBody": {
                          "id": 932,
                          "nodeType": "Block",
                          "src": "9551:32:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 923,
                                  "name": "damage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "9553:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 929,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 924,
                                          "name": "damage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 839,
                                          "src": "9563:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3135",
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9572:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_15_by_1",
                                            "typeString": "int_const 15"
                                          },
                                          "value": "15"
                                        },
                                        "src": "9563:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 927,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9562:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3130",
                                    "id": 928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9578:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "src": "9562:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9553:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 931,
                              "nodeType": "ExpressionStatement",
                              "src": "9553:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ArenaType_$11",
                              "typeString": "enum Arena.ArenaType"
                            },
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 951,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 714,
                                "src": "9757:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                  "typeString": "struct Arena.AttackParameters memory"
                                }
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9764:5:0",
                              "memberName": "arena",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "9757:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 953,
                                "name": "ArenaType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "9773:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ArenaType_$11_$",
                                  "typeString": "type(enum Arena.ArenaType)"
                                }
                              },
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9783:14:0",
                              "memberName": "VolcanicPlains",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9,
                              "src": "9773:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              }
                            },
                            "src": "9757:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 956,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 714,
                                    "src": "9801:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                      "typeString": "struct Arena.AttackParameters memory"
                                    }
                                  },
                                  "id": 957,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9808:8:0",
                                  "memberName": "attacker",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 56,
                                  "src": "9801:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                    "typeString": "struct IAgentFactory.Agent memory"
                                  }
                                },
                                "id": 958,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9817:3:0",
                                "memberName": "dna",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1137,
                                "src": "9801:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                  "typeString": "struct IAgentFactory.DNA memory"
                                }
                              },
                              "id": 959,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9821:17:0",
                              "memberName": "elementalAffinity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1127,
                              "src": "9801:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9842:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9801:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9757:86:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              },
                              "id": 977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 973,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 714,
                                  "src": "9925:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                    "typeString": "struct Arena.AttackParameters memory"
                                  }
                                },
                                "id": 974,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9932:5:0",
                                "memberName": "arena",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 68,
                                "src": "9925:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ArenaType_$11",
                                  "typeString": "enum Arena.ArenaType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 975,
                                  "name": "ArenaType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "9941:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ArenaType_$11_$",
                                    "typeString": "type(enum Arena.ArenaType)"
                                  }
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "9951:12:0",
                                "memberName": "MysticForest",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10,
                                "src": "9941:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ArenaType_$11",
                                  "typeString": "enum Arena.ArenaType"
                                }
                              },
                              "src": "9925:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "expression": {
                                            "id": 978,
                                            "name": "params",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 714,
                                            "src": "9968:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                              "typeString": "struct Arena.AttackParameters memory"
                                            }
                                          },
                                          "id": 979,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9975:8:0",
                                          "memberName": "attacker",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 56,
                                          "src": "9968:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                            "typeString": "struct IAgentFactory.Agent memory"
                                          }
                                        },
                                        "id": 980,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9984:3:0",
                                        "memberName": "dna",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1137,
                                        "src": "9968:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                          "typeString": "struct IAgentFactory.DNA memory"
                                        }
                                      },
                                      "id": 981,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9988:17:0",
                                      "memberName": "elementalAffinity",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1127,
                                      "src": "9968:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "33",
                                      "id": 982,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10009:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "src": "9968:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "expression": {
                                            "id": 984,
                                            "name": "params",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 714,
                                            "src": "10014:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                                              "typeString": "struct Arena.AttackParameters memory"
                                            }
                                          },
                                          "id": 985,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "10021:8:0",
                                          "memberName": "attacker",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 56,
                                          "src": "10014:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                                            "typeString": "struct IAgentFactory.Agent memory"
                                          }
                                        },
                                        "id": 986,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "10030:3:0",
                                        "memberName": "dna",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1137,
                                        "src": "10014:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DNA_$1128_memory_ptr",
                                          "typeString": "struct IAgentFactory.DNA memory"
                                        }
                                      },
                                      "id": 987,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10034:17:0",
                                      "memberName": "elementalAffinity",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1127,
                                      "src": "10014:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "34",
                                      "id": 988,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10055:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "src": "10014:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "9968:88:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 991,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9967:90:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9925:132:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1003,
                          "nodeType": "IfStatement",
                          "src": "9921:216:0",
                          "trueBody": {
                            "id": 1002,
                            "nodeType": "Block",
                            "src": "10059:78:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 993,
                                    "name": "damage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 839,
                                    "src": "10089:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 996,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 994,
                                            "name": "damage",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 839,
                                            "src": "10099:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "313135",
                                            "id": 995,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10108:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_115_by_1",
                                              "typeString": "int_const 115"
                                            },
                                            "value": "115"
                                          },
                                          "src": "10099:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 997,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "10098:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "313030",
                                      "id": 998,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10115:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    },
                                    "src": "10098:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10089:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1001,
                                "nodeType": "ExpressionStatement",
                                "src": "10089:29:0"
                              }
                            ]
                          }
                        },
                        "id": 1004,
                        "nodeType": "IfStatement",
                        "src": "9753:384:0",
                        "trueBody": {
                          "id": 972,
                          "nodeType": "Block",
                          "src": "9845:70:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 963,
                                  "name": "damage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "9867:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 966,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 964,
                                          "name": "damage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 839,
                                          "src": "9877:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "313135",
                                          "id": 965,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9886:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_115_by_1",
                                            "typeString": "int_const 115"
                                          },
                                          "value": "115"
                                        },
                                        "src": "9877:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 967,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9876:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 968,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9893:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "9876:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9867:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 971,
                              "nodeType": "ExpressionStatement",
                              "src": "9867:29:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1005,
                          "name": "damage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "10154:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 718,
                        "id": 1006,
                        "nodeType": "Return",
                        "src": "10147:13:0"
                      }
                    ]
                  },
                  "id": 1008,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_resolveAttackAndGetDamage",
                  "nameLocation": "7276:26:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "7327:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1008,
                        "src": "7303:30:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttackParameters_$71_memory_ptr",
                          "typeString": "struct Arena.AttackParameters"
                        },
                        "typeName": {
                          "id": 713,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 712,
                            "name": "AttackParameters",
                            "nameLocations": [
                              "7303:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 71,
                            "src": "7303:16:0"
                          },
                          "referencedDeclaration": 71,
                          "src": "7303:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttackParameters_$71_storage_ptr",
                            "typeString": "struct Arena.AttackParameters"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7302:32:0"
                  },
                  "returnParameters": {
                    "id": 718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 717,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1008,
                        "src": "7358:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7357:9:0"
                  },
                  "scope": 1098,
                  "src": "7267:2900:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "10252:626:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1017,
                                "name": "_battleId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1010,
                                "src": "10270:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1018,
                                  "name": "battles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "10282:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                                    "typeString": "struct Arena.Battle storage ref[] storage ref"
                                  }
                                },
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10290:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10282:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10270:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426174746c6520646f6573206e6f74206578697374",
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10298:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2dae7c63f6305af19a395c7310c7a132a9c999e94714d71ec139465e375c7abb",
                                "typeString": "literal_string \"Battle does not exist\""
                              },
                              "value": "Battle does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2dae7c63f6305af19a395c7310c7a132a9c999e94714d71ec139465e375c7abb",
                                "typeString": "literal_string \"Battle does not exist\""
                              }
                            ],
                            "id": 1016,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10262:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10262:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1023,
                        "nodeType": "ExpressionStatement",
                        "src": "10262:60:0"
                      },
                      {
                        "assignments": [
                          1026
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1026,
                            "mutability": "mutable",
                            "name": "b",
                            "nameLocation": "10347:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1087,
                            "src": "10332:16:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                              "typeString": "struct Arena.Battle"
                            },
                            "typeName": {
                              "id": 1025,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1024,
                                "name": "Battle",
                                "nameLocations": [
                                  "10332:6:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 32,
                                "src": "10332:6:0"
                              },
                              "referencedDeclaration": 32,
                              "src": "10332:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                "typeString": "struct Arena.Battle"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1030,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1027,
                            "name": "battles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "10351:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                              "typeString": "struct Arena.Battle storage ref[] storage ref"
                            }
                          },
                          "id": 1029,
                          "indexExpression": {
                            "id": 1028,
                            "name": "_battleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "10359:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10351:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Battle_$32_storage",
                            "typeString": "struct Arena.Battle storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10332:37:0"
                      },
                      {
                        "assignments": [
                          1035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1035,
                            "mutability": "mutable",
                            "name": "agentHealths",
                            "nameLocation": "10405:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1087,
                            "src": "10388:29:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1033,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10388:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1034,
                              "nodeType": "ArrayTypeName",
                              "src": "10388:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1043,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1039,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1026,
                                  "src": "10434:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                    "typeString": "struct Arena.Battle storage pointer"
                                  }
                                },
                                "id": 1040,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10436:8:0",
                                "memberName": "agentIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
                                "src": "10434:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10445:6:0",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "10434:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "10420:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1036,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10424:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1037,
                              "nodeType": "ArrayTypeName",
                              "src": "10424:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10420:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10388:64:0"
                      },
                      {
                        "body": {
                          "id": 1069,
                          "nodeType": "Block",
                          "src": "10510:86:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1056,
                                    "name": "agentHealths",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1035,
                                    "src": "10524:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1058,
                                  "indexExpression": {
                                    "id": 1057,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "10537:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10524:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1059,
                                      "name": "battleAgentHealth",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81,
                                      "src": "10542:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                                      }
                                    },
                                    "id": 1061,
                                    "indexExpression": {
                                      "id": 1060,
                                      "name": "_battleId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1010,
                                      "src": "10560:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10542:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1066,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 1062,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1026,
                                        "src": "10571:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                          "typeString": "struct Arena.Battle storage pointer"
                                        }
                                      },
                                      "id": 1063,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10573:8:0",
                                      "memberName": "agentIds",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 19,
                                      "src": "10571:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 1065,
                                    "indexExpression": {
                                      "id": 1064,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1045,
                                      "src": "10582:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10571:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10542:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10524:61:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1068,
                              "nodeType": "ExpressionStatement",
                              "src": "10524:61:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1048,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "10482:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1049,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10486:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10488:8:0",
                              "memberName": "agentIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "10486:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10497:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10486:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10482:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1070,
                        "initializationExpression": {
                          "assignments": [
                            1045
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1045,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10475:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1070,
                              "src": "10467:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1044,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10467:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1047,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10479:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10467:13:0"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10505:3:0",
                            "subExpression": {
                              "id": 1053,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "10505:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1055,
                          "nodeType": "ExpressionStatement",
                          "src": "10505:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "10462:134:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1072,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10656:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10658:8:0",
                              "memberName": "battleId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "10656:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1074,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10690:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10692:8:0",
                              "memberName": "agentIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "10690:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "id": 1076,
                              "name": "agentHealths",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "10728:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1077,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10763:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10765:7:0",
                              "memberName": "tactics",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "10763:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage",
                                "typeString": "struct BattleTactics storage ref[] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 1079,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10793:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10795:5:0",
                              "memberName": "arena",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "10793:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              }
                            },
                            {
                              "expression": {
                                "id": 1081,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10822:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10824:6:0",
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29,
                              "src": "10822:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BattleStatus_$14",
                                "typeString": "enum Arena.BattleStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 1083,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "10852:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Battle_$32_storage_ptr",
                                  "typeString": "struct Arena.Battle storage pointer"
                                }
                              },
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10854:6:0",
                              "memberName": "winner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "10852:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_BattleTactics_$1119_storage_$dyn_storage",
                                "typeString": "struct BattleTactics storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_enum$_ArenaType_$11",
                                "typeString": "enum Arena.ArenaType"
                              },
                              {
                                "typeIdentifier": "t_enum$_BattleStatus_$14",
                                "typeString": "enum Arena.BattleStatus"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1071,
                            "name": "BattleView",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "10621:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BattleView_$53_storage_ptr_$",
                              "typeString": "type(struct Arena.BattleView storage pointer)"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "10646:8:0",
                            "10680:8:0",
                            "10714:12:0",
                            "10754:7:0",
                            "10786:5:0",
                            "10814:6:0",
                            "10844:6:0"
                          ],
                          "names": [
                            "battleId",
                            "agentIds",
                            "agentHealths",
                            "tactics",
                            "arena",
                            "status",
                            "winner"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "10621:250:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleView_$53_memory_ptr",
                            "typeString": "struct Arena.BattleView memory"
                          }
                        },
                        "functionReturnParameters": 1015,
                        "id": 1086,
                        "nodeType": "Return",
                        "src": "10614:257:0"
                      }
                    ]
                  },
                  "functionSelector": "6dd0ce7a",
                  "id": 1088,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBattle",
                  "nameLocation": "10183:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "_battleId",
                        "nameLocation": "10201:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "10193:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10193:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10192:19:0"
                  },
                  "returnParameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "10233:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BattleView_$53_memory_ptr",
                          "typeString": "struct Arena.BattleView"
                        },
                        "typeName": {
                          "id": 1013,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1012,
                            "name": "BattleView",
                            "nameLocations": [
                              "10233:10:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53,
                            "src": "10233:10:0"
                          },
                          "referencedDeclaration": 53,
                          "src": "10233:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BattleView_$53_storage_ptr",
                            "typeString": "struct Arena.BattleView"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10232:19:0"
                  },
                  "scope": 1098,
                  "src": "10174:704:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1096,
                    "nodeType": "Block",
                    "src": "10940:38:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1093,
                            "name": "battles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "10957:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Battle_$32_storage_$dyn_storage",
                              "typeString": "struct Arena.Battle storage ref[] storage ref"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10965:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10957:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1092,
                        "id": 1095,
                        "nodeType": "Return",
                        "src": "10950:21:0"
                      }
                    ]
                  },
                  "functionSelector": "f470d5ec",
                  "id": 1097,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBattleCount",
                  "nameLocation": "10893:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1089,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10907:2:0"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "10931:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10931:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10930:9:0"
                  },
                  "scope": 1098,
                  "src": "10884:94:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1099,
              "src": "86:10894:0",
              "usedErrors": [],
              "usedEvents": [
                96,
                106,
                114
              ]
            }
          ],
          "src": "32:10948:0"
        },
        "id": 0
      },
      "contracts/Interfaces.sol": {
        "ast": {
          "absolutePath": "contracts/Interfaces.sol",
          "exportedSymbols": {
            "BattleTactics": [
              1119
            ],
            "IAgentFactory": [
              1158
            ],
            "ICadenceArch": [
              1106
            ],
            "IItemFactory": [
              1170
            ],
            "Strategy": [
              1111
            ]
          },
          "id": 1171,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1100,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ICadenceArch",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1106,
              "linearizedBaseContracts": [
                1106
              ],
              "name": "ICadenceArch",
              "nameLocation": "112:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "705fab20",
                  "id": 1105,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revertibleRandom",
                  "nameLocation": "140:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1101,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "156:2:1"
                  },
                  "returnParameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1105,
                        "src": "182:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "182:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "181:8:1"
                  },
                  "scope": 1106,
                  "src": "131:59:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1171,
              "src": "102:90:1",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "canonicalName": "Strategy",
              "id": 1111,
              "members": [
                {
                  "id": 1107,
                  "name": "Balanced",
                  "nameLocation": "252:8:1",
                  "nodeType": "EnumValue",
                  "src": "252:8:1"
                },
                {
                  "id": 1108,
                  "name": "Berserker",
                  "nameLocation": "262:9:1",
                  "nodeType": "EnumValue",
                  "src": "262:9:1"
                },
                {
                  "id": 1109,
                  "name": "Tactician",
                  "nameLocation": "273:9:1",
                  "nodeType": "EnumValue",
                  "src": "273:9:1"
                },
                {
                  "id": 1110,
                  "name": "Defensive",
                  "nameLocation": "284:9:1",
                  "nodeType": "EnumValue",
                  "src": "284:9:1"
                }
              ],
              "name": "Strategy",
              "nameLocation": "241:8:1",
              "nodeType": "EnumDefinition",
              "src": "236:59:1"
            },
            {
              "canonicalName": "BattleTactics",
              "id": 1119,
              "members": [
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "aggressiveness",
                  "nameLocation": "330:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "324:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1116,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "401:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "392:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Strategy_$1111",
                    "typeString": "enum Strategy"
                  },
                  "typeName": {
                    "id": 1115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1114,
                      "name": "Strategy",
                      "nameLocations": [
                        "392:8:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1111,
                      "src": "392:8:1"
                    },
                    "referencedDeclaration": 1111,
                    "src": "392:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Strategy_$1111",
                      "typeString": "enum Strategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "riskTolerance",
                  "nameLocation": "449:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "443:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1117,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "BattleTactics",
              "nameLocation": "304:13:1",
              "nodeType": "StructDefinition",
              "scope": 1171,
              "src": "297:204:1",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAgentFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1158,
              "linearizedBaseContracts": [
                1158
              ],
              "name": "IAgentFactory",
              "nameLocation": "549:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IAgentFactory.DNA",
                  "id": 1128,
                  "members": [
                    {
                      "constant": false,
                      "id": 1121,
                      "mutability": "mutable",
                      "name": "strength",
                      "nameLocation": "598:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "590:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "590:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1123,
                      "mutability": "mutable",
                      "name": "agility",
                      "nameLocation": "624:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "616:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1125,
                      "mutability": "mutable",
                      "name": "intelligence",
                      "nameLocation": "649:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "641:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1124,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "641:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1127,
                      "mutability": "mutable",
                      "name": "elementalAffinity",
                      "nameLocation": "677:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "671:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1126,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "671:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DNA",
                  "nameLocation": "576:3:1",
                  "nodeType": "StructDefinition",
                  "scope": 1158,
                  "src": "569:178:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IAgentFactory.Agent",
                  "id": 1142,
                  "members": [
                    {
                      "constant": false,
                      "id": 1130,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "784:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "776:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "776:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "level",
                      "nameLocation": "804:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "796:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1134,
                      "mutability": "mutable",
                      "name": "experience",
                      "nameLocation": "827:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "819:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1137,
                      "mutability": "mutable",
                      "name": "dna",
                      "nameLocation": "851:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "847:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DNA_$1128_storage_ptr",
                        "typeString": "struct IAgentFactory.DNA"
                      },
                      "typeName": {
                        "id": 1136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1135,
                          "name": "DNA",
                          "nameLocations": [
                            "847:3:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1128,
                          "src": "847:3:1"
                        },
                        "referencedDeclaration": 1128,
                        "src": "847:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DNA_$1128_storage_ptr",
                          "typeString": "struct IAgentFactory.DNA"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1139,
                      "mutability": "mutable",
                      "name": "metadataCID",
                      "nameLocation": "871:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "864:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1138,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "864:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "equippedItem",
                      "nameLocation": "900:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "892:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "892:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Agent",
                  "nameLocation": "760:5:1",
                  "nodeType": "StructDefinition",
                  "scope": 1158,
                  "src": "753:166:1",
                  "visibility": "public"
                },
                {
                  "functionSelector": "2de5aaf7",
                  "id": 1150,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgent",
                  "nameLocation": "934:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "951:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "943:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "943:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "942:17:1"
                  },
                  "returnParameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "983:12:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Agent_$1142_memory_ptr",
                          "typeString": "struct IAgentFactory.Agent"
                        },
                        "typeName": {
                          "id": 1147,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1146,
                            "name": "Agent",
                            "nameLocations": [
                              "983:5:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1142,
                            "src": "983:5:1"
                          },
                          "referencedDeclaration": 1142,
                          "src": "983:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Agent_$1142_storage_ptr",
                            "typeString": "struct IAgentFactory.Agent"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "982:14:1"
                  },
                  "scope": 1158,
                  "src": "925:72:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "953b6a91",
                  "id": 1157,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "gainExperience",
                  "nameLocation": "1011:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1034:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "1026:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1026:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "xp",
                        "nameLocation": "1051:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "1043:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1025:29:1"
                  },
                  "returnParameters": {
                    "id": 1156,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1063:0:1"
                  },
                  "scope": 1158,
                  "src": "1002:62:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1171,
              "src": "539:527:1",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IItemFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1170,
              "linearizedBaseContracts": [
                1170
              ],
              "name": "IItemFactory",
              "nameLocation": "1112:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4ed387b2",
                  "id": 1169,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "1140:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1160,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1153:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1169,
                        "src": "1145:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1159,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1145:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1162,
                        "mutability": "mutable",
                        "name": "itemType",
                        "nameLocation": "1163:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1169,
                        "src": "1157:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1161,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1164,
                        "mutability": "mutable",
                        "name": "power",
                        "nameLocation": "1181:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1169,
                        "src": "1173:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1173:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1144:43:1"
                  },
                  "returnParameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1167,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1169,
                        "src": "1206:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1206:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1205:9:1"
                  },
                  "scope": 1170,
                  "src": "1131:84:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1171,
              "src": "1102:115:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:1185:1"
        },
        "id": 1
      }
    },
    "contracts": {
      "contracts/Arena.sol": {
        "Arena": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_agentFactoryAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_cadenceArch",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "battleId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "attacker",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "defender",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "damage",
                  "type": "uint256"
                }
              ],
              "name": "Attack",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "battleId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "winner",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "loser",
                  "type": "uint256"
                }
              ],
              "name": "BattleFinished",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "battleId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "agent1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "agent2",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum Arena.ArenaType",
                  "name": "arena",
                  "type": "uint8"
                }
              ],
              "name": "BattleStarted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "agentFactory",
              "outputs": [
                {
                  "internalType": "contract IAgentFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "agentInBattle",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "battleAgentHealth",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "battles",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "battleId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Arena.ArenaType",
                  "name": "arena",
                  "type": "uint8"
                },
                {
                  "internalType": "enum Arena.BattleStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "winner",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cadenceArch",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_battleId",
                  "type": "uint256"
                }
              ],
              "name": "fight",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_battleId",
                  "type": "uint256"
                }
              ],
              "name": "getBattle",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "battleId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "agentIds",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "agentHealths",
                      "type": "uint256[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "aggressiveness",
                          "type": "uint8"
                        },
                        {
                          "internalType": "enum Strategy",
                          "name": "strategy",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint8",
                          "name": "riskTolerance",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct BattleTactics[]",
                      "name": "tactics",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "enum Arena.ArenaType",
                      "name": "arena",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum Arena.BattleStatus",
                      "name": "status",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "winner",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Arena.BattleView",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBattleCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_agent1Id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "aggressiveness",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum Strategy",
                      "name": "strategy",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "riskTolerance",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct BattleTactics",
                  "name": "_tactics1",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "_agent2Id",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "aggressiveness",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum Strategy",
                      "name": "strategy",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "riskTolerance",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct BattleTactics",
                  "name": "_tactics2",
                  "type": "tuple"
                }
              ],
              "name": "startBattle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 205,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address_fromMemory": {
                  "entryPoint": 220,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_memory": {
                  "entryPoint": 135,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 53,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 172,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 161,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constructor_Arena": {
                  "entryPoint": 494,
                  "id": 132,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IAgentFactory": {
                  "entryPoint": 343,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IAgentFactory_to_contract_IAgentFactory": {
                  "entryPoint": 388,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 435,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IAgentFactory": {
                  "entryPoint": 331,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 303,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_Arena": {
                  "entryPoint": 266,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 2
                },
                "finalize_allocation": {
                  "entryPoint": 96,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 300,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 74,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 459,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_contract_IAgentFactory": {
                  "entryPoint": 400,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 59,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 156,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 64,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 361,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 462,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_contract_IAgentFactory_to_contract_IAgentFactory": {
                  "entryPoint": 403,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 184,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346100305761001a61001461010a565b906101ee565b610022610035565b61378561020f823961378590f35b61003b565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006a90610040565b810190811060018060401b0382111761008257604052565b61004a565b9061009a610093610035565b9283610060565b565b600080fd5b60018060a01b031690565b6100b5906100a1565b90565b6100c1816100ac565b036100c857565b600080fd5b905051906100da826100b8565b565b919060408382031261010557806100f961010292600086016100cd565b936020016100cd565b90565b61009c565b6101286139948038038061011d81610087565b9283398101906100dc565b9091565b90565b61014361013e610148926100a1565b61012c565b6100a1565b90565b6101549061012f565b90565b6101609061014b565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b61018d9061014b565b90565b90565b906101a86101a36101af92610184565b610190565b8254610169565b9055565b6101bc9061012f565b90565b6101c8906101b3565b90565b90565b906101e36101de6101ea926101bf565b6101cb565b8254610169565b9055565b906102056101fe61020c93610157565b6000610193565b60016101ce565b56fe60806040526004361015610013575b610af3565b61001e6000356100ad565b80632d24d097146100a8578063606d2e96146100a35780636dd0ce7a1461009e5780637df107ea14610099578063825b212414610094578063c230fe0b1461008f578063d0d250bd1461008a578063df6a37aa146100855763f470d5ec0361000e57610abe565b610a8b565b610a56565b6109af565b61082f565b610774565b61068e565b610411565b6101de565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6100d4816100c8565b036100db57565b600080fd5b905035906100ed826100cb565b565b9190604083820312610118578061010c61011592600086016100e0565b936020016100e0565b90565b6100be565b90565b61013461012f610139926100c8565b61011d565b6100c8565b90565b9061014690610120565b600052602052604060002090565b9061015e90610120565b600052602052604060002090565b1c90565b90565b610183906008610188930261016c565b610170565b90565b906101969154610173565b90565b6101b36101b8926101ae60039360009461013c565b610154565b61018b565b90565b6101c4906100c8565b9052565b91906101dc906000602085019401906101bb565b565b3461020f5761020b6101fa6101f43660046100ef565b90610199565b6102026100b3565b918291826101c8565b0390f35b6100b9565b9060208282031261022e5761022b916000016100e0565b90565b6100be565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b61026181610249565b82101561027c5761027360059161024d565b91020190600090565b610233565b60001c90565b61029361029891610281565b610170565b90565b6102a59054610287565b90565b60ff1690565b6102ba6102bf91610281565b6102a8565b90565b6102cc90546102ae565b90565b60081c90565b60ff1690565b6102e76102ec916102cf565b6102d5565b90565b6102f990546102db565b90565b60029061030882610249565b81101561034f5761031891610258565b50906103266000830161029b565b91610333600382016102c2565b9161034c6004610345600385016102ef565b930161029b565b90565b600080fd5b634e487b7160e01b600052602160045260246000fd5b6003111561037457565b610354565b906103838261036a565b565b61038e90610379565b90565b61039a90610385565b9052565b600211156103a857565b610354565b906103b78261039e565b565b6103c2906103ad565b90565b6103ce906103b9565b9052565b61040861040f946103fe6060949897956103f4608086019a60008701906101bb565b6020850190610391565b60408301906103c5565b01906101bb565b565b346104455761044161042c610427366004610214565b6102fc565b906104389492946100b3565b948594856103d2565b0390f35b6100b9565b610453906100c8565b9052565b5190565b60209181520190565b60200190565b906104778160209361044a565b0190565b60200190565b9061049e61049861049184610457565b809361045b565b92610464565b9060005b8181106104af5750505090565b9091926104c86104c2600192865161046a565b9461047b565b91019190916104a2565b5190565b60209181520190565b60200190565b60ff1690565b6104f4906104e5565b9052565b6004111561050257565b610354565b90610511826104f8565b565b61051c90610507565b90565b61052890610513565b9052565b9060408061056293610546600082015160008601906104eb565b6105586020820151602086019061051f565b01519101906104eb565b565b906105718160609361052c565b0190565b60200190565b9061059861059261058b846104d2565b80936104d6565b926104df565b9060005b8181106105a95750505090565b9091926105c26105bc6001928651610564565b94610575565b910191909161059c565b6105d590610385565b9052565b6105e2906103b9565b9052565b906106729060c08061064361063161061f60e0860161060d60008a0151600089019061044a565b60208901518782036020890152610481565b60408801518682036040880152610481565b6060870151858203606087015261057b565b94610656608082015160808601906105cc565b61066860a082015160a08601906105d9565b015191019061044a565b90565b61068b91602082019160008184039101526105e6565b90565b346106be576106ba6106a96106a4366004610214565b610f7c565b6106b16100b3565b91829182610675565b0390f35b6100b9565b60009103126106ce57565b6100be565b60018060a01b031690565b6106ee9060086106f3930261016c565b6106d3565b90565b9061070191546106de565b90565b61070f6000806106f6565b90565b60018060a01b031690565b61073161072c61073692610712565b61011d565b610712565b90565b6107429061071d565b90565b61074e90610739565b90565b61075a90610745565b9052565b919061077290600060208501940190610751565b565b346107a4576107843660046106c3565b6107a061078f610704565b6107976100b3565b9182918261075e565b0390f35b6100b9565b906107b390610120565b600052602052604060002090565b60ff1690565b6107d79060086107dc930261016c565b6107c1565b90565b906107ea91546107c7565b90565b610804906107ff6004916000926107a9565b6107df565b90565b151590565b61081590610807565b9052565b919061082d9060006020850194019061080c565b565b3461085f5761085b61084a610845366004610214565b6107ed565b6108526100b3565b91829182610819565b0390f35b6100b9565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061089390610869565b810190811067ffffffffffffffff8211176108ad57604052565b610873565b906108c56108be6100b3565b9283610889565b565b600080fd5b6108d5816104e5565b036108dc57565b600080fd5b905035906108ee826108cc565b565b600411156108fa57565b600080fd5b9050359061090c826108f0565b565b919060608382031261095c576109559061092860606108b2565b9361093682600083016108e1565b600086015261094882602083016108ff565b60208601526040016108e1565b6040830152565b610864565b610100818303126109a45761097982600083016100e0565b926109a161098a846020850161090e565b9361099881608086016100e0565b9360a00161090e565b90565b6100be565b60000190565b346109e1576109cb6109c2366004610961565b92919091611df4565b6109d36100b3565b806109dd816109a9565b0390f35b6100b9565b60018060a01b031690565b610a01906008610a06930261016c565b6109e6565b90565b90610a1491546109f1565b90565b610a246001600090610a09565b90565b610a3090610712565b90565b610a3c90610a27565b9052565b9190610a5490600060208501940190610a33565b565b34610a8657610a663660046106c3565b610a82610a71610a17565b610a796100b3565b91829182610a40565b0390f35b6100b9565b34610ab957610aa3610a9e366004610214565b612636565b610aab6100b3565b80610ab5816109a9565b0390f35b6100b9565b34610aee57610ace3660046106c3565b610aea610ad9612f45565b610ae16100b3565b918291826101c8565b0390f35b6100b9565b600080fd5b610b0260e06108b2565b90565b600090565b606090565b606090565b600090565b600090565b610b26610af8565b90602080808080808088610b38610b05565b815201610b43610b0a565b815201610b4e610b0a565b815201610b59610b0f565b815201610b64610b14565b815201610b6f610b19565b815201610b7a610b05565b81525050565b610b88610b1e565b90565b60209181520190565b60007f426174746c6520646f6573206e6f742065786973740000000000000000000000910152565b610bc96015602092610b8b565b610bd281610b94565b0190565b610bec9060208101906000818303910152610bbc565b90565b15610bf657565b610bfe6100b3565b62461bcd60e51b815280610c1460048201610bd6565b0390fd5b90565b5490565b67ffffffffffffffff8111610c375760208091020190565b610873565b90610c4e610c4983610c1f565b6108b2565b918252565b369037565b90610c7d610c6583610c3c565b92602080610c738693610c1f565b9201910390610c53565b565b90565b610c96610c91610c9b92610c7f565b61011d565b6100c8565b90565b6001610caa91016100c8565b90565b600052602060002090565b610cc181610c1b565b821015610cdc57610cd3600191610cad565b91020190600090565b610233565b90610ceb82610457565b811015610cfc576020809102010190565b610233565b90610d0b906100c8565b9052565b610d1960e06108b2565b90565b610d269054610287565b90565b60010190565b90610d4c610d46610d3f84610c1b565b809361045b565b92610cad565b9060005b818110610d5d5750505090565b909192610d7d610d77600192610d7287610d1c565b61046a565b94610d29565b9101919091610d50565b90610d9191610d2f565b90565b90610db4610dad92610da46100b3565b93848092610d87565b0383610889565b565b610dbf90610d94565b90565b52565b5490565b67ffffffffffffffff8111610de15760208091020190565b610873565b90610df8610df383610dc9565b6108b2565b918252565b600052602060002090565b60ff1690565b610e1a610e1f91610281565b610e08565b90565b610e2c9054610e0e565b90565b90610e39906104e5565b9052565b60ff1690565b610e4f610e54916102cf565b610e3d565b90565b610e619054610e43565b90565b90610e6e90610507565b9052565b60101c90565b610e84610e8991610e72565b610e08565b90565b610e969054610e78565b90565b610ea360606108b2565b90565b90610ef4610eeb6000610eb7610e99565b94610ece610ec6838301610e22565b838801610e2f565b610ee5610edc838301610e57565b60208801610e64565b01610e8c565b60408401610e2f565b565b610eff90610ea6565b90565b90610f0c82610dc5565b610f1581610de6565b92610f236020850191610dfd565b6000915b838310610f345750505050565b600160208192610f4385610ef6565b815201920192019190610f27565b610f5a90610f02565b90565b52565b90610f6a90610379565b9052565b90610f78906103ad565b9052565b90610f85610b80565b50610fab82610fa5610f9f610f9a6002610249565b6100c8565b916100c8565b10610bef565b610fc0610fba60028490610258565b50610c18565b91610fd5610fd060018501610c1b565b610c58565b90610fe06000610c82565b5b80610fff610ff9610ff460018901610c1b565b6100c8565b916100c8565b101561105c576110579061105261104061103b61101e6003879061013c565b61103561102f60018c018790610cb8565b9061018b565b90610154565b61029b565b61104d8691849092610ce1565b610d01565b610c9e565b610fe1565b50509190918160000161106e9061029b565b9180600101918160020182600301611085906102c2565b9183600301611093906102ef565b936004016110a09061029b565b946110a9610d0f565b9660008801906110b891610d01565b6110c190610db6565b60208701906110cf91610dc2565b60408601906110dd91610dc2565b6110e690610f51565b60608501906110f491610f5d565b608084019061110291610f60565b60a083019061111091610f6e565b60c082019061111e91610d01565b90565b61112d61113291610281565b6106d3565b90565b61113f9054611121565b90565b600080fd5b60e01b90565b9050519061115a826100cb565b565b90505190611169826108cc565b565b91906080838203126111cb576111c49061118560806108b2565b93611193826000830161114d565b60008601526111a5826020830161114d565b60208601526111b7826040830161114d565b604086015260600161115c565b6060830152565b610864565b600080fd5b600080fd5b67ffffffffffffffff81116111f8576111f4602091610869565b0190565b610873565b60005b838110611211575050906000910152565b806020918301518185015201611200565b90929192611237611232826111da565b6108b2565b9381855260208501908284011161125357611251926111fd565b565b6111d5565b9080601f830112156112765781602061127393519101611222565b90565b6111d0565b9190916101208184031261131a5761129360c06108b2565b926112a1816000840161114d565b60008501526112b3816020840161114d565b60208501526112c5816040840161114d565b60408501526112d7816060840161116b565b606085015260e08201519167ffffffffffffffff8311611315576113008261130e948301611258565b60808601526101000161114d565b60a0830152565b6108c7565b610864565b9060208282031261135057600082015167ffffffffffffffff811161134b57611348920161127b565b90565b6100c3565b6100be565b61135d6100b3565b3d6000823e3d90fd5b61137090516100c8565b90565b60007f4167656e7420646f6573206e6f74206578697374000000000000000000000000910152565b6113a86014602092610b8b565b6113b181611373565b0190565b6113cb906020810190600081830391015261139b565b90565b156113d557565b6113dd6100b3565b62461bcd60e51b8152806113f3600482016113b5565b0390fd5b61140190516104e5565b90565b90565b61141b61141661142092611404565b61011d565b6104e5565b90565b60007f496e76616c696420616767726573736976656e65737300000000000000000000910152565b6114586016602092610b8b565b61146181611423565b0190565b61147b906020810190600081830391015261144b565b90565b1561148557565b61148d6100b3565b62461bcd60e51b8152806114a360048201611465565b0390fd5b60007f496e76616c6964207269736b20746f6c6572616e636500000000000000000000910152565b6114dc6016602092610b8b565b6114e5816114a7565b0190565b6114ff90602081019060008183039101526114cf565b90565b1561150957565b6115116100b3565b62461bcd60e51b815280611527600482016114e9565b0390fd5b61153761153c91610281565b6109e6565b90565b611549905461152b565b90565b6115559061071d565b90565b6115619061154c565b90565b61156d90610739565b90565b67ffffffffffffffff1690565b61158681611570565b0361158d57565b600080fd5b9050519061159f8261157d565b565b906020828203126115bb576115b891600001611592565b90565b6100be565b90565b6115d76115d26115dc926115c0565b61011d565b611570565b90565b634e487b7160e01b600052601260045260246000fd5b61160161160791611570565b91611570565b908115611612570690565b6115df565b61162b61162661163092611570565b61011d565b610379565b90565b90565b61164a61164561164f92611633565b61011d565b6100c8565b90565b90565b61166961166461166e92611652565b61011d565b6100c8565b90565b600090565b600090565b611683610e99565b906020808084611691611671565b81520161169c611676565b8152016116a7611671565b81525050565b6116b561167b565b90565b60005b8281106116c757505050565b6020906116d26116ad565b81840152016116bb565b906117016116e983610de6565b926020806116f78693610dc9565b92019103906116b8565b565b9061170d826104d2565b81101561171e576020809102010190565b610233565b90565b61173060c06108b2565b90565b600052602060002090565b5490565b61174b8161173e565b8210156117665761175d600591611733565b91020190600090565b610233565b634e487b7160e01b600052600060045260246000fd5b60001b90565b9061179460001991611781565b9181191691161790565b90565b906117b66117b16117bd92610120565b61179e565b8254611787565b9055565b5190565b634e487b7160e01b600052601160045260246000fd5b6117ea6117f0919392936100c8565b926100c8565b916117fc8382026100c8565b92818404149015171561180b57565b6117c5565b600190818003010490565b1b90565b9190600861183b9102916118356000198461181b565b9261181b565b9181191691161790565b919061185b61185661186393610120565b61179e565b90835461181f565b9055565b600090565b61187e91611878611867565b91611845565b565b5b81811061188c575050565b8061189a600060019361186c565b01611881565b90918281106118af575b505050565b6118cd6118c76118c16118d895611810565b92611810565b92610cad565b918201910190611880565b3880806118aa565b9068010000000000000000811161190957816118fe61190793610c1b565b908281556118a0565b565b610873565b61191782610457565b9167ffffffffffffffff831161197b5761194561193f60019261193a86866118e0565b610464565b92610cad565b92049160005b8381106119585750505050565b600190602061196e61196986611366565b61179e565b940193818401550161194b565b610873565b9061198a9161190e565b565b5190565b600190818003010490565b600080910155565b906000036119b6576119b49061199b565b565b61176b565b5b8181106119c7575050565b806119d560006001936119a3565b016119bc565b90918281106119ea575b505050565b611a08611a026119fc611a1395611990565b92611990565b92610dfd565b9182019101906119bb565b3880806119e5565b90680100000000000000008111611a445781611a39611a4293610dc5565b908281556119db565b565b610873565b5190565b90611a5960ff91611781565b9181191691161790565b611a77611a72611a7c926104e5565b61011d565b6104e5565b90565b90565b90611a97611a92611a9e92611a63565b611a7f565b8254611a4d565b9055565b611aac9051610507565b90565b60081b90565b90611ac261ff0091611aaf565b9181191691161790565b611ad590610507565b90565b90565b90611af0611aeb611af792611acc565b611ad8565b8254611ab5565b9055565b60101b90565b90611b0f62ff000091611afb565b9181191691161790565b90611b2e611b29611b3592611a63565b611a7f565b8254611b01565b9055565b90611b7c60406000611b8294611b5c828201611b568488016113f7565b90611a82565b611b74828201611b6e60208801611aa2565b90611adb565b0192016113f7565b90611b19565b565b90611b8e91611b39565b565b611bb5611baf611b9f846104d2565b93611baa8585611a1b565b6104df565b91610dfd565b6000915b838310611bc65750505050565b6001602082611bde611bd88495611a49565b86611b84565b01920192019190611bb9565b90611bf491611b90565b565b611c009051610379565b90565b611c0c90610379565b90565b90565b90611c27611c22611c2e92611c03565b611c0f565b8254611a4d565b9055565b611c3c90516103ad565b90565b611c48906103ad565b90565b90565b90611c63611c5e611c6a92611c3f565b611c4b565b8254611ab5565b9055565b90611cff60a06004611d0594611c9360008201611c8d60008801611366565b906117a1565b611cac60018201611ca6602088016117c1565b90611980565b611cc560028201611cbf6040880161198c565b90611bea565b611cde60038201611cd860608801611bf6565b90611c12565b611cf760038201611cf160808801611c32565b90611c4e565b019201611366565b906117a1565b565b9190611d1857611d1691611c6e565b565b61176b565b9081549168010000000000000000831015611d4d5782611d45916001611d4b95018155611742565b90611d07565b565b610873565b90565b611d69611d64611d6e92611d52565b61011d565b6100c8565b90565b90565b611d88611d83611d8d92611d71565b61011d565b6100c8565b90565b611d9f611da5919392936100c8565b926100c8565b8201809211611db057565b6117c5565b611deb611df294611de1606094989795611dd7608086019a60008701906101bb565b60208501906101bb565b60408301906101bb565b0190610391565b565b929190611e376000611e0d611e0882611135565b610745565b632de5aaf790611e2c8892611e206100b3565b95869485938493611147565b8352600483016101c8565b03915afa90811561231d576000916122fa575b50611e8b6000611e61611e5c82611135565b610745565b632de5aaf790611e808792611e746100b3565b95869485938493611147565b8352600483016101c8565b03915afa9081156122f5576000916122d2575b5090611eac60008201611366565b611ebf611eb96000610c82565b916100c8565b1415806122a6575b611ed0906113ce565b611edc600084016113f7565b611eef611ee96064611407565b916104e5565b11158061227a575b611f009061147e565b611f0c604084016113f7565b611f1f611f196064611407565b916104e5565b11158061224e575b611f3090611502565b611f3a6002610249565b92611f706020611f5a611f55611f50600161153f565b611558565b611564565b63705fab2090611f686100b3565b938492611147565b82528180611f80600482016109a9565b03915afa9081156122495760009161221b575b506003611f9f906115c3565b611fa8916115f5565b611fb190611617565b956002611fbd90611636565b611fc690610c58565b9088826000611fd490610c82565b611fdd91610ce1565b90611fe791610d01565b86826001611ff490611655565b611ffd91610ce1565b9061200791610d01565b600261201290611636565b61201b906116dc565b92839060009061202a82610c82565b6120349084611703565b5261203e90610c82565b61204791611703565b5150829060019061205782611655565b6120619084611703565b5261206b90611655565b61207491611703565b5150600261208190611723565b9185919088600091600093612094611726565b9560008701906120a391610d01565b60208601906120b191610dc2565b60408501906120bf91610f5d565b60608401906120cd91610f60565b60808301906120db91610f6e565b6120e490610c82565b60a08201906120f291610d01565b6120fb91611d1d565b8060200161210890611366565b601461211390611d55565b61211c916117db565b906060015160000161212d90611366565b600561213890611d74565b612141916117db565b61214a91611d90565b908060200161215890611366565b601461216390611d55565b61216c916117db565b906060015160000161217d90611366565b600561218890611d74565b612191916117db565b61219a91611d90565b906003836121a79161013c565b866121b191610154565b906121bb916117a1565b6003826121c79161013c565b836121d191610154565b906121db916117a1565b929091927fee1f4a056590adca336ca88ea149bd251d1d2c5ea0530bd96f4724b968713c94936122096100b3565b9384936122169385611db5565b0390a1565b61223c915060203d8111612242575b6122348183610889565b8101906115a1565b38611f93565b503d61222a565b611355565b50611f3061225e604087016113f7565b61227161226b6064611407565b916104e5565b11159050611f27565b50611f0061228a600087016113f7565b61229d6122976064611407565b916104e5565b11159050611ef7565b50611ed06122b660008401611366565b6122c96122c36000610c82565b916100c8565b14159050611ec7565b6122ef91503d806000833e6122e78183610889565b81019061131f565b38611e9e565b611355565b61231791503d806000833e61230f8183610889565b81019061131f565b38611e4a565b611355565b60007f426174746c6520697320616c72656164792066696e6973686564000000000000910152565b612357601a602092610b8b565b61236081612322565b0190565b61237a906020810190600081830391015261234a565b90565b1561238457565b61238c6100b3565b62461bcd60e51b8152806123a260048201612364565b0390fd5b6123b26123b791610281565b6107c1565b90565b6123c490546123a6565b90565b60007f4167656e7420616c726561647920696e20626174746c65000000000000000000910152565b6123fc6017602092610b8b565b612405816123c7565b0190565b61241f90602081019060008183039101526123ef565b90565b1561242957565b6124316100b3565b62461bcd60e51b81528061244760048201612409565b0390fd5b61245490610807565b90565b90565b9061246f61246a6124769261244b565b612457565b8254611a4d565b9055565b60c01b90565b6124899061247a565b90565b61249861249d91611570565b612480565b9052565b90565b6124b06124b5916100c8565b6124a1565b9052565b6008816124cc6124d4936020969561248c565b0180926124a4565b0190565b60200190565b5190565b6124f66124f16124fb926115c0565b61011d565b6100c8565b90565b61250781610dc5565b82101561252257612519600191610dfd565b91020190600090565b610233565b61253160c06108b2565b90565b52565b52565b90565b906125479061253a565b9052565b61255a612560919392936100c8565b926100c8565b820391821161256b57565b6117c5565b90565b61257f6125849161253a565b612570565b9052565b61259481602093612573565b0190565b6125ac6125a76125b192611404565b61011d565b6100c8565b90565b6125c06125c6916100c8565b916100c8565b9081156125d1570490565b6115df565b60009103126125e157565b6100be565b90565b6125fd6125f8612602926125e6565b61011d565b6100c8565b90565b61260e906125e9565b9052565b91602061263492949361262d604082019660008301906101bb565b0190612605565b565b9061265c8261265661265061264b6002610249565b6100c8565b916100c8565b10610bef565b61267161266b60028490610258565b50610c18565b9061269a612681600384016102ef565b61269461268e60006103ad565b916103ad565b1461237d565b6126b26126ac60018401600090610cb8565b9061018b565b926126cb6126c560018501600190610cb8565b9061018b565b906126e96126e36126de600488906107a9565b6123ba565b15610807565b80612f1d575b6126f890612422565b61270e6001612709600488906107a9565b61245a565b612724600161271f600485906107a9565b61245a565b612764600061273a61273582611135565b610745565b632de5aaf790612759899261274d6100b3565b95869485938493611147565b8352600483016101c8565b03915afa908115612f1857600091612ef5575b50906127b9600061278f61278a82611135565b610745565b632de5aaf7906127ae87926127a26100b3565b95869485938493611147565b8352600483016101c8565b03915afa908115612ef057600091612ecd575b50926127ec6127e76127e06003859061013c565b8990610154565b61029b565b9661280b6128066127ff6003869061013c565b8490610154565b61029b565b96612814611867565b9761281d611867565b98612853602061283d612838612833600161153f565b611558565b611564565b63705fab209061284b6100b3565b938492611147565b82528180612863600482016109a9565b03915afa908115612ec857600091612e9a575b506128a287916128936128876100b3565b938492602084016124b9565b60208201810382520382610889565b6128b46128ae826124de565b916124d8565b20906128c06000610c82565b915b826128d66128d060036124e2565b916100c8565b1015612e875761297860006129738c61296a856129618f8c612953612958929661294a61294161290a600286018d906124fe565b5061293c61292a600361292260028a016001906124fe565b5098016102c2565b999b612934612527565b9e8f01612534565b610ef6565b60208c01612537565b60408a01612534565b610ef6565b60608701612537565b60808501610f60565b60a0830161253d565b613175565b938461298c612986836100c8565b916100c8565b1015600014612e7757506129a06000610c82565b5b938890878991926129f96129e76129e16129db7fcf2d586a11b0df2dc974a66369ad4e68566a0635fd2448e810592eac3d3bedae94610120565b94610120565b94610120565b946129f06100b3565b918291826101c8565b0390a483612a10612a0a6000610c82565b916100c8565b14612e6057612af06000612aeb8b612ae28e612ad9612ad08c612a47612a56612acb9b612a3b6100b3565b92839160208301612588565b60208201810382520382610889565b612a68612a62826124de565b916124d8565b20998a9496612ac2612ab9612a82600286016001906124fe565b50612ab4612aa26003612a9a60028a016000906124fe565b5098016102c2565b999b612aac612527565b9e8f01612534565b610ef6565b60208c01612537565b60408a01612534565b610ef6565b60608701612537565b60808501610f60565b60a0830161253d565b613175565b9c8d80612b05612aff846100c8565b916100c8565b1015600014612e52575050612b1a6000610c82565b5b9c889088889192612b73612b61612b5b612b557fcf2d586a11b0df2dc974a66369ad4e68566a0635fd2448e810592eac3d3bedae94610120565b94610120565b94610120565b94612b6a6100b3565b918291826101c8565b0390a48c612b8a612b846000610c82565b916100c8565b14612bdb57612bad612bbc612bd592612ba16100b3565b92839160208301612588565b60208201810382520382610889565b612bce612bc8826124de565b916124d8565b2092610c9e565b916128c2565b505050919395975091939597849784975b89612c00612bfa6000610c82565b916100c8565b14612d39575b50505050612c529291612c2e612c4092612c24600160038301611c4e565b60048991016117a1565b612c3b60009160046107a9565b61245a565b612c4d60009160046107a9565b61245a565b612c64612c5f6000611135565b610745565b63953b6a9184603292803b15612d3457612c9260008094612c9d612c866100b3565b97889687958694611147565b845260048401612612565b03925af18015612d2f57612d02575b5091612cea612ce4612cde7fc76e6de66e7f50844440b686c8189ef9b89939dfe8f4560382213011ed5d31c795610120565b92610120565b92610120565b92612cf36100b3565b80612cfd816109a9565b0390a4565b612d229060003d8111612d28575b612d1a8183610889565b8101906125d6565b38612cac565b503d612d10565b611355565b611142565b612c5296959950612e279394985091612e17612e06612e1c93612e01612df0612da788612da1612d9160006060612d88612d78612e219f602001611366565b612d826014611d55565b906117db565b94015101611366565b612d9b6005611d74565b906117db565b90611d90565b92612dea612dda60006060612dd1612dc160208701611366565b612dcb6014611d55565b906117db565b94015101611366565b612de46005611d74565b906117db565b90611d90565b94612dfb6064612598565b906117db565b6125b4565b95612e116064612598565b906117db565b6125b4565b6100c8565b916100c8565b1015600014612e4357612c4085612c2e83965b92829495612c06565b612c408195612c2e8196612e3a565b612e5b9161254b565b612b1b565b505050918094969850989092949698978597612bec565b612e8290859061254b565b6129a1565b5099989a92949690509690929496612bec565b612ebb915060203d8111612ec1575b612eb38183610889565b8101906115a1565b38612876565b503d612ea9565b611355565b612eea91503d806000833e612ee28183610889565b81019061131f565b386127cc565b611355565b612f1291503d806000833e612f0a8183610889565b81019061131f565b38612777565b611355565b506126f8612f3e612f38612f33600486906107a9565b6123ba565b15610807565b90506126ef565b612f4d611867565b50612f586002610249565b90565b90565b612f72612f6d612f7792612f5b565b61011d565b6100c8565b90565b90565b612f91612f8c612f9692612f7a565b61011d565b6100c8565b90565b90565b612fb0612fab612fb592612f99565b61011d565b6104e5565b90565b612fc4612fca916104e5565b916104e5565b908115612fd5570490565b6115df565b612fee612fe9612ff3926104e5565b61011d565b6100c8565b90565b613000905161253a565b90565b6bffffffffffffffffffffffff191690565b61301e90613003565b90565b60601c90565b61303361303891613021565b61071d565b90565b61304f61304a61305492610712565b61011d565b6100c8565b90565b613063613069916100c8565b916100c8565b908115613074570690565b6115df565b90565b61309061308b61309592613079565b61011d565b6104e5565b90565b6130b7906130b16130ab6130bc946104e5565b9161253a565b9061181b565b61253a565b90565b6130d36130ce6130d892611633565b61011d565b6104e5565b90565b6130e76130ed916104e5565b916104e5565b90039060ff82116130fa57565b6117c5565b90565b61311661311161311b926130ff565b61011d565b6100c8565b90565b61313261312d61313792611652565b61011d565b6104e5565b90565b61314e613149613153926115c0565b61011d565b6104e5565b90565b90565b61316d61316861317292613156565b61011d565b6100c8565b90565b61317d611867565b506131c16131a76131976000606081860151015101611366565b6131a16002611636565b906117db565b6131bb604060606000860151015101611366565b90611d90565b61332361331361320a6131de600060606040880151015101611366565b6132046131f460406060818a0151015101611366565b6131fe6002611636565b906117db565b90611d90565b9261330d6132fd866132f761321f6064612598565b6132296064612598565b9061323960208086015101611aa2565b61324c6132466001610507565b91610507565b146000146136f45761326890613262601e612f7d565b90611d90565b5b8361327a6020606083015101611aa2565b61328d6132876003610507565b91610507565b146136b0575b6132dc600060206132d36132f1956132cd6132c86132b886866132ec9a0151016113f7565b6132c26004612f9c565b90612fb8565b612fda565b90611d90565b970151016113f7565b6132e66004612f9c565b90612fb8565b612fda565b9061254b565b936117db565b6133076064612598565b906125b4565b936117db565b61331d6064612598565b906125b4565b81613336613330836100c8565b916100c8565b11156136a0576133459161254b565b9061337d61336d61336861336361335e60a08601612ff6565b613015565b613027565b61303b565b6133776064612598565b90613057565b613391602060606040850151015101611366565b6133a461339e60326125e9565b916100c8565b11600014613681576133c86133c26133bc60326125e9565b5b6100c8565b916100c8565b10613672576134176134076134026133fd6133f86133e860a08701612ff6565b6133f260a061307c565b90613098565b613015565b613027565b61303b565b6134116064612598565b90613057565b61344261343d61342d60406020860151016113f7565b61343760026130bf565b90612fb8565b612fda565b9061348161347c61346c6064613467613461604060208a0151016113f7565b91611407565b6130db565b6134766004612f9c565b90612fb8565b612fda565b9161349561348f83926100c8565b916100c8565b10600014613614575050906134b76134c7916134b1600f612f5e565b906117db565b6134c1600a613102565b906125b4565b905b6134d560808201611bf6565b6134e86134e26001610379565b91610379565b14806135e7575b600014613522575061350e61351e916135086073613159565b906117db565b6135186064612598565b906125b4565b5b90565b61352e60808201611bf6565b61354161353b6002610379565b91610379565b149081613580575b50613554575b61351f565b61356b61357b916135656073613159565b906117db565b6135756064612598565b906125b4565b61354f565b905061359560608060008401510151016113f7565b6135a86135a2600361313a565b916104e5565b149081156135b8575b5038613549565b6135cd915060606000819201510151016113f7565b6135e06135da6004612f9c565b916104e5565b14386135b1565b506135fb60608060008401510151016113f7565b61360e613608600161311e565b916104e5565b146134ef565b61363361362e61363992936136296064612598565b61254b565b6100c8565b916100c8565b11613644575b6134c9565b9061365c61366c916136566005611d74565b906117db565b613666600a613102565b906125b4565b9061363f565b505061367e6000610c82565b90565b6133c86133c261369b602060606040870151015101611366565b6133bd565b5050506136ad6001611655565b90565b916132dc600060206132d36132f1956132cd6132c86132b886866136e16132ec9b6136db601e612f7d565b90611d90565b9c9a505050505050955050505050613293565b61370360208086015101611aa2565b6137166137106002610507565b91610507565b14613721575b613269565b61373861374991613732600f612f5e565b90611d90565b91613743600f612f5e565b90611d90565b9061371c56fea264697066735822122048d34de0a5e9e9ba235854d1eac17aff47904714c5f0b6ceab546d9c6ffe7ae064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x30 JUMPI PUSH2 0x1A PUSH2 0x14 PUSH2 0x10A JUMP JUMPDEST SWAP1 PUSH2 0x1EE JUMP JUMPDEST PUSH2 0x22 PUSH2 0x35 JUMP JUMPDEST PUSH2 0x3785 PUSH2 0x20F DUP3 CODECOPY PUSH2 0x3785 SWAP1 RETURN JUMPDEST PUSH2 0x3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x6A SWAP1 PUSH2 0x40 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x82 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4A JUMP JUMPDEST SWAP1 PUSH2 0x9A PUSH2 0x93 PUSH2 0x35 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x60 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB5 SWAP1 PUSH2 0xA1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC1 DUP2 PUSH2 0xAC JUMP JUMPDEST SUB PUSH2 0xC8 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xDA DUP3 PUSH2 0xB8 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x105 JUMPI DUP1 PUSH2 0xF9 PUSH2 0x102 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0xCD JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH2 0x128 PUSH2 0x3994 DUP1 CODESIZE SUB DUP1 PUSH2 0x11D DUP2 PUSH2 0x87 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDC JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x13E PUSH2 0x148 SWAP3 PUSH2 0xA1 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x154 SWAP1 PUSH2 0x12F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x160 SWAP1 PUSH2 0x14B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x18D SWAP1 PUSH2 0x14B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A8 PUSH2 0x1A3 PUSH2 0x1AF SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1BC SWAP1 PUSH2 0x12F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x1B3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E3 PUSH2 0x1DE PUSH2 0x1EA SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x205 PUSH2 0x1FE PUSH2 0x20C SWAP4 PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1CE JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xAD JUMP JUMPDEST DUP1 PUSH4 0x2D24D097 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x606D2E96 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6DD0CE7A EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x7DF107EA EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x825B2124 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xC230FE0B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xD0D250BD EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xDF6A37AA EQ PUSH2 0x85 JUMPI PUSH4 0xF470D5EC SUB PUSH2 0xE JUMPI PUSH2 0xABE JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xC8 JUMP JUMPDEST SUB PUSH2 0xDB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xED DUP3 PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x118 JUMPI DUP1 PUSH2 0x10C PUSH2 0x115 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F PUSH2 0x139 SWAP3 PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x146 SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x15E SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x183 SWAP1 PUSH1 0x8 PUSH2 0x188 SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x196 SWAP2 SLOAD PUSH2 0x173 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x1B8 SWAP3 PUSH2 0x1AE PUSH1 0x3 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C4 SWAP1 PUSH2 0xC8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1DC SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x20F JUMPI PUSH2 0x20B PUSH2 0x1FA PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF JUMP JUMPDEST SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH2 0x202 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x22E JUMPI PUSH2 0x22B SWAP2 PUSH1 0x0 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x261 DUP2 PUSH2 0x249 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x27C JUMPI PUSH2 0x273 PUSH1 0x5 SWAP2 PUSH2 0x24D JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x298 SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2A5 SWAP1 SLOAD PUSH2 0x287 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2BF SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2CC SWAP1 SLOAD PUSH2 0x2AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2EC SWAP2 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F9 SWAP1 SLOAD PUSH2 0x2DB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x308 DUP3 PUSH2 0x249 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x34F JUMPI PUSH2 0x318 SWAP2 PUSH2 0x258 JUMP JUMPDEST POP SWAP1 PUSH2 0x326 PUSH1 0x0 DUP4 ADD PUSH2 0x29B JUMP JUMPDEST SWAP2 PUSH2 0x333 PUSH1 0x3 DUP3 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP2 PUSH2 0x34C PUSH1 0x4 PUSH2 0x345 PUSH1 0x3 DUP6 ADD PUSH2 0x2EF JUMP JUMPDEST SWAP4 ADD PUSH2 0x29B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x374 JUMPI JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST SWAP1 PUSH2 0x383 DUP3 PUSH2 0x36A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x38E SWAP1 PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x39A SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x3A8 JUMPI JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST SWAP1 PUSH2 0x3B7 DUP3 PUSH2 0x39E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C2 SWAP1 PUSH2 0x3AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3CE SWAP1 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x408 PUSH2 0x40F SWAP5 PUSH2 0x3FE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x3F4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x3C5 JUMP JUMPDEST ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x445 JUMPI PUSH2 0x441 PUSH2 0x42C PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST SWAP1 PUSH2 0x438 SWAP5 SWAP3 SWAP5 PUSH2 0xB3 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x3D2 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x453 SWAP1 PUSH2 0xC8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x477 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x44A JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x49E PUSH2 0x498 PUSH2 0x491 DUP5 PUSH2 0x457 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x45B JUMP JUMPDEST SWAP3 PUSH2 0x464 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4AF JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4C8 PUSH2 0x4C2 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x46A JUMP JUMPDEST SWAP5 PUSH2 0x47B JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x4A2 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4F4 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x502 JUMPI JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST SWAP1 PUSH2 0x511 DUP3 PUSH2 0x4F8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x51C SWAP1 PUSH2 0x507 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x528 SWAP1 PUSH2 0x513 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP1 PUSH2 0x562 SWAP4 PUSH2 0x546 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x558 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x51F JUMP JUMPDEST ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x4EB JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x571 DUP2 PUSH1 0x60 SWAP4 PUSH2 0x52C JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x598 PUSH2 0x592 PUSH2 0x58B DUP5 PUSH2 0x4D2 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x4D6 JUMP JUMPDEST SWAP3 PUSH2 0x4DF JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x5C2 PUSH2 0x5BC PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x564 JUMP JUMPDEST SWAP5 PUSH2 0x575 JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x59C JUMP JUMPDEST PUSH2 0x5D5 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x5E2 SWAP1 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x672 SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x643 PUSH2 0x631 PUSH2 0x61F PUSH1 0xE0 DUP7 ADD PUSH2 0x60D PUSH1 0x0 DUP11 ADD MLOAD PUSH1 0x0 DUP10 ADD SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x481 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x57B JUMP JUMPDEST SWAP5 PUSH2 0x656 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x668 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x5D9 JUMP JUMPDEST ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x44A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x68B SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x5E6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x6BE JUMPI PUSH2 0x6BA PUSH2 0x6A9 PUSH2 0x6A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x6B1 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x675 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x6CE JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x6EE SWAP1 PUSH1 0x8 PUSH2 0x6F3 SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x701 SWAP2 SLOAD PUSH2 0x6DE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x70F PUSH1 0x0 DUP1 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x731 PUSH2 0x72C PUSH2 0x736 SWAP3 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x742 SWAP1 PUSH2 0x71D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x74E SWAP1 PUSH2 0x739 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x75A SWAP1 PUSH2 0x745 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x772 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x751 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x7A4 JUMPI PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x78F PUSH2 0x704 JUMP JUMPDEST PUSH2 0x797 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x75E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH2 0x7B3 SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7D7 SWAP1 PUSH1 0x8 PUSH2 0x7DC SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7EA SWAP2 SLOAD PUSH2 0x7C7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x804 SWAP1 PUSH2 0x7FF PUSH1 0x4 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x815 SWAP1 PUSH2 0x807 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x82D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x80C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x85F JUMPI PUSH2 0x85B PUSH2 0x84A PUSH2 0x845 CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x852 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x819 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x893 SWAP1 PUSH2 0x869 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0x8C5 PUSH2 0x8BE PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x889 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D5 DUP2 PUSH2 0x4E5 JUMP JUMPDEST SUB PUSH2 0x8DC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x8EE DUP3 PUSH2 0x8CC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x8FA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x90C DUP3 PUSH2 0x8F0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x60 DUP4 DUP3 SUB SLT PUSH2 0x95C JUMPI PUSH2 0x955 SWAP1 PUSH2 0x928 PUSH1 0x60 PUSH2 0x8B2 JUMP JUMPDEST SWAP4 PUSH2 0x936 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x948 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 ADD PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x100 DUP2 DUP4 SUB SLT PUSH2 0x9A4 JUMPI PUSH2 0x979 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP3 PUSH2 0x9A1 PUSH2 0x98A DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x90E JUMP JUMPDEST SWAP4 PUSH2 0x998 DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x90E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9E1 JUMPI PUSH2 0x9CB PUSH2 0x9C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x9DD DUP2 PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA01 SWAP1 PUSH1 0x8 PUSH2 0xA06 SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA14 SWAP2 SLOAD PUSH2 0x9F1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA24 PUSH1 0x1 PUSH1 0x0 SWAP1 PUSH2 0xA09 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA30 SWAP1 PUSH2 0x712 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA3C SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA54 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0xA33 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xA86 JUMPI PUSH2 0xA66 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0xA82 PUSH2 0xA71 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0xA79 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA40 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0xAB9 JUMPI PUSH2 0xAA3 PUSH2 0xA9E CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x2636 JUMP JUMPDEST PUSH2 0xAAB PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0xAB5 DUP2 PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0xAEE JUMPI PUSH2 0xACE CALLDATASIZE PUSH1 0x4 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0xAEA PUSH2 0xAD9 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB02 PUSH1 0xE0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 PUSH2 0xB38 PUSH2 0xB05 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB43 PUSH2 0xB0A JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB4E PUSH2 0xB0A JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB59 PUSH2 0xB0F JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB64 PUSH2 0xB14 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB6F PUSH2 0xB19 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB7A PUSH2 0xB05 JUMP JUMPDEST DUP2 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB88 PUSH2 0xB1E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x426174746C6520646F6573206E6F742065786973740000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xBC9 PUSH1 0x15 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0xB94 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0xBEC SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0xBBC JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xBF6 JUMPI JUMP JUMPDEST PUSH2 0xBFE PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xC14 PUSH1 0x4 DUP3 ADD PUSH2 0xBD6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC37 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0xC4E PUSH2 0xC49 DUP4 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0xC7D PUSH2 0xC65 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0xC73 DUP7 SWAP4 PUSH2 0xC1F JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0xC53 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xC91 PUSH2 0xC9B SWAP3 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCAA SWAP2 ADD PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCD3 PUSH1 0x1 SWAP2 PUSH2 0xCAD JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0xCEB DUP3 PUSH2 0x457 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xCFC JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0xD0B SWAP1 PUSH2 0xC8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0xD19 PUSH1 0xE0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD26 SWAP1 SLOAD PUSH2 0x287 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD4C PUSH2 0xD46 PUSH2 0xD3F DUP5 PUSH2 0xC1B JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x45B JUMP JUMPDEST SWAP3 PUSH2 0xCAD JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD5D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xD7D PUSH2 0xD77 PUSH1 0x1 SWAP3 PUSH2 0xD72 DUP8 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST SWAP5 PUSH2 0xD29 JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0xD50 JUMP JUMPDEST SWAP1 PUSH2 0xD91 SWAP2 PUSH2 0xD2F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDB4 PUSH2 0xDAD SWAP3 PUSH2 0xDA4 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xD87 JUMP JUMPDEST SUB DUP4 PUSH2 0x889 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDBF SWAP1 PUSH2 0xD94 JUMP JUMPDEST SWAP1 JUMP JUMPDEST MSTORE JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xDE1 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0xDF8 PUSH2 0xDF3 DUP4 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE1A PUSH2 0xE1F SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE2C SWAP1 SLOAD PUSH2 0xE0E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE39 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE4F PUSH2 0xE54 SWAP2 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE61 SWAP1 SLOAD PUSH2 0xE43 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE6E SWAP1 PUSH2 0x507 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x10 SHR SWAP1 JUMP JUMPDEST PUSH2 0xE84 PUSH2 0xE89 SWAP2 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE96 SWAP1 SLOAD PUSH2 0xE78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xEA3 PUSH1 0x60 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xEF4 PUSH2 0xEEB PUSH1 0x0 PUSH2 0xEB7 PUSH2 0xE99 JUMP JUMPDEST SWAP5 PUSH2 0xECE PUSH2 0xEC6 DUP4 DUP4 ADD PUSH2 0xE22 JUMP JUMPDEST DUP4 DUP9 ADD PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xEE5 PUSH2 0xEDC DUP4 DUP4 ADD PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD PUSH2 0xE64 JUMP JUMPDEST ADD PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEFF SWAP1 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xF0C DUP3 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0xF15 DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 PUSH2 0xF23 PUSH1 0x20 DUP6 ADD SWAP2 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xF34 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xF43 DUP6 PUSH2 0xEF6 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0xF5A SWAP1 PUSH2 0xF02 JUMP JUMPDEST SWAP1 JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xF6A SWAP1 PUSH2 0x379 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xF78 SWAP1 PUSH2 0x3AD JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xF85 PUSH2 0xB80 JUMP JUMPDEST POP PUSH2 0xFAB DUP3 PUSH2 0xFA5 PUSH2 0xF9F PUSH2 0xF9A PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xFC0 PUSH2 0xFBA PUSH1 0x2 DUP5 SWAP1 PUSH2 0x258 JUMP JUMPDEST POP PUSH2 0xC18 JUMP JUMPDEST SWAP2 PUSH2 0xFD5 PUSH2 0xFD0 PUSH1 0x1 DUP6 ADD PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST SWAP1 PUSH2 0xFE0 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xFFF PUSH2 0xFF9 PUSH2 0xFF4 PUSH1 0x1 DUP10 ADD PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH2 0x105C JUMPI PUSH2 0x1057 SWAP1 PUSH2 0x1052 PUSH2 0x1040 PUSH2 0x103B PUSH2 0x101E PUSH1 0x3 DUP8 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x1035 PUSH2 0x102F PUSH1 0x1 DUP13 ADD DUP8 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 PUSH2 0x18B JUMP JUMPDEST SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH2 0x104D DUP7 SWAP2 DUP5 SWAP1 SWAP3 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xFE1 JUMP JUMPDEST POP POP SWAP2 SWAP1 SWAP2 DUP2 PUSH1 0x0 ADD PUSH2 0x106E SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x1 ADD SWAP2 DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x3 ADD PUSH2 0x1085 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x3 ADD PUSH2 0x1093 SWAP1 PUSH2 0x2EF JUMP JUMPDEST SWAP4 PUSH1 0x4 ADD PUSH2 0x10A0 SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP5 PUSH2 0x10A9 PUSH2 0xD0F JUMP JUMPDEST SWAP7 PUSH1 0x0 DUP9 ADD SWAP1 PUSH2 0x10B8 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x10C1 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x10CF SWAP2 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x10DD SWAP2 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x10E6 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x10F4 SWAP2 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1102 SWAP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 PUSH2 0x1110 SWAP2 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD SWAP1 PUSH2 0x111E SWAP2 PUSH2 0xD01 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x112D PUSH2 0x1132 SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x113F SWAP1 SLOAD PUSH2 0x1121 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x115A DUP3 PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x1169 DUP3 PUSH2 0x8CC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x80 DUP4 DUP3 SUB SLT PUSH2 0x11CB JUMPI PUSH2 0x11C4 SWAP1 PUSH2 0x1185 PUSH1 0x80 PUSH2 0x8B2 JUMP JUMPDEST SWAP4 PUSH2 0x1193 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x11A5 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x11B7 DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x115C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11F8 JUMPI PUSH2 0x11F4 PUSH1 0x20 SWAP2 PUSH2 0x869 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1211 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x1200 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1237 PUSH2 0x1232 DUP3 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH2 0x1253 JUMPI PUSH2 0x1251 SWAP3 PUSH2 0x11FD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1276 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1273 SWAP4 MLOAD SWAP2 ADD PUSH2 0x1222 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11D0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x120 DUP2 DUP5 SUB SLT PUSH2 0x131A JUMPI PUSH2 0x1293 PUSH1 0xC0 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 PUSH2 0x12A1 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x0 DUP6 ADD MSTORE PUSH2 0x12B3 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x12C5 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x12D7 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x116B JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1315 JUMPI PUSH2 0x1300 DUP3 PUSH2 0x130E SWAP5 DUP4 ADD PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1350 JUMPI PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x134B JUMPI PUSH2 0x1348 SWAP3 ADD PUSH2 0x127B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH2 0x135D PUSH2 0xB3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1370 SWAP1 MLOAD PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4167656E7420646F6573206E6F74206578697374000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x13A8 PUSH1 0x14 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x1373 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x13CB SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x139B JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x13D5 JUMPI JUMP JUMPDEST PUSH2 0x13DD PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x13F3 PUSH1 0x4 DUP3 ADD PUSH2 0x13B5 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1401 SWAP1 MLOAD PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1416 PUSH2 0x1420 SWAP3 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x496E76616C696420616767726573736976656E65737300000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1458 PUSH1 0x16 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x1461 DUP2 PUSH2 0x1423 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x147B SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x144B JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1485 JUMPI JUMP JUMPDEST PUSH2 0x148D PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x14A3 PUSH1 0x4 DUP3 ADD PUSH2 0x1465 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x496E76616C6964207269736B20746F6C6572616E636500000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x14DC PUSH1 0x16 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x14E5 DUP2 PUSH2 0x14A7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x14FF SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x14CF JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1509 JUMPI JUMP JUMPDEST PUSH2 0x1511 PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1527 PUSH1 0x4 DUP3 ADD PUSH2 0x14E9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1537 PUSH2 0x153C SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1549 SWAP1 SLOAD PUSH2 0x152B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1555 SWAP1 PUSH2 0x71D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1561 SWAP1 PUSH2 0x154C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x156D SWAP1 PUSH2 0x739 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1586 DUP2 PUSH2 0x1570 JUMP JUMPDEST SUB PUSH2 0x158D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x159F DUP3 PUSH2 0x157D JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x15BB JUMPI PUSH2 0x15B8 SWAP2 PUSH1 0x0 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x15D2 PUSH2 0x15DC SWAP3 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x1570 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1601 PUSH2 0x1607 SWAP2 PUSH2 0x1570 JUMP JUMPDEST SWAP2 PUSH2 0x1570 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1612 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x162B PUSH2 0x1626 PUSH2 0x1630 SWAP3 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x164A PUSH2 0x1645 PUSH2 0x164F SWAP3 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1669 PUSH2 0x1664 PUSH2 0x166E SWAP3 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1683 PUSH2 0xE99 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP1 DUP5 PUSH2 0x1691 PUSH2 0x1671 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0x169C PUSH2 0x1676 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0x16A7 PUSH2 0x1671 JUMP JUMPDEST DUP2 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B5 PUSH2 0x167B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x16C7 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x16D2 PUSH2 0x16AD JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x16BB JUMP JUMPDEST SWAP1 PUSH2 0x1701 PUSH2 0x16E9 DUP4 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0x16F7 DUP7 SWAP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0x16B8 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x170D DUP3 PUSH2 0x4D2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x171E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1730 PUSH1 0xC0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x173E JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1766 JUMPI PUSH2 0x175D PUSH1 0x5 SWAP2 PUSH2 0x1733 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1794 PUSH1 0x0 NOT SWAP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17B6 PUSH2 0x17B1 PUSH2 0x17BD SWAP3 PUSH2 0x120 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1787 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17EA PUSH2 0x17F0 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xC8 JUMP JUMPDEST SWAP3 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0x17FC DUP4 DUP3 MUL PUSH2 0xC8 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x180B JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP2 DUP1 SUB ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x183B SWAP2 MUL SWAP2 PUSH2 0x1835 PUSH1 0x0 NOT DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP3 PUSH2 0x181B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x185B PUSH2 0x1856 PUSH2 0x1863 SWAP4 PUSH2 0x120 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x181F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x187E SWAP2 PUSH2 0x1878 PUSH2 0x1867 JUMP JUMPDEST SWAP2 PUSH2 0x1845 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x188C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x189A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x186C JUMP JUMPDEST ADD PUSH2 0x1881 JUMP JUMPDEST SWAP1 SWAP2 DUP3 DUP2 LT PUSH2 0x18AF JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18CD PUSH2 0x18C7 PUSH2 0x18C1 PUSH2 0x18D8 SWAP6 PUSH2 0x1810 JUMP JUMPDEST SWAP3 PUSH2 0x1810 JUMP JUMPDEST SWAP3 PUSH2 0xCAD JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD SWAP1 PUSH2 0x1880 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x18AA JUMP JUMPDEST SWAP1 PUSH9 0x10000000000000000 DUP2 GT PUSH2 0x1909 JUMPI DUP2 PUSH2 0x18FE PUSH2 0x1907 SWAP4 PUSH2 0xC1B JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x18A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH2 0x1917 DUP3 PUSH2 0x457 JUMP JUMPDEST SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x197B JUMPI PUSH2 0x1945 PUSH2 0x193F PUSH1 0x1 SWAP3 PUSH2 0x193A DUP7 DUP7 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST SWAP3 PUSH2 0xCAD JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1958 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x196E PUSH2 0x1969 DUP7 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x194B JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0x198A SWAP2 PUSH2 0x190E JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP2 DUP1 SUB ADD DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP2 ADD SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 SUB PUSH2 0x19B6 JUMPI PUSH2 0x19B4 SWAP1 PUSH2 0x199B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x19C7 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x19D5 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x19A3 JUMP JUMPDEST ADD PUSH2 0x19BC JUMP JUMPDEST SWAP1 SWAP2 DUP3 DUP2 LT PUSH2 0x19EA JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A08 PUSH2 0x1A02 PUSH2 0x19FC PUSH2 0x1A13 SWAP6 PUSH2 0x1990 JUMP JUMPDEST SWAP3 PUSH2 0x1990 JUMP JUMPDEST SWAP3 PUSH2 0xDFD JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD SWAP1 PUSH2 0x19BB JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x19E5 JUMP JUMPDEST SWAP1 PUSH9 0x10000000000000000 DUP2 GT PUSH2 0x1A44 JUMPI DUP2 PUSH2 0x1A39 PUSH2 0x1A42 SWAP4 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x19DB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A59 PUSH1 0xFF SWAP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1A77 PUSH2 0x1A72 PUSH2 0x1A7C SWAP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A97 PUSH2 0x1A92 PUSH2 0x1A9E SWAP3 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1A4D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1AAC SWAP1 MLOAD PUSH2 0x507 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x8 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1AC2 PUSH2 0xFF00 SWAP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1AD5 SWAP1 PUSH2 0x507 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1AF0 PUSH2 0x1AEB PUSH2 0x1AF7 SWAP3 PUSH2 0x1ACC JUMP JUMPDEST PUSH2 0x1AD8 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B0F PUSH3 0xFF0000 SWAP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B2E PUSH2 0x1B29 PUSH2 0x1B35 SWAP3 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1B01 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1B7C PUSH1 0x40 PUSH1 0x0 PUSH2 0x1B82 SWAP5 PUSH2 0x1B5C DUP3 DUP3 ADD PUSH2 0x1B56 DUP5 DUP9 ADD PUSH2 0x13F7 JUMP JUMPDEST SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x1B74 DUP3 DUP3 ADD PUSH2 0x1B6E PUSH1 0x20 DUP9 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 PUSH2 0x1ADB JUMP JUMPDEST ADD SWAP3 ADD PUSH2 0x13F7 JUMP JUMPDEST SWAP1 PUSH2 0x1B19 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x1B8E SWAP2 PUSH2 0x1B39 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BB5 PUSH2 0x1BAF PUSH2 0x1B9F DUP5 PUSH2 0x4D2 JUMP JUMPDEST SWAP4 PUSH2 0x1BAA DUP6 DUP6 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST SWAP2 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1BC6 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0x1BDE PUSH2 0x1BD8 DUP5 SWAP6 PUSH2 0x1A49 JUMP JUMPDEST DUP7 PUSH2 0x1B84 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 PUSH2 0x1BF4 SWAP2 PUSH2 0x1B90 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1C00 SWAP1 MLOAD PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C0C SWAP1 PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C27 PUSH2 0x1C22 PUSH2 0x1C2E SWAP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x1C0F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1A4D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1C3C SWAP1 MLOAD PUSH2 0x3AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C48 SWAP1 PUSH2 0x3AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C63 PUSH2 0x1C5E PUSH2 0x1C6A SWAP3 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1C4B JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1CFF PUSH1 0xA0 PUSH1 0x4 PUSH2 0x1D05 SWAP5 PUSH2 0x1C93 PUSH1 0x0 DUP3 ADD PUSH2 0x1C8D PUSH1 0x0 DUP9 ADD PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x1CAC PUSH1 0x1 DUP3 ADD PUSH2 0x1CA6 PUSH1 0x20 DUP9 ADD PUSH2 0x17C1 JUMP JUMPDEST SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x1CC5 PUSH1 0x2 DUP3 ADD PUSH2 0x1CBF PUSH1 0x40 DUP9 ADD PUSH2 0x198C JUMP JUMPDEST SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1CDE PUSH1 0x3 DUP3 ADD PUSH2 0x1CD8 PUSH1 0x60 DUP9 ADD PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x1CF7 PUSH1 0x3 DUP3 ADD PUSH2 0x1CF1 PUSH1 0x80 DUP9 ADD PUSH2 0x1C32 JUMP JUMPDEST SWAP1 PUSH2 0x1C4E JUMP JUMPDEST ADD SWAP3 ADD PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x17A1 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1D18 JUMPI PUSH2 0x1D16 SWAP2 PUSH2 0x1C6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x1D4D JUMPI DUP3 PUSH2 0x1D45 SWAP2 PUSH1 0x1 PUSH2 0x1D4B SWAP6 ADD DUP2 SSTORE PUSH2 0x1742 JUMP JUMPDEST SWAP1 PUSH2 0x1D07 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D69 PUSH2 0x1D64 PUSH2 0x1D6E SWAP3 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D88 PUSH2 0x1D83 PUSH2 0x1D8D SWAP3 PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D9F PUSH2 0x1DA5 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xC8 JUMP JUMPDEST SWAP3 PUSH2 0xC8 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1DB0 JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x1DEB PUSH2 0x1DF2 SWAP5 PUSH2 0x1DE1 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1DD7 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST ADD SWAP1 PUSH2 0x391 JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1E37 PUSH1 0x0 PUSH2 0x1E0D PUSH2 0x1E08 DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x1E2C DUP9 SWAP3 PUSH2 0x1E20 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x231D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x22FA JUMPI JUMPDEST POP PUSH2 0x1E8B PUSH1 0x0 PUSH2 0x1E61 PUSH2 0x1E5C DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x1E80 DUP8 SWAP3 PUSH2 0x1E74 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22F5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x22D2 JUMPI JUMPDEST POP SWAP1 PUSH2 0x1EAC PUSH1 0x0 DUP3 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x1EBF PUSH2 0x1EB9 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x22A6 JUMPI JUMPDEST PUSH2 0x1ED0 SWAP1 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x0 DUP5 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x1EEF PUSH2 0x1EE9 PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0x227A JUMPI JUMPDEST PUSH2 0x1F00 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x1F0C PUSH1 0x40 DUP5 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x1F1F PUSH2 0x1F19 PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0x224E JUMPI JUMPDEST PUSH2 0x1F30 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1F3A PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST SWAP3 PUSH2 0x1F70 PUSH1 0x20 PUSH2 0x1F5A PUSH2 0x1F55 PUSH2 0x1F50 PUSH1 0x1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH4 0x705FAB20 SWAP1 PUSH2 0x1F68 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x1147 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x1F80 PUSH1 0x4 DUP3 ADD PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2249 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x221B JUMPI JUMPDEST POP PUSH1 0x3 PUSH2 0x1F9F SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1FA8 SWAP2 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x1FB1 SWAP1 PUSH2 0x1617 JUMP JUMPDEST SWAP6 PUSH1 0x2 PUSH2 0x1FBD SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x1FC6 SWAP1 PUSH2 0xC58 JUMP JUMPDEST SWAP1 DUP9 DUP3 PUSH1 0x0 PUSH2 0x1FD4 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x1FDD SWAP2 PUSH2 0xCE1 JUMP JUMPDEST SWAP1 PUSH2 0x1FE7 SWAP2 PUSH2 0xD01 JUMP JUMPDEST DUP7 DUP3 PUSH1 0x1 PUSH2 0x1FF4 SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x1FFD SWAP2 PUSH2 0xCE1 JUMP JUMPDEST SWAP1 PUSH2 0x2007 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2012 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x201B SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP3 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x202A DUP3 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x2034 SWAP1 DUP5 PUSH2 0x1703 JUMP JUMPDEST MSTORE PUSH2 0x203E SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x2047 SWAP2 PUSH2 0x1703 JUMP JUMPDEST MLOAD POP DUP3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2057 DUP3 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x2061 SWAP1 DUP5 PUSH2 0x1703 JUMP JUMPDEST MSTORE PUSH2 0x206B SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x2074 SWAP2 PUSH2 0x1703 JUMP JUMPDEST MLOAD POP PUSH1 0x2 PUSH2 0x2081 SWAP1 PUSH2 0x1723 JUMP JUMPDEST SWAP2 DUP6 SWAP2 SWAP1 DUP9 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP4 PUSH2 0x2094 PUSH2 0x1726 JUMP JUMPDEST SWAP6 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x20A3 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x20B1 SWAP2 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x20BF SWAP2 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x20CD SWAP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x20DB SWAP2 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x20E4 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x20F2 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x20FB SWAP2 PUSH2 0x1D1D JUMP JUMPDEST DUP1 PUSH1 0x20 ADD PUSH2 0x2108 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2113 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x211C SWAP2 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD PUSH2 0x212D SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x2138 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH2 0x2141 SWAP2 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x214A SWAP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 ADD PUSH2 0x2158 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2163 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x216C SWAP2 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD PUSH2 0x217D SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x2188 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH2 0x2191 SWAP2 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x219A SWAP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP4 PUSH2 0x21A7 SWAP2 PUSH2 0x13C JUMP JUMPDEST DUP7 PUSH2 0x21B1 SWAP2 PUSH2 0x154 JUMP JUMPDEST SWAP1 PUSH2 0x21BB SWAP2 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH2 0x21C7 SWAP2 PUSH2 0x13C JUMP JUMPDEST DUP4 PUSH2 0x21D1 SWAP2 PUSH2 0x154 JUMP JUMPDEST SWAP1 PUSH2 0x21DB SWAP2 PUSH2 0x17A1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH32 0xEE1F4A056590ADCA336CA88EA149BD251D1D2C5EA0530BD96F4724B968713C94 SWAP4 PUSH2 0x2209 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP4 PUSH2 0x2216 SWAP4 DUP6 PUSH2 0x1DB5 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x223C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2242 JUMPI JUMPDEST PUSH2 0x2234 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x15A1 JUMP JUMPDEST CODESIZE PUSH2 0x1F93 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x222A JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST POP PUSH2 0x1F30 PUSH2 0x225E PUSH1 0x40 DUP8 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x2271 PUSH2 0x226B PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO SWAP1 POP PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x1F00 PUSH2 0x228A PUSH1 0x0 DUP8 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x229D PUSH2 0x2297 PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO SWAP1 POP PUSH2 0x1EF7 JUMP JUMPDEST POP PUSH2 0x1ED0 PUSH2 0x22B6 PUSH1 0x0 DUP5 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x22C9 PUSH2 0x22C3 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ ISZERO SWAP1 POP PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x22EF SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x22E7 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x2317 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x230F DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x426174746C6520697320616C72656164792066696E6973686564000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x2357 PUSH1 0x1A PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x2360 DUP2 PUSH2 0x2322 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x237A SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x234A JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2384 JUMPI JUMP JUMPDEST PUSH2 0x238C PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x23A2 PUSH1 0x4 DUP3 ADD PUSH2 0x2364 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x23B2 PUSH2 0x23B7 SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23C4 SWAP1 SLOAD PUSH2 0x23A6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4167656E7420616C726561647920696E20626174746C65000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x23FC PUSH1 0x17 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x2405 DUP2 PUSH2 0x23C7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x241F SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x23EF JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2429 JUMPI JUMP JUMPDEST PUSH2 0x2431 PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x2447 PUSH1 0x4 DUP3 ADD PUSH2 0x2409 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2454 SWAP1 PUSH2 0x807 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x246F PUSH2 0x246A PUSH2 0x2476 SWAP3 PUSH2 0x244B JUMP JUMPDEST PUSH2 0x2457 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1A4D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 SHL SWAP1 JUMP JUMPDEST PUSH2 0x2489 SWAP1 PUSH2 0x247A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2498 PUSH2 0x249D SWAP2 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x2480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24B0 PUSH2 0x24B5 SWAP2 PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x24A1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH2 0x24CC PUSH2 0x24D4 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x248C JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x24A4 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x24F1 PUSH2 0x24FB SWAP3 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2507 DUP2 PUSH2 0xDC5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2519 PUSH1 0x1 SWAP2 PUSH2 0xDFD JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH2 0x2531 PUSH1 0xC0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST MSTORE JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2547 SWAP1 PUSH2 0x253A JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x255A PUSH2 0x2560 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xC8 JUMP JUMPDEST SWAP3 PUSH2 0xC8 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x256B JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x257F PUSH2 0x2584 SWAP2 PUSH2 0x253A JUMP JUMPDEST PUSH2 0x2570 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2594 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x2573 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x25AC PUSH2 0x25A7 PUSH2 0x25B1 SWAP3 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25C0 PUSH2 0x25C6 SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x25D1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x25E1 JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25FD PUSH2 0x25F8 PUSH2 0x2602 SWAP3 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x260E SWAP1 PUSH2 0x25E9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2634 SWAP3 SWAP5 SWAP4 PUSH2 0x262D PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST ADD SWAP1 PUSH2 0x2605 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x265C DUP3 PUSH2 0x2656 PUSH2 0x2650 PUSH2 0x264B PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x2671 PUSH2 0x266B PUSH1 0x2 DUP5 SWAP1 PUSH2 0x258 JUMP JUMPDEST POP PUSH2 0xC18 JUMP JUMPDEST SWAP1 PUSH2 0x269A PUSH2 0x2681 PUSH1 0x3 DUP5 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x2694 PUSH2 0x268E PUSH1 0x0 PUSH2 0x3AD JUMP JUMPDEST SWAP2 PUSH2 0x3AD JUMP JUMPDEST EQ PUSH2 0x237D JUMP JUMPDEST PUSH2 0x26B2 PUSH2 0x26AC PUSH1 0x1 DUP5 ADD PUSH1 0x0 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 PUSH2 0x18B JUMP JUMPDEST SWAP3 PUSH2 0x26CB PUSH2 0x26C5 PUSH1 0x1 DUP6 ADD PUSH1 0x1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 PUSH2 0x18B JUMP JUMPDEST SWAP1 PUSH2 0x26E9 PUSH2 0x26E3 PUSH2 0x26DE PUSH1 0x4 DUP9 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x23BA JUMP JUMPDEST ISZERO PUSH2 0x807 JUMP JUMPDEST DUP1 PUSH2 0x2F1D JUMPI JUMPDEST PUSH2 0x26F8 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x270E PUSH1 0x1 PUSH2 0x2709 PUSH1 0x4 DUP9 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2724 PUSH1 0x1 PUSH2 0x271F PUSH1 0x4 DUP6 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2764 PUSH1 0x0 PUSH2 0x273A PUSH2 0x2735 DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x2759 DUP10 SWAP3 PUSH2 0x274D PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F18 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2EF5 JUMPI JUMPDEST POP SWAP1 PUSH2 0x27B9 PUSH1 0x0 PUSH2 0x278F PUSH2 0x278A DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x27AE DUP8 SWAP3 PUSH2 0x27A2 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2EF0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2ECD JUMPI JUMPDEST POP SWAP3 PUSH2 0x27EC PUSH2 0x27E7 PUSH2 0x27E0 PUSH1 0x3 DUP6 SWAP1 PUSH2 0x13C JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST SWAP7 PUSH2 0x280B PUSH2 0x2806 PUSH2 0x27FF PUSH1 0x3 DUP7 SWAP1 PUSH2 0x13C JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST SWAP7 PUSH2 0x2814 PUSH2 0x1867 JUMP JUMPDEST SWAP8 PUSH2 0x281D PUSH2 0x1867 JUMP JUMPDEST SWAP9 PUSH2 0x2853 PUSH1 0x20 PUSH2 0x283D PUSH2 0x2838 PUSH2 0x2833 PUSH1 0x1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH4 0x705FAB20 SWAP1 PUSH2 0x284B PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x1147 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x2863 PUSH1 0x4 DUP3 ADD PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2EC8 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2E9A JUMPI JUMPDEST POP PUSH2 0x28A2 DUP8 SWAP2 PUSH2 0x2893 PUSH2 0x2887 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x28B4 PUSH2 0x28AE DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x24D8 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0x28C0 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 JUMPDEST DUP3 PUSH2 0x28D6 PUSH2 0x28D0 PUSH1 0x3 PUSH2 0x24E2 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH2 0x2E87 JUMPI PUSH2 0x2978 PUSH1 0x0 PUSH2 0x2973 DUP13 PUSH2 0x296A DUP6 PUSH2 0x2961 DUP16 DUP13 PUSH2 0x2953 PUSH2 0x2958 SWAP3 SWAP7 PUSH2 0x294A PUSH2 0x2941 PUSH2 0x290A PUSH1 0x2 DUP7 ADD DUP14 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP PUSH2 0x293C PUSH2 0x292A PUSH1 0x3 PUSH2 0x2922 PUSH1 0x2 DUP11 ADD PUSH1 0x1 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP SWAP9 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP10 SWAP12 PUSH2 0x2934 PUSH2 0x2527 JUMP JUMPDEST SWAP15 DUP16 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD PUSH2 0xF60 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD PUSH2 0x253D JUMP JUMPDEST PUSH2 0x3175 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x298C PUSH2 0x2986 DUP4 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH1 0x0 EQ PUSH2 0x2E77 JUMPI POP PUSH2 0x29A0 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST JUMPDEST SWAP4 DUP9 SWAP1 DUP8 DUP10 SWAP2 SWAP3 PUSH2 0x29F9 PUSH2 0x29E7 PUSH2 0x29E1 PUSH2 0x29DB PUSH32 0xCF2D586A11B0DF2DC974A66369AD4E68566A0635FD2448E810592EAC3D3BEDAE SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x29F0 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 LOG4 DUP4 PUSH2 0x2A10 PUSH2 0x2A0A PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ PUSH2 0x2E60 JUMPI PUSH2 0x2AF0 PUSH1 0x0 PUSH2 0x2AEB DUP12 PUSH2 0x2AE2 DUP15 PUSH2 0x2AD9 PUSH2 0x2AD0 DUP13 PUSH2 0x2A47 PUSH2 0x2A56 PUSH2 0x2ACB SWAP12 PUSH2 0x2A3B PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 ADD PUSH2 0x2588 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x2A68 PUSH2 0x2A62 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x24D8 JUMP JUMPDEST KECCAK256 SWAP10 DUP11 SWAP5 SWAP7 PUSH2 0x2AC2 PUSH2 0x2AB9 PUSH2 0x2A82 PUSH1 0x2 DUP7 ADD PUSH1 0x1 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP PUSH2 0x2AB4 PUSH2 0x2AA2 PUSH1 0x3 PUSH2 0x2A9A PUSH1 0x2 DUP11 ADD PUSH1 0x0 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP SWAP9 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP10 SWAP12 PUSH2 0x2AAC PUSH2 0x2527 JUMP JUMPDEST SWAP15 DUP16 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD PUSH2 0xF60 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD PUSH2 0x253D JUMP JUMPDEST PUSH2 0x3175 JUMP JUMPDEST SWAP13 DUP14 DUP1 PUSH2 0x2B05 PUSH2 0x2AFF DUP5 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH1 0x0 EQ PUSH2 0x2E52 JUMPI POP POP PUSH2 0x2B1A PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST JUMPDEST SWAP13 DUP9 SWAP1 DUP9 DUP9 SWAP2 SWAP3 PUSH2 0x2B73 PUSH2 0x2B61 PUSH2 0x2B5B PUSH2 0x2B55 PUSH32 0xCF2D586A11B0DF2DC974A66369AD4E68566A0635FD2448E810592EAC3D3BEDAE SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x2B6A PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 LOG4 DUP13 PUSH2 0x2B8A PUSH2 0x2B84 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ PUSH2 0x2BDB JUMPI PUSH2 0x2BAD PUSH2 0x2BBC PUSH2 0x2BD5 SWAP3 PUSH2 0x2BA1 PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 ADD PUSH2 0x2588 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x2BCE PUSH2 0x2BC8 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x24D8 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0xC9E JUMP JUMPDEST SWAP2 PUSH2 0x28C2 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 DUP5 SWAP8 DUP5 SWAP8 JUMPDEST DUP10 PUSH2 0x2C00 PUSH2 0x2BFA PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ PUSH2 0x2D39 JUMPI JUMPDEST POP POP POP POP PUSH2 0x2C52 SWAP3 SWAP2 PUSH2 0x2C2E PUSH2 0x2C40 SWAP3 PUSH2 0x2C24 PUSH1 0x1 PUSH1 0x3 DUP4 ADD PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x4 DUP10 SWAP2 ADD PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x2C3B PUSH1 0x0 SWAP2 PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2C4D PUSH1 0x0 SWAP2 PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2C64 PUSH2 0x2C5F PUSH1 0x0 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x953B6A91 DUP5 PUSH1 0x32 SWAP3 DUP1 EXTCODESIZE ISZERO PUSH2 0x2D34 JUMPI PUSH2 0x2C92 PUSH1 0x0 DUP1 SWAP5 PUSH2 0x2C9D PUSH2 0x2C86 PUSH2 0xB3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x1147 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x2612 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2D2F JUMPI PUSH2 0x2D02 JUMPI JUMPDEST POP SWAP2 PUSH2 0x2CEA PUSH2 0x2CE4 PUSH2 0x2CDE PUSH32 0xC76E6DE66E7F50844440B686C8189EF9B89939DFE8F4560382213011ED5D31C7 SWAP6 PUSH2 0x120 JUMP JUMPDEST SWAP3 PUSH2 0x120 JUMP JUMPDEST SWAP3 PUSH2 0x120 JUMP JUMPDEST SWAP3 PUSH2 0x2CF3 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x2CFD DUP2 PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH2 0x2D22 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0x2D28 JUMPI JUMPDEST PUSH2 0x2D1A DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25D6 JUMP JUMPDEST CODESIZE PUSH2 0x2CAC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2D10 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x2C52 SWAP7 SWAP6 SWAP10 POP PUSH2 0x2E27 SWAP4 SWAP5 SWAP9 POP SWAP2 PUSH2 0x2E17 PUSH2 0x2E06 PUSH2 0x2E1C SWAP4 PUSH2 0x2E01 PUSH2 0x2DF0 PUSH2 0x2DA7 DUP9 PUSH2 0x2DA1 PUSH2 0x2D91 PUSH1 0x0 PUSH1 0x60 PUSH2 0x2D88 PUSH2 0x2D78 PUSH2 0x2E21 SWAP16 PUSH1 0x20 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2D82 PUSH1 0x14 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP5 ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2D9B PUSH1 0x5 PUSH2 0x1D74 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP3 PUSH2 0x2DEA PUSH2 0x2DDA PUSH1 0x0 PUSH1 0x60 PUSH2 0x2DD1 PUSH2 0x2DC1 PUSH1 0x20 DUP8 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2DCB PUSH1 0x14 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP5 ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2DE4 PUSH1 0x5 PUSH2 0x1D74 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP5 PUSH2 0x2DFB PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x25B4 JUMP JUMPDEST SWAP6 PUSH2 0x2E11 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH1 0x0 EQ PUSH2 0x2E43 JUMPI PUSH2 0x2C40 DUP6 PUSH2 0x2C2E DUP4 SWAP7 JUMPDEST SWAP3 DUP3 SWAP5 SWAP6 PUSH2 0x2C06 JUMP JUMPDEST PUSH2 0x2C40 DUP2 SWAP6 PUSH2 0x2C2E DUP2 SWAP7 PUSH2 0x2E3A JUMP JUMPDEST PUSH2 0x2E5B SWAP2 PUSH2 0x254B JUMP JUMPDEST PUSH2 0x2B1B JUMP JUMPDEST POP POP POP SWAP2 DUP1 SWAP5 SWAP7 SWAP9 POP SWAP9 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 SWAP8 DUP6 SWAP8 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x2E82 SWAP1 DUP6 SWAP1 PUSH2 0x254B JUMP JUMPDEST PUSH2 0x29A1 JUMP JUMPDEST POP SWAP10 SWAP9 SWAP11 SWAP3 SWAP5 SWAP7 SWAP1 POP SWAP7 SWAP1 SWAP3 SWAP5 SWAP7 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x2EBB SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EC1 JUMPI JUMPDEST PUSH2 0x2EB3 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x15A1 JUMP JUMPDEST CODESIZE PUSH2 0x2876 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EA9 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x2EEA SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x2EE2 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x2F12 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x2F0A DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x2777 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST POP PUSH2 0x26F8 PUSH2 0x2F3E PUSH2 0x2F38 PUSH2 0x2F33 PUSH1 0x4 DUP7 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x23BA JUMP JUMPDEST ISZERO PUSH2 0x807 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2F4D PUSH2 0x1867 JUMP JUMPDEST POP PUSH2 0x2F58 PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F72 PUSH2 0x2F6D PUSH2 0x2F77 SWAP3 PUSH2 0x2F5B JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F91 PUSH2 0x2F8C PUSH2 0x2F96 SWAP3 PUSH2 0x2F7A JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2FB0 PUSH2 0x2FAB PUSH2 0x2FB5 SWAP3 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2FC4 PUSH2 0x2FCA SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2FD5 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x2FEE PUSH2 0x2FE9 PUSH2 0x2FF3 SWAP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3000 SWAP1 MLOAD PUSH2 0x253A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x301E SWAP1 PUSH2 0x3003 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH2 0x3033 PUSH2 0x3038 SWAP2 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x304F PUSH2 0x304A PUSH2 0x3054 SWAP3 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3063 PUSH2 0x3069 SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3074 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3090 PUSH2 0x308B PUSH2 0x3095 SWAP3 PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x30B7 SWAP1 PUSH2 0x30B1 PUSH2 0x30AB PUSH2 0x30BC SWAP5 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x253A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x30D3 PUSH2 0x30CE PUSH2 0x30D8 SWAP3 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x30E7 PUSH2 0x30ED SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x30FA JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3116 PUSH2 0x3111 PUSH2 0x311B SWAP3 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3132 PUSH2 0x312D PUSH2 0x3137 SWAP3 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x314E PUSH2 0x3149 PUSH2 0x3153 SWAP3 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x316D PUSH2 0x3168 PUSH2 0x3172 SWAP3 PUSH2 0x3156 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x317D PUSH2 0x1867 JUMP JUMPDEST POP PUSH2 0x31C1 PUSH2 0x31A7 PUSH2 0x3197 PUSH1 0x0 PUSH1 0x60 DUP2 DUP7 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x31A1 PUSH1 0x2 PUSH2 0x1636 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x31BB PUSH1 0x40 PUSH1 0x60 PUSH1 0x0 DUP7 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x3323 PUSH2 0x3313 PUSH2 0x320A PUSH2 0x31DE PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 DUP9 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x3204 PUSH2 0x31F4 PUSH1 0x40 PUSH1 0x60 DUP2 DUP11 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x31FE PUSH1 0x2 PUSH2 0x1636 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP3 PUSH2 0x330D PUSH2 0x32FD DUP7 PUSH2 0x32F7 PUSH2 0x321F PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3229 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x3239 PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x324C PUSH2 0x3246 PUSH1 0x1 PUSH2 0x507 JUMP JUMPDEST SWAP2 PUSH2 0x507 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x36F4 JUMPI PUSH2 0x3268 SWAP1 PUSH2 0x3262 PUSH1 0x1E PUSH2 0x2F7D JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST DUP4 PUSH2 0x327A PUSH1 0x20 PUSH1 0x60 DUP4 ADD MLOAD ADD PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x328D PUSH2 0x3287 PUSH1 0x3 PUSH2 0x507 JUMP JUMPDEST SWAP2 PUSH2 0x507 JUMP JUMPDEST EQ PUSH2 0x36B0 JUMPI JUMPDEST PUSH2 0x32DC PUSH1 0x0 PUSH1 0x20 PUSH2 0x32D3 PUSH2 0x32F1 SWAP6 PUSH2 0x32CD PUSH2 0x32C8 PUSH2 0x32B8 DUP7 DUP7 PUSH2 0x32EC SWAP11 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x32C2 PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP8 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x32E6 PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP1 PUSH2 0x254B JUMP JUMPDEST SWAP4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3307 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST SWAP4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x331D PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST DUP2 PUSH2 0x3336 PUSH2 0x3330 DUP4 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST GT ISZERO PUSH2 0x36A0 JUMPI PUSH2 0x3345 SWAP2 PUSH2 0x254B JUMP JUMPDEST SWAP1 PUSH2 0x337D PUSH2 0x336D PUSH2 0x3368 PUSH2 0x3363 PUSH2 0x335E PUSH1 0xA0 DUP7 ADD PUSH2 0x2FF6 JUMP JUMPDEST PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x303B JUMP JUMPDEST PUSH2 0x3377 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x3391 PUSH1 0x20 PUSH1 0x60 PUSH1 0x40 DUP6 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x33A4 PUSH2 0x339E PUSH1 0x32 PUSH2 0x25E9 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x3681 JUMPI PUSH2 0x33C8 PUSH2 0x33C2 PUSH2 0x33BC PUSH1 0x32 PUSH2 0x25E9 JUMP JUMPDEST JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH2 0x3672 JUMPI PUSH2 0x3417 PUSH2 0x3407 PUSH2 0x3402 PUSH2 0x33FD PUSH2 0x33F8 PUSH2 0x33E8 PUSH1 0xA0 DUP8 ADD PUSH2 0x2FF6 JUMP JUMPDEST PUSH2 0x33F2 PUSH1 0xA0 PUSH2 0x307C JUMP JUMPDEST SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x303B JUMP JUMPDEST PUSH2 0x3411 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x3442 PUSH2 0x343D PUSH2 0x342D PUSH1 0x40 PUSH1 0x20 DUP7 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x3437 PUSH1 0x2 PUSH2 0x30BF JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP1 PUSH2 0x3481 PUSH2 0x347C PUSH2 0x346C PUSH1 0x64 PUSH2 0x3467 PUSH2 0x3461 PUSH1 0x40 PUSH1 0x20 DUP11 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST SWAP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x3476 PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP2 PUSH2 0x3495 PUSH2 0x348F DUP4 SWAP3 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x3614 JUMPI POP POP SWAP1 PUSH2 0x34B7 PUSH2 0x34C7 SWAP2 PUSH2 0x34B1 PUSH1 0xF PUSH2 0x2F5E JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x34C1 PUSH1 0xA PUSH2 0x3102 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x34D5 PUSH1 0x80 DUP3 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x34E8 PUSH2 0x34E2 PUSH1 0x1 PUSH2 0x379 JUMP JUMPDEST SWAP2 PUSH2 0x379 JUMP JUMPDEST EQ DUP1 PUSH2 0x35E7 JUMPI JUMPDEST PUSH1 0x0 EQ PUSH2 0x3522 JUMPI POP PUSH2 0x350E PUSH2 0x351E SWAP2 PUSH2 0x3508 PUSH1 0x73 PUSH2 0x3159 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3518 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x352E PUSH1 0x80 DUP3 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x3541 PUSH2 0x353B PUSH1 0x2 PUSH2 0x379 JUMP JUMPDEST SWAP2 PUSH2 0x379 JUMP JUMPDEST EQ SWAP1 DUP2 PUSH2 0x3580 JUMPI JUMPDEST POP PUSH2 0x3554 JUMPI JUMPDEST PUSH2 0x351F JUMP JUMPDEST PUSH2 0x356B PUSH2 0x357B SWAP2 PUSH2 0x3565 PUSH1 0x73 PUSH2 0x3159 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3575 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP PUSH2 0x3595 PUSH1 0x60 DUP1 PUSH1 0x0 DUP5 ADD MLOAD ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x35A8 PUSH2 0x35A2 PUSH1 0x3 PUSH2 0x313A JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x35B8 JUMPI JUMPDEST POP CODESIZE PUSH2 0x3549 JUMP JUMPDEST PUSH2 0x35CD SWAP2 POP PUSH1 0x60 PUSH1 0x0 DUP2 SWAP3 ADD MLOAD ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x35E0 PUSH2 0x35DA PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST EQ CODESIZE PUSH2 0x35B1 JUMP JUMPDEST POP PUSH2 0x35FB PUSH1 0x60 DUP1 PUSH1 0x0 DUP5 ADD MLOAD ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x360E PUSH2 0x3608 PUSH1 0x1 PUSH2 0x311E JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST EQ PUSH2 0x34EF JUMP JUMPDEST PUSH2 0x3633 PUSH2 0x362E PUSH2 0x3639 SWAP3 SWAP4 PUSH2 0x3629 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x254B JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST GT PUSH2 0x3644 JUMPI JUMPDEST PUSH2 0x34C9 JUMP JUMPDEST SWAP1 PUSH2 0x365C PUSH2 0x366C SWAP2 PUSH2 0x3656 PUSH1 0x5 PUSH2 0x1D74 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3666 PUSH1 0xA PUSH2 0x3102 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST SWAP1 PUSH2 0x363F JUMP JUMPDEST POP POP PUSH2 0x367E PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x33C8 PUSH2 0x33C2 PUSH2 0x369B PUSH1 0x20 PUSH1 0x60 PUSH1 0x40 DUP8 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x33BD JUMP JUMPDEST POP POP POP PUSH2 0x36AD PUSH1 0x1 PUSH2 0x1655 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x32DC PUSH1 0x0 PUSH1 0x20 PUSH2 0x32D3 PUSH2 0x32F1 SWAP6 PUSH2 0x32CD PUSH2 0x32C8 PUSH2 0x32B8 DUP7 DUP7 PUSH2 0x36E1 PUSH2 0x32EC SWAP12 PUSH2 0x36DB PUSH1 0x1E PUSH2 0x2F7D JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP13 SWAP11 POP POP POP POP POP POP SWAP6 POP POP POP POP POP PUSH2 0x3293 JUMP JUMPDEST PUSH2 0x3703 PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x3716 PUSH2 0x3710 PUSH1 0x2 PUSH2 0x507 JUMP JUMPDEST SWAP2 PUSH2 0x507 JUMP JUMPDEST EQ PUSH2 0x3721 JUMPI JUMPDEST PUSH2 0x3269 JUMP JUMPDEST PUSH2 0x3738 PUSH2 0x3749 SWAP2 PUSH2 0x3732 PUSH1 0xF PUSH2 0x2F5E JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP2 PUSH2 0x3743 PUSH1 0xF PUSH2 0x2F5E JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 PUSH2 0x371C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xD3 0x4D 0xE0 0xA5 0xE9 0xE9 0xBA 0x23 PC SLOAD 0xD1 0xEA 0xC1 PUSH27 0xFF47904714C5F0B6CEAB546D9C6FFE7AE064736F6C634300081C00 CALLER ",
              "sourceMap": "86:10894:0:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;1531:167::-;;1605:50;1620:35;1665:26;1531:167;1620:35;:::i;:::-;1605:50;;:::i;:::-;1665:26;;:::i;:::-;1531:167::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 1731,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_available_length_string_fromMemory": {
                  "entryPoint": 4642,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_enum_Strategy": {
                  "entryPoint": 2303,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_fromMemory": {
                  "entryPoint": 9686,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 4696,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Agent_fromMemory": {
                  "entryPoint": 4895,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_Agent_memory_ptr_fromMemory": {
                  "entryPoint": 4731,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_BattleTactics": {
                  "entryPoint": 2318,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_DNA_fromMemory": {
                  "entryPoint": 4459,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 532,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint64_fromMemory": {
                  "entryPoint": 5537,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 224,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 4429,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_struct_BattleTacticst_uint256t_struct_BattleTactics": {
                  "entryPoint": 2401,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_uint256t_uint256": {
                  "entryPoint": 239,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint64_fromMemory": {
                  "entryPoint": 5522,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint8": {
                  "entryPoint": 2273,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint8_fromMemory": {
                  "entryPoint": 4444,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_array_uint256_dyn_storage": {
                  "entryPoint": 3463,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_struct_BattleTactics": {
                  "entryPoint": 1380,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_uint256": {
                  "entryPoint": 1130,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 2611,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_array_struct_BattleTactics_dyn": {
                  "entryPoint": 1403,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 1153,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn_storage": {
                  "entryPoint": 3375,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 2073,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 2060,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bytes32": {
                  "entryPoint": 9587,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_contract_IAgentFactory": {
                  "entryPoint": 1886,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_contract_IAgentFactory_to_address": {
                  "entryPoint": 1873,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_enum_ArenaType": {
                  "entryPoint": 913,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_enum_ArenaType_to_uint8": {
                  "entryPoint": 1484,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_enum_BattleStatus": {
                  "entryPoint": 1497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_enum_BattleStatus_to_uint8": {
                  "entryPoint": 965,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_enum_Strategy": {
                  "entryPoint": 1311,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_packed_bytes32": {
                  "entryPoint": 9608,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_packed_uint64_uint256": {
                  "entryPoint": 9401,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_rational_by": {
                  "entryPoint": 9733,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_stringliteral_291a": {
                  "entryPoint": 9225,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_291ac9c7916825c1f892e5ab5495727e332be642db1f3e18e259e0cfed7ab80a": {
                  "entryPoint": 9199,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_2dae": {
                  "entryPoint": 3030,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_2dae7c63f6305af19a395c7310c7a132a9c999e94714d71ec139465e375c7abb": {
                  "entryPoint": 3004,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_80f6": {
                  "entryPoint": 5327,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_aa4e": {
                  "entryPoint": 9060,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_aa4ecc9358ce6ad6330ecb2a7adc5604d42cd563da542df4d30926e59aae4b3b": {
                  "entryPoint": 9034,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_b51a": {
                  "entryPoint": 5019,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_d9e2": {
                  "entryPoint": 5221,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_d9e269b6c028bcd2b8e5dd509617c5ca0118eb9eecbcbff14751da7b454f6ef0": {
                  "entryPoint": 5195,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_struct_BattleTactics": {
                  "entryPoint": 1324,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_struct_BattleView": {
                  "entryPoint": 1510,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_BattleView_memory_ptr": {
                  "entryPoint": 1653,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 2473,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 2624,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_80f6": {
                  "entryPoint": 5353,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral_b51a": {
                  "entryPoint": 5045,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 456,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_enum_ArenaType_enum_BattleStatus_uint256": {
                  "entryPoint": 978,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_rational_by": {
                  "entryPoint": 9746,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 1098,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_to_uint256_fromStack": {
                  "entryPoint": 443,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_to_uint256_nonPadded_inplace": {
                  "entryPoint": 9380,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256_uint256_enum_ArenaType": {
                  "entryPoint": 7605,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint64": {
                  "entryPoint": 9356,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint8": {
                  "entryPoint": 1259,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_and_zero_memory_array_array_struct_BattleTactics_dyn": {
                  "entryPoint": 5852,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_uint256_dyn": {
                  "entryPoint": 3160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_BattleTactics": {
                  "entryPoint": 5755,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_BattleView": {
                  "entryPoint": 2846,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 2226,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_array_struct_BattleTactics_dyn": {
                  "entryPoint": 3558,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_array_uint256_dyn": {
                  "entryPoint": 3132,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_AttackParameters_storage_ptr": {
                  "entryPoint": 9511,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_BattleTactics": {
                  "entryPoint": 3737,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_BattleView": {
                  "entryPoint": 2808,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_BattleView_storage_ptr": {
                  "entryPoint": 3343,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_struct_struct_Battle_storage_ptr": {
                  "entryPoint": 5926,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 179,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_BattleTactics_dyn": {
                  "entryPoint": 3529,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 3103,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 4570,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_convert_length_to_size_array_struct_BattleTactics_storage_dyn": {
                  "entryPoint": 6544,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_convert_length_to_size_array_uint256_dyn_storage": {
                  "entryPoint": 6160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_struct_BattleTactics_dyn": {
                  "entryPoint": 1247,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_struct_BattleTactics_storage_dyn": {
                  "entryPoint": 3581,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_struct_Battle_storage_dyn": {
                  "entryPoint": 589,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_struct_Battle_storage_dyn_ptr": {
                  "entryPoint": 5939,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_uint256_dyn": {
                  "entryPoint": 1124,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_uint256_dyn_storage": {
                  "entryPoint": 3245,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_bytes": {
                  "entryPoint": 9432,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_struct_BattleTactics_dyn": {
                  "entryPoint": 1234,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_struct_BattleTactics_storage_dyn": {
                  "entryPoint": 3525,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_struct_Battle_storage_dyn": {
                  "entryPoint": 585,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_struct_Battle_storage_dyn_ptr": {
                  "entryPoint": 5950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_uint256_dyn": {
                  "entryPoint": 1111,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_uint256_dyn_storage": {
                  "entryPoint": 3099,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes": {
                  "entryPoint": 9438,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_array_struct_BattleTactics_dyn": {
                  "entryPoint": 1397,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_array_uint256_dyn": {
                  "entryPoint": 1147,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_array_uint256_dyn_storage": {
                  "entryPoint": 3369,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_struct_Battle_to_array_struct_Battle_storage_dyn_ptr": {
                  "entryPoint": 7453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "array_storeLengthForEncoding_array_struct_BattleTactics_dyn": {
                  "entryPoint": 1238,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_array_uint256_dyn": {
                  "entryPoint": 1115,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": 2955,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 7568,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 9652,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint8": {
                  "entryPoint": 12216,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 6107,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 9547,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint8": {
                  "entryPoint": 12507,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 2599,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 2055,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes20": {
                  "entryPoint": 12291,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes32": {
                  "entryPoint": 9530,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_enum_ArenaType": {
                  "entryPoint": 889,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_enum_BattleStatus": {
                  "entryPoint": 941,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_enum_Strategy": {
                  "entryPoint": 1287,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 2534,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": 1985,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_contract_IAgentFactory": {
                  "entryPoint": 1747,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_enum_ArenaType": {
                  "entryPoint": 680,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_enum_BattleStatus": {
                  "entryPoint": 725,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_enum_Strategy": {
                  "entryPoint": 3645,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint8": {
                  "entryPoint": 3592,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_0_by": {
                  "entryPoint": 3199,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_10_by": {
                  "entryPoint": 12543,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_115_by": {
                  "entryPoint": 12630,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_15_by": {
                  "entryPoint": 12123,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_1_by": {
                  "entryPoint": 5714,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_2_by": {
                  "entryPoint": 5683,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_30_by": {
                  "entryPoint": 12154,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_3_by": {
                  "entryPoint": 5568,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_50_by": {
                  "entryPoint": 9702,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_5_by": {
                  "entryPoint": 7537,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 12185,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 12409,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_storage_array_end_array_struct_BattleTactics__dyn": {
                  "entryPoint": 6619,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_storage_array_end_array_uint256_dyn": {
                  "entryPoint": 6304,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 5124,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by_1": {
                  "entryPoint": 7506,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 1810,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 200,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint64": {
                  "entryPoint": 5488,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 1253,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_struct_BattleTactics": {
                  "entryPoint": 6587,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "clear_storage_range_uint256": {
                  "entryPoint": 6272,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "clear_struct_storage_struct_BattleTactics": {
                  "entryPoint": 6555,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_contract_ICadenceArch": {
                  "entryPoint": 5464,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_array_struct_BattleTactics_storage_dyn_to_array_struct_BattleTactics_dyn": {
                  "entryPoint": 3921,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_array_struct_Battle_storage_dyn_storage_to_array_struct_Battle__dyn_ptr": {
                  "entryPoint": 5923,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_array_uint256_dyn_storage_to_array_uint256_dyn": {
                  "entryPoint": 3510,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": 9291,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bytes20_to_uint160": {
                  "entryPoint": 12327,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bytes32_to_bytes20": {
                  "entryPoint": 12309,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IAgentFactory_to_address": {
                  "entryPoint": 1861,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_ICadenceArch_to_address": {
                  "entryPoint": 5476,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_ArenaType_to_enum_ArenaType": {
                  "entryPoint": 7171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_ArenaType_to_uint8": {
                  "entryPoint": 901,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_BattleStatus_to_enum_BattleStatus": {
                  "entryPoint": 7231,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_BattleStatus_to_uint8": {
                  "entryPoint": 953,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_Strategy_to_enum_Strategy": {
                  "entryPoint": 6860,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_enum_Strategy_to_uint8": {
                  "entryPoint": 1299,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": 3202,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_100_by_1_to_uint256": {
                  "entryPoint": 9624,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_100_by_1_to_uint8": {
                  "entryPoint": 5127,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_115_by_1_to_uint256": {
                  "entryPoint": 12633,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_15_by_1_to_uint256": {
                  "entryPoint": 12126,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_160_by_1_to_uint8": {
                  "entryPoint": 12412,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint256": {
                  "entryPoint": 5717,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint8": {
                  "entryPoint": 12574,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_20_by_1_to_uint256": {
                  "entryPoint": 7509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 5686,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint8": {
                  "entryPoint": 12479,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_30_by_1_to_uint256": {
                  "entryPoint": 12157,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_3_by_1_to_uint256": {
                  "entryPoint": 9442,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_5_by_1_to_uint256": {
                  "entryPoint": 7540,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 9705,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint64": {
                  "entryPoint": 5571,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint8": {
                  "entryPoint": 12602,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_struct_BattleTactics_storage_to_struct_BattleTactics": {
                  "entryPoint": 3830,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_struct_Battle_storage_to_struct_Battle_ptr": {
                  "entryPoint": 3096,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 12546,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint8": {
                  "entryPoint": 12188,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1849,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_ICadenceArch": {
                  "entryPoint": 5452,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1821,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint256": {
                  "entryPoint": 12347,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 288,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint64_to_enum_ArenaType": {
                  "entryPoint": 5655,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint8_to_uint256": {
                  "entryPoint": 12250,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint8_to_uint8": {
                  "entryPoint": 6755,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_array_struct_BattleTactics__dyn": {
                  "entryPoint": 3842,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_array_uint256_dyn": {
                  "entryPoint": 3476,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_to_storage_from_array_struct_BattleTactics_dyn_to_array_struct_BattleTactics__dyn": {
                  "entryPoint": 7056,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn": {
                  "entryPoint": 6414,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 4605,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_struct_to_storage_from_struct_BattleTactics_to_struct_BattleTactics": {
                  "entryPoint": 6969,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_struct_to_storage_from_struct_Battle_to_struct_Battle": {
                  "entryPoint": 7278,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "external_fun_agentFactory": {
                  "entryPoint": 1908,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_agentInBattle": {
                  "entryPoint": 2095,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_battleAgentHealth": {
                  "entryPoint": 478,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_battles": {
                  "entryPoint": 1041,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_cadenceArch": {
                  "entryPoint": 2646,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_fight": {
                  "entryPoint": 2699,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getBattle": {
                  "entryPoint": 1678,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getBattleCount": {
                  "entryPoint": 2750,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_startBattle": {
                  "entryPoint": 2479,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 2545,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bool": {
                  "entryPoint": 1991,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_contract_IAgentFactory": {
                  "entryPoint": 1758,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": 371,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 5419,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_bool": {
                  "entryPoint": 9126,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_contract_IAgentFactory": {
                  "entryPoint": 4385,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_enum_ArenaType": {
                  "entryPoint": 686,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_enum_BattleStatus": {
                  "entryPoint": 731,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_enum_Strategy": {
                  "entryPoint": 3651,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_t_uint8": {
                  "entryPoint": 3598,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 647,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint8": {
                  "entryPoint": 3704,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2185,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_fight": {
                  "entryPoint": 9782,
                  "id": 711,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_getBattle": {
                  "entryPoint": 3964,
                  "id": 1088,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_getBattleCount": {
                  "entryPoint": 12101,
                  "id": 1097,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_resolveAttackAndGetDamage": {
                  "entryPoint": 12661,
                  "id": 1008,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_startBattle": {
                  "entryPoint": 7668,
                  "id": 337,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "getter_fun_agentFactory": {
                  "entryPoint": 1796,
                  "id": 5,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_agentInBattle": {
                  "entryPoint": 2029,
                  "id": 85,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "getter_fun_battleAgentHealth": {
                  "entryPoint": 409,
                  "id": 81,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "getter_fun_battles": {
                  "entryPoint": 764,
                  "id": 75,
                  "parameterSlots": 1,
                  "returnSlots": 4
                },
                "getter_fun_cadenceArch": {
                  "entryPoint": 2583,
                  "id": 7,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 285,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_wrapping_uint256": {
                  "entryPoint": 3230,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_bytes32": {
                  "entryPoint": 9584,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_uint256": {
                  "entryPoint": 9377,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_uint64": {
                  "entryPoint": 9344,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_bool_of_uint256": {
                  "entryPoint": 1961,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_mapping_uint256_uint256_of_uint256": {
                  "entryPoint": 316,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_uint256_uint256_of_uint256": {
                  "entryPoint": 340,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_BattleTactics_dyn": {
                  "entryPoint": 5891,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 3297,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_uint256": {
                  "entryPoint": 12375,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_uint64": {
                  "entryPoint": 5621,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x00": {
                  "entryPoint": 5995,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 6085,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 5599,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 852,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 563,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2163,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_bool": {
                  "entryPoint": 9303,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_enum_ArenaType": {
                  "entryPoint": 7183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_enum_BattleStatus": {
                  "entryPoint": 7243,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_enum_Strategy": {
                  "entryPoint": 6872,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 6046,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint8": {
                  "entryPoint": 6783,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_array_struct_BattleTactics_dyn": {
                  "entryPoint": 6540,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_array_uint256_dyn": {
                  "entryPoint": 6081,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_bytes32": {
                  "entryPoint": 12278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_enum_ArenaType": {
                  "entryPoint": 7158,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_enum_BattleStatus": {
                  "entryPoint": 7218,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_enum_Strategy": {
                  "entryPoint": 6818,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_struct_BattleTactics": {
                  "entryPoint": 6729,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_uint256": {
                  "entryPoint": 4966,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_uint8": {
                  "entryPoint": 5111,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_offset_uint256": {
                  "entryPoint": 3356,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_BattleTactics": {
                  "entryPoint": 3750,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 2569,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_bool": {
                  "entryPoint": 2015,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_contract_IAgentFactory": {
                  "entryPoint": 1782,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": 395,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 5439,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 9146,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_contract_IAgentFactory": {
                  "entryPoint": 4405,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_enum_ArenaType": {
                  "entryPoint": 706,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_enum_BattleStatus": {
                  "entryPoint": 751,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_enum_Strategy": {
                  "entryPoint": 3671,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_t_uint8": {
                  "entryPoint": 3724,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint8": {
                  "entryPoint": 3618,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_291a": {
                  "entryPoint": 9250,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_2dae": {
                  "entryPoint": 3055,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_80f6": {
                  "entryPoint": 5378,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_aa4e": {
                  "entryPoint": 9085,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b51a": {
                  "entryPoint": 5070,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_d9e2": {
                  "entryPoint": 5246,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "resize_array_array_struct_BattleTactics_storage_dyn": {
                  "entryPoint": 6683,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "resize_array_array_uint256_dyn_storage": {
                  "entryPoint": 6368,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20": {
                  "entryPoint": 4418,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 4560,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
                  "entryPoint": 2148,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 2803,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
                  "entryPoint": 2247,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                  "entryPoint": 4565,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 195,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 185,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 4949,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 2153,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 6831,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_0": {
                  "entryPoint": 6017,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_16": {
                  "entryPoint": 6907,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_192": {
                  "entryPoint": 9338,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 4423,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_bytes32_uint8": {
                  "entryPoint": 12440,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 6171,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 641,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_224_unsigned": {
                  "entryPoint": 173,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_8_unsigned": {
                  "entryPoint": 719,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_96_unsigned": {
                  "entryPoint": 12321,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 3698,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 364,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_array_index_access_struct_BattleTactics__dyn": {
                  "entryPoint": 9470,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_Battle__dyn": {
                  "entryPoint": 600,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_struct_Battle__dyn_ptr": {
                  "entryPoint": 5954,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_uint256_dyn": {
                  "entryPoint": 3256,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_set_to_zero_struct_BattleTactics": {
                  "entryPoint": 6563,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "storage_set_to_zero_uint256": {
                  "entryPoint": 6252,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "store_literal_in_memory_291ac9c7916825c1f892e5ab5495727e332be642db1f3e18e259e0cfed7ab80a": {
                  "entryPoint": 9159,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_2dae7c63f6305af19a395c7310c7a132a9c999e94714d71ec139465e375c7abb": {
                  "entryPoint": 2964,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_80f60b4c8ea0558097a4af06c46cabc28c35c3194874fbba69e0eefbdf981186": {
                  "entryPoint": 5287,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_aa4ecc9358ce6ad6330ecb2a7adc5604d42cd563da542df4d30926e59aae4b3b": {
                  "entryPoint": 8994,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_b51a60bc5e6b61a74994c9f159617a23abde1488c38ac02c2b4f32f9b8b378da": {
                  "entryPoint": 4979,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_d9e269b6c028bcd2b8e5dd509617c5ca0118eb9eecbcbff14751da7b454f6ef0": {
                  "entryPoint": 5155,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 6175,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 6023,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 6733,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_1": {
                  "entryPoint": 6837,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_2": {
                  "entryPoint": 6913,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_array_struct_BattleTactics_dyn_to_array_struct_BattleTactics__dyn": {
                  "entryPoint": 7146,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_array_uint256_dyn_to_array_uint256_dyn": {
                  "entryPoint": 6528,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": 9306,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_enum_ArenaType_to_enum_ArenaType": {
                  "entryPoint": 7186,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_enum_BattleStatus_to_enum_BattleStatus": {
                  "entryPoint": 7246,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_enum_Strategy_to_enum_Strategy": {
                  "entryPoint": 6875,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_struct_BattleTactics_to_struct_BattleTactics": {
                  "entryPoint": 7044,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_t_uint8_to_t_uint8": {
                  "entryPoint": 6786,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 6049,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint8_to_uint8": {
                  "entryPoint": 6937,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_struct_Battle_to_struct_Battle": {
                  "entryPoint": 7431,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 6213,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_assert_enum_ArenaType": {
                  "entryPoint": 874,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_assert_enum_BattleStatus": {
                  "entryPoint": 926,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_assert_enum_Strategy": {
                  "entryPoint": 1272,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_enum_Strategy": {
                  "entryPoint": 2288,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 203,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint64": {
                  "entryPoint": 5501,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint8": {
                  "entryPoint": 2252,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_array_struct_BattleTactics_dyn": {
                  "entryPoint": 3933,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_array_uint256_dyn": {
                  "entryPoint": 3522,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_bytes32": {
                  "entryPoint": 9533,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_enum_ArenaType": {
                  "entryPoint": 3936,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_enum_BattleStatus": {
                  "entryPoint": 3950,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_enum_Strategy": {
                  "entryPoint": 3684,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_struct_Agent": {
                  "entryPoint": 9524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_struct_BattleTactics": {
                  "entryPoint": 9527,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_uint256": {
                  "entryPoint": 3329,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_uint8": {
                  "entryPoint": 3631,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_complex_memory_array_array_struct_BattleTactics_dyn": {
                  "entryPoint": 5816,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_memory_chunk_uint256": {
                  "entryPoint": 3155,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_value_for_array_struct_BattleTactics_dyn": {
                  "entryPoint": 2831,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_array_uint256_dyn": {
                  "entryPoint": 2826,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_enum_ArenaType": {
                  "entryPoint": 2836,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_enum_BattleStatus": {
                  "entryPoint": 2841,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_enum_Strategy": {
                  "entryPoint": 5750,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_struct_BattleView": {
                  "entryPoint": 2944,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 6247,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_struct_BattleTactics": {
                  "entryPoint": 5805,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_uint256": {
                  "entryPoint": 2821,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_uint8": {
                  "entryPoint": 5745,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xAD JUMP JUMPDEST DUP1 PUSH4 0x2D24D097 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x606D2E96 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6DD0CE7A EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x7DF107EA EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x825B2124 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xC230FE0B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xD0D250BD EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xDF6A37AA EQ PUSH2 0x85 JUMPI PUSH4 0xF470D5EC SUB PUSH2 0xE JUMPI PUSH2 0xABE JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xC8 JUMP JUMPDEST SUB PUSH2 0xDB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xED DUP3 PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x118 JUMPI DUP1 PUSH2 0x10C PUSH2 0x115 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F PUSH2 0x139 SWAP3 PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x146 SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x15E SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x183 SWAP1 PUSH1 0x8 PUSH2 0x188 SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x196 SWAP2 SLOAD PUSH2 0x173 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x1B8 SWAP3 PUSH2 0x1AE PUSH1 0x3 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C4 SWAP1 PUSH2 0xC8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1DC SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x20F JUMPI PUSH2 0x20B PUSH2 0x1FA PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF JUMP JUMPDEST SWAP1 PUSH2 0x199 JUMP JUMPDEST PUSH2 0x202 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x22E JUMPI PUSH2 0x22B SWAP2 PUSH1 0x0 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x261 DUP2 PUSH2 0x249 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x27C JUMPI PUSH2 0x273 PUSH1 0x5 SWAP2 PUSH2 0x24D JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x298 SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2A5 SWAP1 SLOAD PUSH2 0x287 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2BF SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2CC SWAP1 SLOAD PUSH2 0x2AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2EC SWAP2 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F9 SWAP1 SLOAD PUSH2 0x2DB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x308 DUP3 PUSH2 0x249 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x34F JUMPI PUSH2 0x318 SWAP2 PUSH2 0x258 JUMP JUMPDEST POP SWAP1 PUSH2 0x326 PUSH1 0x0 DUP4 ADD PUSH2 0x29B JUMP JUMPDEST SWAP2 PUSH2 0x333 PUSH1 0x3 DUP3 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP2 PUSH2 0x34C PUSH1 0x4 PUSH2 0x345 PUSH1 0x3 DUP6 ADD PUSH2 0x2EF JUMP JUMPDEST SWAP4 ADD PUSH2 0x29B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x374 JUMPI JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST SWAP1 PUSH2 0x383 DUP3 PUSH2 0x36A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x38E SWAP1 PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x39A SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 GT ISZERO PUSH2 0x3A8 JUMPI JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST SWAP1 PUSH2 0x3B7 DUP3 PUSH2 0x39E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C2 SWAP1 PUSH2 0x3AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3CE SWAP1 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x408 PUSH2 0x40F SWAP5 PUSH2 0x3FE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x3F4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x3C5 JUMP JUMPDEST ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x445 JUMPI PUSH2 0x441 PUSH2 0x42C PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST SWAP1 PUSH2 0x438 SWAP5 SWAP3 SWAP5 PUSH2 0xB3 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x3D2 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x453 SWAP1 PUSH2 0xC8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x477 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x44A JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x49E PUSH2 0x498 PUSH2 0x491 DUP5 PUSH2 0x457 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x45B JUMP JUMPDEST SWAP3 PUSH2 0x464 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4AF JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4C8 PUSH2 0x4C2 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x46A JUMP JUMPDEST SWAP5 PUSH2 0x47B JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x4A2 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4F4 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x502 JUMPI JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST SWAP1 PUSH2 0x511 DUP3 PUSH2 0x4F8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x51C SWAP1 PUSH2 0x507 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x528 SWAP1 PUSH2 0x513 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP1 PUSH2 0x562 SWAP4 PUSH2 0x546 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x558 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x51F JUMP JUMPDEST ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x4EB JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x571 DUP2 PUSH1 0x60 SWAP4 PUSH2 0x52C JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x598 PUSH2 0x592 PUSH2 0x58B DUP5 PUSH2 0x4D2 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x4D6 JUMP JUMPDEST SWAP3 PUSH2 0x4DF JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5A9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x5C2 PUSH2 0x5BC PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x564 JUMP JUMPDEST SWAP5 PUSH2 0x575 JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x59C JUMP JUMPDEST PUSH2 0x5D5 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x5E2 SWAP1 PUSH2 0x3B9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x672 SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x643 PUSH2 0x631 PUSH2 0x61F PUSH1 0xE0 DUP7 ADD PUSH2 0x60D PUSH1 0x0 DUP11 ADD MLOAD PUSH1 0x0 DUP10 ADD SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x481 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x57B JUMP JUMPDEST SWAP5 PUSH2 0x656 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x668 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x5D9 JUMP JUMPDEST ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x44A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x68B SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x5E6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x6BE JUMPI PUSH2 0x6BA PUSH2 0x6A9 PUSH2 0x6A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x6B1 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x675 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x6CE JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x6EE SWAP1 PUSH1 0x8 PUSH2 0x6F3 SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x701 SWAP2 SLOAD PUSH2 0x6DE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x70F PUSH1 0x0 DUP1 PUSH2 0x6F6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x731 PUSH2 0x72C PUSH2 0x736 SWAP3 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x742 SWAP1 PUSH2 0x71D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x74E SWAP1 PUSH2 0x739 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x75A SWAP1 PUSH2 0x745 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x772 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x751 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x7A4 JUMPI PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x78F PUSH2 0x704 JUMP JUMPDEST PUSH2 0x797 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x75E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH2 0x7B3 SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7D7 SWAP1 PUSH1 0x8 PUSH2 0x7DC SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x7EA SWAP2 SLOAD PUSH2 0x7C7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x804 SWAP1 PUSH2 0x7FF PUSH1 0x4 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x815 SWAP1 PUSH2 0x807 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x82D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x80C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x85F JUMPI PUSH2 0x85B PUSH2 0x84A PUSH2 0x845 CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x852 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x819 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x893 SWAP1 PUSH2 0x869 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0x8C5 PUSH2 0x8BE PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x889 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D5 DUP2 PUSH2 0x4E5 JUMP JUMPDEST SUB PUSH2 0x8DC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x8EE DUP3 PUSH2 0x8CC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x8FA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x90C DUP3 PUSH2 0x8F0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x60 DUP4 DUP3 SUB SLT PUSH2 0x95C JUMPI PUSH2 0x955 SWAP1 PUSH2 0x928 PUSH1 0x60 PUSH2 0x8B2 JUMP JUMPDEST SWAP4 PUSH2 0x936 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x948 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 ADD PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x100 DUP2 DUP4 SUB SLT PUSH2 0x9A4 JUMPI PUSH2 0x979 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP3 PUSH2 0x9A1 PUSH2 0x98A DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x90E JUMP JUMPDEST SWAP4 PUSH2 0x998 DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0xE0 JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x90E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9E1 JUMPI PUSH2 0x9CB PUSH2 0x9C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x9DD DUP2 PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA01 SWAP1 PUSH1 0x8 PUSH2 0xA06 SWAP4 MUL PUSH2 0x16C JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA14 SWAP2 SLOAD PUSH2 0x9F1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA24 PUSH1 0x1 PUSH1 0x0 SWAP1 PUSH2 0xA09 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA30 SWAP1 PUSH2 0x712 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA3C SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA54 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0xA33 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xA86 JUMPI PUSH2 0xA66 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0xA82 PUSH2 0xA71 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0xA79 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA40 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0xAB9 JUMPI PUSH2 0xAA3 PUSH2 0xA9E CALLDATASIZE PUSH1 0x4 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x2636 JUMP JUMPDEST PUSH2 0xAAB PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0xAB5 DUP2 PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0xAEE JUMPI PUSH2 0xACE CALLDATASIZE PUSH1 0x4 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0xAEA PUSH2 0xAD9 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB02 PUSH1 0xE0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 PUSH2 0xB38 PUSH2 0xB05 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB43 PUSH2 0xB0A JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB4E PUSH2 0xB0A JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB59 PUSH2 0xB0F JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB64 PUSH2 0xB14 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB6F PUSH2 0xB19 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0xB7A PUSH2 0xB05 JUMP JUMPDEST DUP2 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB88 PUSH2 0xB1E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x426174746C6520646F6573206E6F742065786973740000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xBC9 PUSH1 0x15 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0xB94 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0xBEC SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0xBBC JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xBF6 JUMPI JUMP JUMPDEST PUSH2 0xBFE PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xC14 PUSH1 0x4 DUP3 ADD PUSH2 0xBD6 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC37 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0xC4E PUSH2 0xC49 DUP4 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0xC7D PUSH2 0xC65 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0xC73 DUP7 SWAP4 PUSH2 0xC1F JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0xC53 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xC91 PUSH2 0xC9B SWAP3 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCAA SWAP2 ADD PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCD3 PUSH1 0x1 SWAP2 PUSH2 0xCAD JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0xCEB DUP3 PUSH2 0x457 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xCFC JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST SWAP1 PUSH2 0xD0B SWAP1 PUSH2 0xC8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0xD19 PUSH1 0xE0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD26 SWAP1 SLOAD PUSH2 0x287 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD4C PUSH2 0xD46 PUSH2 0xD3F DUP5 PUSH2 0xC1B JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x45B JUMP JUMPDEST SWAP3 PUSH2 0xCAD JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD5D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xD7D PUSH2 0xD77 PUSH1 0x1 SWAP3 PUSH2 0xD72 DUP8 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST SWAP5 PUSH2 0xD29 JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0xD50 JUMP JUMPDEST SWAP1 PUSH2 0xD91 SWAP2 PUSH2 0xD2F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDB4 PUSH2 0xDAD SWAP3 PUSH2 0xDA4 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xD87 JUMP JUMPDEST SUB DUP4 PUSH2 0x889 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDBF SWAP1 PUSH2 0xD94 JUMP JUMPDEST SWAP1 JUMP JUMPDEST MSTORE JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xDE1 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0xDF8 PUSH2 0xDF3 DUP4 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE1A PUSH2 0xE1F SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE2C SWAP1 SLOAD PUSH2 0xE0E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE39 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE4F PUSH2 0xE54 SWAP2 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE61 SWAP1 SLOAD PUSH2 0xE43 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE6E SWAP1 PUSH2 0x507 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x10 SHR SWAP1 JUMP JUMPDEST PUSH2 0xE84 PUSH2 0xE89 SWAP2 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE96 SWAP1 SLOAD PUSH2 0xE78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xEA3 PUSH1 0x60 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xEF4 PUSH2 0xEEB PUSH1 0x0 PUSH2 0xEB7 PUSH2 0xE99 JUMP JUMPDEST SWAP5 PUSH2 0xECE PUSH2 0xEC6 DUP4 DUP4 ADD PUSH2 0xE22 JUMP JUMPDEST DUP4 DUP9 ADD PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xEE5 PUSH2 0xEDC DUP4 DUP4 ADD PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD PUSH2 0xE64 JUMP JUMPDEST ADD PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEFF SWAP1 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xF0C DUP3 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0xF15 DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 PUSH2 0xF23 PUSH1 0x20 DUP6 ADD SWAP2 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xF34 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0xF43 DUP6 PUSH2 0xEF6 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0xF5A SWAP1 PUSH2 0xF02 JUMP JUMPDEST SWAP1 JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xF6A SWAP1 PUSH2 0x379 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xF78 SWAP1 PUSH2 0x3AD JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xF85 PUSH2 0xB80 JUMP JUMPDEST POP PUSH2 0xFAB DUP3 PUSH2 0xFA5 PUSH2 0xF9F PUSH2 0xF9A PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH2 0xBEF JUMP JUMPDEST PUSH2 0xFC0 PUSH2 0xFBA PUSH1 0x2 DUP5 SWAP1 PUSH2 0x258 JUMP JUMPDEST POP PUSH2 0xC18 JUMP JUMPDEST SWAP2 PUSH2 0xFD5 PUSH2 0xFD0 PUSH1 0x1 DUP6 ADD PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xC58 JUMP JUMPDEST SWAP1 PUSH2 0xFE0 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xFFF PUSH2 0xFF9 PUSH2 0xFF4 PUSH1 0x1 DUP10 ADD PUSH2 0xC1B JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH2 0x105C JUMPI PUSH2 0x1057 SWAP1 PUSH2 0x1052 PUSH2 0x1040 PUSH2 0x103B PUSH2 0x101E PUSH1 0x3 DUP8 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x1035 PUSH2 0x102F PUSH1 0x1 DUP13 ADD DUP8 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 PUSH2 0x18B JUMP JUMPDEST SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH2 0x104D DUP7 SWAP2 DUP5 SWAP1 SWAP3 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xFE1 JUMP JUMPDEST POP POP SWAP2 SWAP1 SWAP2 DUP2 PUSH1 0x0 ADD PUSH2 0x106E SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x1 ADD SWAP2 DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x3 ADD PUSH2 0x1085 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x3 ADD PUSH2 0x1093 SWAP1 PUSH2 0x2EF JUMP JUMPDEST SWAP4 PUSH1 0x4 ADD PUSH2 0x10A0 SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP5 PUSH2 0x10A9 PUSH2 0xD0F JUMP JUMPDEST SWAP7 PUSH1 0x0 DUP9 ADD SWAP1 PUSH2 0x10B8 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x10C1 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x10CF SWAP2 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x10DD SWAP2 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x10E6 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x10F4 SWAP2 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1102 SWAP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 PUSH2 0x1110 SWAP2 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD SWAP1 PUSH2 0x111E SWAP2 PUSH2 0xD01 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x112D PUSH2 0x1132 SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x113F SWAP1 SLOAD PUSH2 0x1121 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x115A DUP3 PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x1169 DUP3 PUSH2 0x8CC JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x80 DUP4 DUP3 SUB SLT PUSH2 0x11CB JUMPI PUSH2 0x11C4 SWAP1 PUSH2 0x1185 PUSH1 0x80 PUSH2 0x8B2 JUMP JUMPDEST SWAP4 PUSH2 0x1193 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x11A5 DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x11B7 DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x115C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11F8 JUMPI PUSH2 0x11F4 PUSH1 0x20 SWAP2 PUSH2 0x869 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1211 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x1200 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1237 PUSH2 0x1232 DUP3 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH2 0x1253 JUMPI PUSH2 0x1251 SWAP3 PUSH2 0x11FD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1276 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1273 SWAP4 MLOAD SWAP2 ADD PUSH2 0x1222 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11D0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x120 DUP2 DUP5 SUB SLT PUSH2 0x131A JUMPI PUSH2 0x1293 PUSH1 0xC0 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 PUSH2 0x12A1 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x0 DUP6 ADD MSTORE PUSH2 0x12B3 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x12C5 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x12D7 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x116B JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1315 JUMPI PUSH2 0x1300 DUP3 PUSH2 0x130E SWAP5 DUP4 ADD PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x114D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1350 JUMPI PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x134B JUMPI PUSH2 0x1348 SWAP3 ADD PUSH2 0x127B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH2 0x135D PUSH2 0xB3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1370 SWAP1 MLOAD PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4167656E7420646F6573206E6F74206578697374000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x13A8 PUSH1 0x14 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x1373 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x13CB SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x139B JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x13D5 JUMPI JUMP JUMPDEST PUSH2 0x13DD PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x13F3 PUSH1 0x4 DUP3 ADD PUSH2 0x13B5 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1401 SWAP1 MLOAD PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1416 PUSH2 0x1420 SWAP3 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x496E76616C696420616767726573736976656E65737300000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1458 PUSH1 0x16 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x1461 DUP2 PUSH2 0x1423 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x147B SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x144B JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1485 JUMPI JUMP JUMPDEST PUSH2 0x148D PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x14A3 PUSH1 0x4 DUP3 ADD PUSH2 0x1465 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x496E76616C6964207269736B20746F6C6572616E636500000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x14DC PUSH1 0x16 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x14E5 DUP2 PUSH2 0x14A7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x14FF SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x14CF JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1509 JUMPI JUMP JUMPDEST PUSH2 0x1511 PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x1527 PUSH1 0x4 DUP3 ADD PUSH2 0x14E9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1537 PUSH2 0x153C SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1549 SWAP1 SLOAD PUSH2 0x152B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1555 SWAP1 PUSH2 0x71D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1561 SWAP1 PUSH2 0x154C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x156D SWAP1 PUSH2 0x739 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1586 DUP2 PUSH2 0x1570 JUMP JUMPDEST SUB PUSH2 0x158D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x159F DUP3 PUSH2 0x157D JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x15BB JUMPI PUSH2 0x15B8 SWAP2 PUSH1 0x0 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x15D2 PUSH2 0x15DC SWAP3 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x1570 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1601 PUSH2 0x1607 SWAP2 PUSH2 0x1570 JUMP JUMPDEST SWAP2 PUSH2 0x1570 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1612 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x162B PUSH2 0x1626 PUSH2 0x1630 SWAP3 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x164A PUSH2 0x1645 PUSH2 0x164F SWAP3 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1669 PUSH2 0x1664 PUSH2 0x166E SWAP3 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1683 PUSH2 0xE99 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP1 DUP5 PUSH2 0x1691 PUSH2 0x1671 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0x169C PUSH2 0x1676 JUMP JUMPDEST DUP2 MSTORE ADD PUSH2 0x16A7 PUSH2 0x1671 JUMP JUMPDEST DUP2 MSTORE POP POP JUMP JUMPDEST PUSH2 0x16B5 PUSH2 0x167B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x16C7 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x16D2 PUSH2 0x16AD JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x16BB JUMP JUMPDEST SWAP1 PUSH2 0x1701 PUSH2 0x16E9 DUP4 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0x16F7 DUP7 SWAP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0x16B8 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x170D DUP3 PUSH2 0x4D2 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x171E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1730 PUSH1 0xC0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x173E JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1766 JUMPI PUSH2 0x175D PUSH1 0x5 SWAP2 PUSH2 0x1733 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1794 PUSH1 0x0 NOT SWAP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17B6 PUSH2 0x17B1 PUSH2 0x17BD SWAP3 PUSH2 0x120 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1787 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17EA PUSH2 0x17F0 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xC8 JUMP JUMPDEST SWAP3 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0x17FC DUP4 DUP3 MUL PUSH2 0xC8 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x180B JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP2 DUP1 SUB ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x183B SWAP2 MUL SWAP2 PUSH2 0x1835 PUSH1 0x0 NOT DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP3 PUSH2 0x181B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x185B PUSH2 0x1856 PUSH2 0x1863 SWAP4 PUSH2 0x120 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x181F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x187E SWAP2 PUSH2 0x1878 PUSH2 0x1867 JUMP JUMPDEST SWAP2 PUSH2 0x1845 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x188C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x189A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x186C JUMP JUMPDEST ADD PUSH2 0x1881 JUMP JUMPDEST SWAP1 SWAP2 DUP3 DUP2 LT PUSH2 0x18AF JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18CD PUSH2 0x18C7 PUSH2 0x18C1 PUSH2 0x18D8 SWAP6 PUSH2 0x1810 JUMP JUMPDEST SWAP3 PUSH2 0x1810 JUMP JUMPDEST SWAP3 PUSH2 0xCAD JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD SWAP1 PUSH2 0x1880 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x18AA JUMP JUMPDEST SWAP1 PUSH9 0x10000000000000000 DUP2 GT PUSH2 0x1909 JUMPI DUP2 PUSH2 0x18FE PUSH2 0x1907 SWAP4 PUSH2 0xC1B JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x18A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH2 0x1917 DUP3 PUSH2 0x457 JUMP JUMPDEST SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x197B JUMPI PUSH2 0x1945 PUSH2 0x193F PUSH1 0x1 SWAP3 PUSH2 0x193A DUP7 DUP7 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST SWAP3 PUSH2 0xCAD JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1958 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x196E PUSH2 0x1969 DUP7 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x194B JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 PUSH2 0x198A SWAP2 PUSH2 0x190E JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP2 DUP1 SUB ADD DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP2 ADD SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 SUB PUSH2 0x19B6 JUMPI PUSH2 0x19B4 SWAP1 PUSH2 0x199B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x19C7 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x19D5 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x19A3 JUMP JUMPDEST ADD PUSH2 0x19BC JUMP JUMPDEST SWAP1 SWAP2 DUP3 DUP2 LT PUSH2 0x19EA JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A08 PUSH2 0x1A02 PUSH2 0x19FC PUSH2 0x1A13 SWAP6 PUSH2 0x1990 JUMP JUMPDEST SWAP3 PUSH2 0x1990 JUMP JUMPDEST SWAP3 PUSH2 0xDFD JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD SWAP1 PUSH2 0x19BB JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x19E5 JUMP JUMPDEST SWAP1 PUSH9 0x10000000000000000 DUP2 GT PUSH2 0x1A44 JUMPI DUP2 PUSH2 0x1A39 PUSH2 0x1A42 SWAP4 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x19DB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A59 PUSH1 0xFF SWAP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1A77 PUSH2 0x1A72 PUSH2 0x1A7C SWAP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A97 PUSH2 0x1A92 PUSH2 0x1A9E SWAP3 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1A4D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1AAC SWAP1 MLOAD PUSH2 0x507 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x8 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1AC2 PUSH2 0xFF00 SWAP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1AD5 SWAP1 PUSH2 0x507 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1AF0 PUSH2 0x1AEB PUSH2 0x1AF7 SWAP3 PUSH2 0x1ACC JUMP JUMPDEST PUSH2 0x1AD8 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B0F PUSH3 0xFF0000 SWAP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B2E PUSH2 0x1B29 PUSH2 0x1B35 SWAP3 PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1A7F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1B01 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1B7C PUSH1 0x40 PUSH1 0x0 PUSH2 0x1B82 SWAP5 PUSH2 0x1B5C DUP3 DUP3 ADD PUSH2 0x1B56 DUP5 DUP9 ADD PUSH2 0x13F7 JUMP JUMPDEST SWAP1 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x1B74 DUP3 DUP3 ADD PUSH2 0x1B6E PUSH1 0x20 DUP9 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 PUSH2 0x1ADB JUMP JUMPDEST ADD SWAP3 ADD PUSH2 0x13F7 JUMP JUMPDEST SWAP1 PUSH2 0x1B19 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x1B8E SWAP2 PUSH2 0x1B39 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1BB5 PUSH2 0x1BAF PUSH2 0x1B9F DUP5 PUSH2 0x4D2 JUMP JUMPDEST SWAP4 PUSH2 0x1BAA DUP6 DUP6 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST SWAP2 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1BC6 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0x1BDE PUSH2 0x1BD8 DUP5 SWAP6 PUSH2 0x1A49 JUMP JUMPDEST DUP7 PUSH2 0x1B84 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 PUSH2 0x1BF4 SWAP2 PUSH2 0x1B90 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1C00 SWAP1 MLOAD PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C0C SWAP1 PUSH2 0x379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C27 PUSH2 0x1C22 PUSH2 0x1C2E SWAP3 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x1C0F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1A4D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1C3C SWAP1 MLOAD PUSH2 0x3AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C48 SWAP1 PUSH2 0x3AD JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C63 PUSH2 0x1C5E PUSH2 0x1C6A SWAP3 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1C4B JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1CFF PUSH1 0xA0 PUSH1 0x4 PUSH2 0x1D05 SWAP5 PUSH2 0x1C93 PUSH1 0x0 DUP3 ADD PUSH2 0x1C8D PUSH1 0x0 DUP9 ADD PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x1CAC PUSH1 0x1 DUP3 ADD PUSH2 0x1CA6 PUSH1 0x20 DUP9 ADD PUSH2 0x17C1 JUMP JUMPDEST SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x1CC5 PUSH1 0x2 DUP3 ADD PUSH2 0x1CBF PUSH1 0x40 DUP9 ADD PUSH2 0x198C JUMP JUMPDEST SWAP1 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1CDE PUSH1 0x3 DUP3 ADD PUSH2 0x1CD8 PUSH1 0x60 DUP9 ADD PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH2 0x1CF7 PUSH1 0x3 DUP3 ADD PUSH2 0x1CF1 PUSH1 0x80 DUP9 ADD PUSH2 0x1C32 JUMP JUMPDEST SWAP1 PUSH2 0x1C4E JUMP JUMPDEST ADD SWAP3 ADD PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x17A1 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1D18 JUMPI PUSH2 0x1D16 SWAP2 PUSH2 0x1C6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x1D4D JUMPI DUP3 PUSH2 0x1D45 SWAP2 PUSH1 0x1 PUSH2 0x1D4B SWAP6 ADD DUP2 SSTORE PUSH2 0x1742 JUMP JUMPDEST SWAP1 PUSH2 0x1D07 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D69 PUSH2 0x1D64 PUSH2 0x1D6E SWAP3 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D88 PUSH2 0x1D83 PUSH2 0x1D8D SWAP3 PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D9F PUSH2 0x1DA5 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xC8 JUMP JUMPDEST SWAP3 PUSH2 0xC8 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1DB0 JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x1DEB PUSH2 0x1DF2 SWAP5 PUSH2 0x1DE1 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1DD7 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST ADD SWAP1 PUSH2 0x391 JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1E37 PUSH1 0x0 PUSH2 0x1E0D PUSH2 0x1E08 DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x1E2C DUP9 SWAP3 PUSH2 0x1E20 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x231D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x22FA JUMPI JUMPDEST POP PUSH2 0x1E8B PUSH1 0x0 PUSH2 0x1E61 PUSH2 0x1E5C DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x1E80 DUP8 SWAP3 PUSH2 0x1E74 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22F5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x22D2 JUMPI JUMPDEST POP SWAP1 PUSH2 0x1EAC PUSH1 0x0 DUP3 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x1EBF PUSH2 0x1EB9 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x22A6 JUMPI JUMPDEST PUSH2 0x1ED0 SWAP1 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x1EDC PUSH1 0x0 DUP5 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x1EEF PUSH2 0x1EE9 PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0x227A JUMPI JUMPDEST PUSH2 0x1F00 SWAP1 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x1F0C PUSH1 0x40 DUP5 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x1F1F PUSH2 0x1F19 PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO DUP1 PUSH2 0x224E JUMPI JUMPDEST PUSH2 0x1F30 SWAP1 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1F3A PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST SWAP3 PUSH2 0x1F70 PUSH1 0x20 PUSH2 0x1F5A PUSH2 0x1F55 PUSH2 0x1F50 PUSH1 0x1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH4 0x705FAB20 SWAP1 PUSH2 0x1F68 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x1147 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x1F80 PUSH1 0x4 DUP3 ADD PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2249 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x221B JUMPI JUMPDEST POP PUSH1 0x3 PUSH2 0x1F9F SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1FA8 SWAP2 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x1FB1 SWAP1 PUSH2 0x1617 JUMP JUMPDEST SWAP6 PUSH1 0x2 PUSH2 0x1FBD SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x1FC6 SWAP1 PUSH2 0xC58 JUMP JUMPDEST SWAP1 DUP9 DUP3 PUSH1 0x0 PUSH2 0x1FD4 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x1FDD SWAP2 PUSH2 0xCE1 JUMP JUMPDEST SWAP1 PUSH2 0x1FE7 SWAP2 PUSH2 0xD01 JUMP JUMPDEST DUP7 DUP3 PUSH1 0x1 PUSH2 0x1FF4 SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x1FFD SWAP2 PUSH2 0xCE1 JUMP JUMPDEST SWAP1 PUSH2 0x2007 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2012 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0x201B SWAP1 PUSH2 0x16DC JUMP JUMPDEST SWAP3 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x202A DUP3 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x2034 SWAP1 DUP5 PUSH2 0x1703 JUMP JUMPDEST MSTORE PUSH2 0x203E SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x2047 SWAP2 PUSH2 0x1703 JUMP JUMPDEST MLOAD POP DUP3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2057 DUP3 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x2061 SWAP1 DUP5 PUSH2 0x1703 JUMP JUMPDEST MSTORE PUSH2 0x206B SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x2074 SWAP2 PUSH2 0x1703 JUMP JUMPDEST MLOAD POP PUSH1 0x2 PUSH2 0x2081 SWAP1 PUSH2 0x1723 JUMP JUMPDEST SWAP2 DUP6 SWAP2 SWAP1 DUP9 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP4 PUSH2 0x2094 PUSH2 0x1726 JUMP JUMPDEST SWAP6 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x20A3 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x20B1 SWAP2 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x20BF SWAP2 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x20CD SWAP2 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x20DB SWAP2 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0x20E4 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP1 PUSH2 0x20F2 SWAP2 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x20FB SWAP2 PUSH2 0x1D1D JUMP JUMPDEST DUP1 PUSH1 0x20 ADD PUSH2 0x2108 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2113 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x211C SWAP2 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD PUSH2 0x212D SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x2138 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH2 0x2141 SWAP2 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x214A SWAP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 ADD PUSH2 0x2158 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2163 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x216C SWAP2 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 ADD PUSH2 0x217D SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x2188 SWAP1 PUSH2 0x1D74 JUMP JUMPDEST PUSH2 0x2191 SWAP2 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x219A SWAP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP4 PUSH2 0x21A7 SWAP2 PUSH2 0x13C JUMP JUMPDEST DUP7 PUSH2 0x21B1 SWAP2 PUSH2 0x154 JUMP JUMPDEST SWAP1 PUSH2 0x21BB SWAP2 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH2 0x21C7 SWAP2 PUSH2 0x13C JUMP JUMPDEST DUP4 PUSH2 0x21D1 SWAP2 PUSH2 0x154 JUMP JUMPDEST SWAP1 PUSH2 0x21DB SWAP2 PUSH2 0x17A1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH32 0xEE1F4A056590ADCA336CA88EA149BD251D1D2C5EA0530BD96F4724B968713C94 SWAP4 PUSH2 0x2209 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP4 PUSH2 0x2216 SWAP4 DUP6 PUSH2 0x1DB5 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x223C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2242 JUMPI JUMPDEST PUSH2 0x2234 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x15A1 JUMP JUMPDEST CODESIZE PUSH2 0x1F93 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x222A JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST POP PUSH2 0x1F30 PUSH2 0x225E PUSH1 0x40 DUP8 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x2271 PUSH2 0x226B PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO SWAP1 POP PUSH2 0x1F27 JUMP JUMPDEST POP PUSH2 0x1F00 PUSH2 0x228A PUSH1 0x0 DUP8 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x229D PUSH2 0x2297 PUSH1 0x64 PUSH2 0x1407 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST GT ISZERO SWAP1 POP PUSH2 0x1EF7 JUMP JUMPDEST POP PUSH2 0x1ED0 PUSH2 0x22B6 PUSH1 0x0 DUP5 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x22C9 PUSH2 0x22C3 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ ISZERO SWAP1 POP PUSH2 0x1EC7 JUMP JUMPDEST PUSH2 0x22EF SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x22E7 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x1E9E JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x2317 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x230F DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x426174746C6520697320616C72656164792066696E6973686564000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x2357 PUSH1 0x1A PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x2360 DUP2 PUSH2 0x2322 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x237A SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x234A JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2384 JUMPI JUMP JUMPDEST PUSH2 0x238C PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x23A2 PUSH1 0x4 DUP3 ADD PUSH2 0x2364 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x23B2 PUSH2 0x23B7 SWAP2 PUSH2 0x281 JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23C4 SWAP1 SLOAD PUSH2 0x23A6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4167656E7420616C726561647920696E20626174746C65000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x23FC PUSH1 0x17 PUSH1 0x20 SWAP3 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x2405 DUP2 PUSH2 0x23C7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x241F SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP2 DUP4 SUB SWAP2 ADD MSTORE PUSH2 0x23EF JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2429 JUMPI JUMP JUMPDEST PUSH2 0x2431 PUSH2 0xB3 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x2447 PUSH1 0x4 DUP3 ADD PUSH2 0x2409 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2454 SWAP1 PUSH2 0x807 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x246F PUSH2 0x246A PUSH2 0x2476 SWAP3 PUSH2 0x244B JUMP JUMPDEST PUSH2 0x2457 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1A4D JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 SHL SWAP1 JUMP JUMPDEST PUSH2 0x2489 SWAP1 PUSH2 0x247A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2498 PUSH2 0x249D SWAP2 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x2480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24B0 PUSH2 0x24B5 SWAP2 PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x24A1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH2 0x24CC PUSH2 0x24D4 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x248C JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x24A4 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x24F1 PUSH2 0x24FB SWAP3 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2507 DUP2 PUSH2 0xDC5 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2519 PUSH1 0x1 SWAP2 PUSH2 0xDFD JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH2 0x2531 PUSH1 0xC0 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST MSTORE JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2547 SWAP1 PUSH2 0x253A JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x255A PUSH2 0x2560 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xC8 JUMP JUMPDEST SWAP3 PUSH2 0xC8 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0x256B JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x257F PUSH2 0x2584 SWAP2 PUSH2 0x253A JUMP JUMPDEST PUSH2 0x2570 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2594 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x2573 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x25AC PUSH2 0x25A7 PUSH2 0x25B1 SWAP3 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25C0 PUSH2 0x25C6 SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x25D1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x25E1 JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25FD PUSH2 0x25F8 PUSH2 0x2602 SWAP3 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x260E SWAP1 PUSH2 0x25E9 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2634 SWAP3 SWAP5 SWAP4 PUSH2 0x262D PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x1BB JUMP JUMPDEST ADD SWAP1 PUSH2 0x2605 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x265C DUP3 PUSH2 0x2656 PUSH2 0x2650 PUSH2 0x264B PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x2671 PUSH2 0x266B PUSH1 0x2 DUP5 SWAP1 PUSH2 0x258 JUMP JUMPDEST POP PUSH2 0xC18 JUMP JUMPDEST SWAP1 PUSH2 0x269A PUSH2 0x2681 PUSH1 0x3 DUP5 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x2694 PUSH2 0x268E PUSH1 0x0 PUSH2 0x3AD JUMP JUMPDEST SWAP2 PUSH2 0x3AD JUMP JUMPDEST EQ PUSH2 0x237D JUMP JUMPDEST PUSH2 0x26B2 PUSH2 0x26AC PUSH1 0x1 DUP5 ADD PUSH1 0x0 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 PUSH2 0x18B JUMP JUMPDEST SWAP3 PUSH2 0x26CB PUSH2 0x26C5 PUSH1 0x1 DUP6 ADD PUSH1 0x1 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 PUSH2 0x18B JUMP JUMPDEST SWAP1 PUSH2 0x26E9 PUSH2 0x26E3 PUSH2 0x26DE PUSH1 0x4 DUP9 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x23BA JUMP JUMPDEST ISZERO PUSH2 0x807 JUMP JUMPDEST DUP1 PUSH2 0x2F1D JUMPI JUMPDEST PUSH2 0x26F8 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x270E PUSH1 0x1 PUSH2 0x2709 PUSH1 0x4 DUP9 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2724 PUSH1 0x1 PUSH2 0x271F PUSH1 0x4 DUP6 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2764 PUSH1 0x0 PUSH2 0x273A PUSH2 0x2735 DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x2759 DUP10 SWAP3 PUSH2 0x274D PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F18 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2EF5 JUMPI JUMPDEST POP SWAP1 PUSH2 0x27B9 PUSH1 0x0 PUSH2 0x278F PUSH2 0x278A DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x2DE5AAF7 SWAP1 PUSH2 0x27AE DUP8 SWAP3 PUSH2 0x27A2 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0x1147 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2EF0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2ECD JUMPI JUMPDEST POP SWAP3 PUSH2 0x27EC PUSH2 0x27E7 PUSH2 0x27E0 PUSH1 0x3 DUP6 SWAP1 PUSH2 0x13C JUMP JUMPDEST DUP10 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST SWAP7 PUSH2 0x280B PUSH2 0x2806 PUSH2 0x27FF PUSH1 0x3 DUP7 SWAP1 PUSH2 0x13C JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST SWAP7 PUSH2 0x2814 PUSH2 0x1867 JUMP JUMPDEST SWAP8 PUSH2 0x281D PUSH2 0x1867 JUMP JUMPDEST SWAP9 PUSH2 0x2853 PUSH1 0x20 PUSH2 0x283D PUSH2 0x2838 PUSH2 0x2833 PUSH1 0x1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH4 0x705FAB20 SWAP1 PUSH2 0x284B PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0x1147 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x2863 PUSH1 0x4 DUP3 ADD PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2EC8 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2E9A JUMPI JUMPDEST POP PUSH2 0x28A2 DUP8 SWAP2 PUSH2 0x2893 PUSH2 0x2887 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x28B4 PUSH2 0x28AE DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x24D8 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0x28C0 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 JUMPDEST DUP3 PUSH2 0x28D6 PUSH2 0x28D0 PUSH1 0x3 PUSH2 0x24E2 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH2 0x2E87 JUMPI PUSH2 0x2978 PUSH1 0x0 PUSH2 0x2973 DUP13 PUSH2 0x296A DUP6 PUSH2 0x2961 DUP16 DUP13 PUSH2 0x2953 PUSH2 0x2958 SWAP3 SWAP7 PUSH2 0x294A PUSH2 0x2941 PUSH2 0x290A PUSH1 0x2 DUP7 ADD DUP14 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP PUSH2 0x293C PUSH2 0x292A PUSH1 0x3 PUSH2 0x2922 PUSH1 0x2 DUP11 ADD PUSH1 0x1 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP SWAP9 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP10 SWAP12 PUSH2 0x2934 PUSH2 0x2527 JUMP JUMPDEST SWAP15 DUP16 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD PUSH2 0xF60 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD PUSH2 0x253D JUMP JUMPDEST PUSH2 0x3175 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x298C PUSH2 0x2986 DUP4 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH1 0x0 EQ PUSH2 0x2E77 JUMPI POP PUSH2 0x29A0 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST JUMPDEST SWAP4 DUP9 SWAP1 DUP8 DUP10 SWAP2 SWAP3 PUSH2 0x29F9 PUSH2 0x29E7 PUSH2 0x29E1 PUSH2 0x29DB PUSH32 0xCF2D586A11B0DF2DC974A66369AD4E68566A0635FD2448E810592EAC3D3BEDAE SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x29F0 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 LOG4 DUP4 PUSH2 0x2A10 PUSH2 0x2A0A PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ PUSH2 0x2E60 JUMPI PUSH2 0x2AF0 PUSH1 0x0 PUSH2 0x2AEB DUP12 PUSH2 0x2AE2 DUP15 PUSH2 0x2AD9 PUSH2 0x2AD0 DUP13 PUSH2 0x2A47 PUSH2 0x2A56 PUSH2 0x2ACB SWAP12 PUSH2 0x2A3B PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 ADD PUSH2 0x2588 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x2A68 PUSH2 0x2A62 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x24D8 JUMP JUMPDEST KECCAK256 SWAP10 DUP11 SWAP5 SWAP7 PUSH2 0x2AC2 PUSH2 0x2AB9 PUSH2 0x2A82 PUSH1 0x2 DUP7 ADD PUSH1 0x1 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP PUSH2 0x2AB4 PUSH2 0x2AA2 PUSH1 0x3 PUSH2 0x2A9A PUSH1 0x2 DUP11 ADD PUSH1 0x0 SWAP1 PUSH2 0x24FE JUMP JUMPDEST POP SWAP9 ADD PUSH2 0x2C2 JUMP JUMPDEST SWAP10 SWAP12 PUSH2 0x2AAC PUSH2 0x2527 JUMP JUMPDEST SWAP15 DUP16 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD PUSH2 0x2534 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD PUSH2 0xF60 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD PUSH2 0x253D JUMP JUMPDEST PUSH2 0x3175 JUMP JUMPDEST SWAP13 DUP14 DUP1 PUSH2 0x2B05 PUSH2 0x2AFF DUP5 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH1 0x0 EQ PUSH2 0x2E52 JUMPI POP POP PUSH2 0x2B1A PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST JUMPDEST SWAP13 DUP9 SWAP1 DUP9 DUP9 SWAP2 SWAP3 PUSH2 0x2B73 PUSH2 0x2B61 PUSH2 0x2B5B PUSH2 0x2B55 PUSH32 0xCF2D586A11B0DF2DC974A66369AD4E68566A0635FD2448E810592EAC3D3BEDAE SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x120 JUMP JUMPDEST SWAP5 PUSH2 0x2B6A PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C8 JUMP JUMPDEST SUB SWAP1 LOG4 DUP13 PUSH2 0x2B8A PUSH2 0x2B84 PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ PUSH2 0x2BDB JUMPI PUSH2 0x2BAD PUSH2 0x2BBC PUSH2 0x2BD5 SWAP3 PUSH2 0x2BA1 PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 ADD PUSH2 0x2588 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x2BCE PUSH2 0x2BC8 DUP3 PUSH2 0x24DE JUMP JUMPDEST SWAP2 PUSH2 0x24D8 JUMP JUMPDEST KECCAK256 SWAP3 PUSH2 0xC9E JUMP JUMPDEST SWAP2 PUSH2 0x28C2 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 DUP5 SWAP8 DUP5 SWAP8 JUMPDEST DUP10 PUSH2 0x2C00 PUSH2 0x2BFA PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST EQ PUSH2 0x2D39 JUMPI JUMPDEST POP POP POP POP PUSH2 0x2C52 SWAP3 SWAP2 PUSH2 0x2C2E PUSH2 0x2C40 SWAP3 PUSH2 0x2C24 PUSH1 0x1 PUSH1 0x3 DUP4 ADD PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x4 DUP10 SWAP2 ADD PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x2C3B PUSH1 0x0 SWAP2 PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2C4D PUSH1 0x0 SWAP2 PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x245A JUMP JUMPDEST PUSH2 0x2C64 PUSH2 0x2C5F PUSH1 0x0 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH4 0x953B6A91 DUP5 PUSH1 0x32 SWAP3 DUP1 EXTCODESIZE ISZERO PUSH2 0x2D34 JUMPI PUSH2 0x2C92 PUSH1 0x0 DUP1 SWAP5 PUSH2 0x2C9D PUSH2 0x2C86 PUSH2 0xB3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x1147 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x2612 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2D2F JUMPI PUSH2 0x2D02 JUMPI JUMPDEST POP SWAP2 PUSH2 0x2CEA PUSH2 0x2CE4 PUSH2 0x2CDE PUSH32 0xC76E6DE66E7F50844440B686C8189EF9B89939DFE8F4560382213011ED5D31C7 SWAP6 PUSH2 0x120 JUMP JUMPDEST SWAP3 PUSH2 0x120 JUMP JUMPDEST SWAP3 PUSH2 0x120 JUMP JUMPDEST SWAP3 PUSH2 0x2CF3 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x2CFD DUP2 PUSH2 0x9A9 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST PUSH2 0x2D22 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0x2D28 JUMPI JUMPDEST PUSH2 0x2D1A DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25D6 JUMP JUMPDEST CODESIZE PUSH2 0x2CAC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2D10 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x2C52 SWAP7 SWAP6 SWAP10 POP PUSH2 0x2E27 SWAP4 SWAP5 SWAP9 POP SWAP2 PUSH2 0x2E17 PUSH2 0x2E06 PUSH2 0x2E1C SWAP4 PUSH2 0x2E01 PUSH2 0x2DF0 PUSH2 0x2DA7 DUP9 PUSH2 0x2DA1 PUSH2 0x2D91 PUSH1 0x0 PUSH1 0x60 PUSH2 0x2D88 PUSH2 0x2D78 PUSH2 0x2E21 SWAP16 PUSH1 0x20 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2D82 PUSH1 0x14 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP5 ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2D9B PUSH1 0x5 PUSH2 0x1D74 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP3 PUSH2 0x2DEA PUSH2 0x2DDA PUSH1 0x0 PUSH1 0x60 PUSH2 0x2DD1 PUSH2 0x2DC1 PUSH1 0x20 DUP8 ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2DCB PUSH1 0x14 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP5 ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2DE4 PUSH1 0x5 PUSH2 0x1D74 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP5 PUSH2 0x2DFB PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x25B4 JUMP JUMPDEST SWAP6 PUSH2 0x2E11 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT ISZERO PUSH1 0x0 EQ PUSH2 0x2E43 JUMPI PUSH2 0x2C40 DUP6 PUSH2 0x2C2E DUP4 SWAP7 JUMPDEST SWAP3 DUP3 SWAP5 SWAP6 PUSH2 0x2C06 JUMP JUMPDEST PUSH2 0x2C40 DUP2 SWAP6 PUSH2 0x2C2E DUP2 SWAP7 PUSH2 0x2E3A JUMP JUMPDEST PUSH2 0x2E5B SWAP2 PUSH2 0x254B JUMP JUMPDEST PUSH2 0x2B1B JUMP JUMPDEST POP POP POP SWAP2 DUP1 SWAP5 SWAP7 SWAP9 POP SWAP9 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 SWAP8 DUP6 SWAP8 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x2E82 SWAP1 DUP6 SWAP1 PUSH2 0x254B JUMP JUMPDEST PUSH2 0x29A1 JUMP JUMPDEST POP SWAP10 SWAP9 SWAP11 SWAP3 SWAP5 SWAP7 SWAP1 POP SWAP7 SWAP1 SWAP3 SWAP5 SWAP7 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x2EBB SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EC1 JUMPI JUMPDEST PUSH2 0x2EB3 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x15A1 JUMP JUMPDEST CODESIZE PUSH2 0x2876 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EA9 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x2EEA SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x2EE2 DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x2F12 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x2F0A DUP2 DUP4 PUSH2 0x889 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x131F JUMP JUMPDEST CODESIZE PUSH2 0x2777 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST POP PUSH2 0x26F8 PUSH2 0x2F3E PUSH2 0x2F38 PUSH2 0x2F33 PUSH1 0x4 DUP7 SWAP1 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x23BA JUMP JUMPDEST ISZERO PUSH2 0x807 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2F4D PUSH2 0x1867 JUMP JUMPDEST POP PUSH2 0x2F58 PUSH1 0x2 PUSH2 0x249 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F72 PUSH2 0x2F6D PUSH2 0x2F77 SWAP3 PUSH2 0x2F5B JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2F91 PUSH2 0x2F8C PUSH2 0x2F96 SWAP3 PUSH2 0x2F7A JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2FB0 PUSH2 0x2FAB PUSH2 0x2FB5 SWAP3 PUSH2 0x2F99 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2FC4 PUSH2 0x2FCA SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x2FD5 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x2FEE PUSH2 0x2FE9 PUSH2 0x2FF3 SWAP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3000 SWAP1 MLOAD PUSH2 0x253A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 JUMP JUMPDEST PUSH2 0x301E SWAP1 PUSH2 0x3003 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH2 0x3033 PUSH2 0x3038 SWAP2 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x304F PUSH2 0x304A PUSH2 0x3054 SWAP3 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3063 PUSH2 0x3069 SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3074 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3090 PUSH2 0x308B PUSH2 0x3095 SWAP3 PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x30B7 SWAP1 PUSH2 0x30B1 PUSH2 0x30AB PUSH2 0x30BC SWAP5 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x253A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x30D3 PUSH2 0x30CE PUSH2 0x30D8 SWAP3 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x30E7 PUSH2 0x30ED SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x30FA JUMPI JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3116 PUSH2 0x3111 PUSH2 0x311B SWAP3 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3132 PUSH2 0x312D PUSH2 0x3137 SWAP3 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x314E PUSH2 0x3149 PUSH2 0x3153 SWAP3 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x316D PUSH2 0x3168 PUSH2 0x3172 SWAP3 PUSH2 0x3156 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x317D PUSH2 0x1867 JUMP JUMPDEST POP PUSH2 0x31C1 PUSH2 0x31A7 PUSH2 0x3197 PUSH1 0x0 PUSH1 0x60 DUP2 DUP7 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x31A1 PUSH1 0x2 PUSH2 0x1636 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x31BB PUSH1 0x40 PUSH1 0x60 PUSH1 0x0 DUP7 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x3323 PUSH2 0x3313 PUSH2 0x320A PUSH2 0x31DE PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 DUP9 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x3204 PUSH2 0x31F4 PUSH1 0x40 PUSH1 0x60 DUP2 DUP11 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x31FE PUSH1 0x2 PUSH2 0x1636 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP3 PUSH2 0x330D PUSH2 0x32FD DUP7 PUSH2 0x32F7 PUSH2 0x321F PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x3229 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x3239 PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x324C PUSH2 0x3246 PUSH1 0x1 PUSH2 0x507 JUMP JUMPDEST SWAP2 PUSH2 0x507 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x36F4 JUMPI PUSH2 0x3268 SWAP1 PUSH2 0x3262 PUSH1 0x1E PUSH2 0x2F7D JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST DUP4 PUSH2 0x327A PUSH1 0x20 PUSH1 0x60 DUP4 ADD MLOAD ADD PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x328D PUSH2 0x3287 PUSH1 0x3 PUSH2 0x507 JUMP JUMPDEST SWAP2 PUSH2 0x507 JUMP JUMPDEST EQ PUSH2 0x36B0 JUMPI JUMPDEST PUSH2 0x32DC PUSH1 0x0 PUSH1 0x20 PUSH2 0x32D3 PUSH2 0x32F1 SWAP6 PUSH2 0x32CD PUSH2 0x32C8 PUSH2 0x32B8 DUP7 DUP7 PUSH2 0x32EC SWAP11 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x32C2 PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP8 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x32E6 PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP1 PUSH2 0x254B JUMP JUMPDEST SWAP4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3307 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST SWAP4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x331D PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST DUP2 PUSH2 0x3336 PUSH2 0x3330 DUP4 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST GT ISZERO PUSH2 0x36A0 JUMPI PUSH2 0x3345 SWAP2 PUSH2 0x254B JUMP JUMPDEST SWAP1 PUSH2 0x337D PUSH2 0x336D PUSH2 0x3368 PUSH2 0x3363 PUSH2 0x335E PUSH1 0xA0 DUP7 ADD PUSH2 0x2FF6 JUMP JUMPDEST PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x303B JUMP JUMPDEST PUSH2 0x3377 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x3391 PUSH1 0x20 PUSH1 0x60 PUSH1 0x40 DUP6 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x33A4 PUSH2 0x339E PUSH1 0x32 PUSH2 0x25E9 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x3681 JUMPI PUSH2 0x33C8 PUSH2 0x33C2 PUSH2 0x33BC PUSH1 0x32 PUSH2 0x25E9 JUMP JUMPDEST JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH2 0x3672 JUMPI PUSH2 0x3417 PUSH2 0x3407 PUSH2 0x3402 PUSH2 0x33FD PUSH2 0x33F8 PUSH2 0x33E8 PUSH1 0xA0 DUP8 ADD PUSH2 0x2FF6 JUMP JUMPDEST PUSH2 0x33F2 PUSH1 0xA0 PUSH2 0x307C JUMP JUMPDEST SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x303B JUMP JUMPDEST PUSH2 0x3411 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x3057 JUMP JUMPDEST PUSH2 0x3442 PUSH2 0x343D PUSH2 0x342D PUSH1 0x40 PUSH1 0x20 DUP7 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x3437 PUSH1 0x2 PUSH2 0x30BF JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP1 PUSH2 0x3481 PUSH2 0x347C PUSH2 0x346C PUSH1 0x64 PUSH2 0x3467 PUSH2 0x3461 PUSH1 0x40 PUSH1 0x20 DUP11 ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST SWAP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x30DB JUMP JUMPDEST PUSH2 0x3476 PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x2FDA JUMP JUMPDEST SWAP2 PUSH2 0x3495 PUSH2 0x348F DUP4 SWAP3 PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x3614 JUMPI POP POP SWAP1 PUSH2 0x34B7 PUSH2 0x34C7 SWAP2 PUSH2 0x34B1 PUSH1 0xF PUSH2 0x2F5E JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x34C1 PUSH1 0xA PUSH2 0x3102 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x34D5 PUSH1 0x80 DUP3 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x34E8 PUSH2 0x34E2 PUSH1 0x1 PUSH2 0x379 JUMP JUMPDEST SWAP2 PUSH2 0x379 JUMP JUMPDEST EQ DUP1 PUSH2 0x35E7 JUMPI JUMPDEST PUSH1 0x0 EQ PUSH2 0x3522 JUMPI POP PUSH2 0x350E PUSH2 0x351E SWAP2 PUSH2 0x3508 PUSH1 0x73 PUSH2 0x3159 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3518 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x352E PUSH1 0x80 DUP3 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x3541 PUSH2 0x353B PUSH1 0x2 PUSH2 0x379 JUMP JUMPDEST SWAP2 PUSH2 0x379 JUMP JUMPDEST EQ SWAP1 DUP2 PUSH2 0x3580 JUMPI JUMPDEST POP PUSH2 0x3554 JUMPI JUMPDEST PUSH2 0x351F JUMP JUMPDEST PUSH2 0x356B PUSH2 0x357B SWAP2 PUSH2 0x3565 PUSH1 0x73 PUSH2 0x3159 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3575 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP PUSH2 0x3595 PUSH1 0x60 DUP1 PUSH1 0x0 DUP5 ADD MLOAD ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x35A8 PUSH2 0x35A2 PUSH1 0x3 PUSH2 0x313A JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST EQ SWAP1 DUP2 ISZERO PUSH2 0x35B8 JUMPI JUMPDEST POP CODESIZE PUSH2 0x3549 JUMP JUMPDEST PUSH2 0x35CD SWAP2 POP PUSH1 0x60 PUSH1 0x0 DUP2 SWAP3 ADD MLOAD ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x35E0 PUSH2 0x35DA PUSH1 0x4 PUSH2 0x2F9C JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST EQ CODESIZE PUSH2 0x35B1 JUMP JUMPDEST POP PUSH2 0x35FB PUSH1 0x60 DUP1 PUSH1 0x0 DUP5 ADD MLOAD ADD MLOAD ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x360E PUSH2 0x3608 PUSH1 0x1 PUSH2 0x311E JUMP JUMPDEST SWAP2 PUSH2 0x4E5 JUMP JUMPDEST EQ PUSH2 0x34EF JUMP JUMPDEST PUSH2 0x3633 PUSH2 0x362E PUSH2 0x3639 SWAP3 SWAP4 PUSH2 0x3629 PUSH1 0x64 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x254B JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST SWAP2 PUSH2 0xC8 JUMP JUMPDEST GT PUSH2 0x3644 JUMPI JUMPDEST PUSH2 0x34C9 JUMP JUMPDEST SWAP1 PUSH2 0x365C PUSH2 0x366C SWAP2 PUSH2 0x3656 PUSH1 0x5 PUSH2 0x1D74 JUMP JUMPDEST SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x3666 PUSH1 0xA PUSH2 0x3102 JUMP JUMPDEST SWAP1 PUSH2 0x25B4 JUMP JUMPDEST SWAP1 PUSH2 0x363F JUMP JUMPDEST POP POP PUSH2 0x367E PUSH1 0x0 PUSH2 0xC82 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x33C8 PUSH2 0x33C2 PUSH2 0x369B PUSH1 0x20 PUSH1 0x60 PUSH1 0x40 DUP8 ADD MLOAD ADD MLOAD ADD PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x33BD JUMP JUMPDEST POP POP POP PUSH2 0x36AD PUSH1 0x1 PUSH2 0x1655 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x32DC PUSH1 0x0 PUSH1 0x20 PUSH2 0x32D3 PUSH2 0x32F1 SWAP6 PUSH2 0x32CD PUSH2 0x32C8 PUSH2 0x32B8 DUP7 DUP7 PUSH2 0x36E1 PUSH2 0x32EC SWAP12 PUSH2 0x36DB PUSH1 0x1E PUSH2 0x2F7D JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP13 SWAP11 POP POP POP POP POP POP SWAP6 POP POP POP POP POP PUSH2 0x3293 JUMP JUMPDEST PUSH2 0x3703 PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x3716 PUSH2 0x3710 PUSH1 0x2 PUSH2 0x507 JUMP JUMPDEST SWAP2 PUSH2 0x507 JUMP JUMPDEST EQ PUSH2 0x3721 JUMPI JUMPDEST PUSH2 0x3269 JUMP JUMPDEST PUSH2 0x3738 PUSH2 0x3749 SWAP2 PUSH2 0x3732 PUSH1 0xF PUSH2 0x2F5E JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP2 PUSH2 0x3743 PUSH1 0xF PUSH2 0x2F5E JUMP JUMPDEST SWAP1 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 PUSH2 0x371C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xD3 0x4D 0xE0 0xA5 0xE9 0xE9 0xBA 0x23 PC SLOAD 0xD1 0xEA 0xC1 PUSH27 0xFF47904714C5F0B6CEAB546D9C6FFE7AE064736F6C634300081C00 CALLER ",
              "sourceMap": "86:10894:0:-:0;;;;;;;;;-1:-1:-1;86:10894:0;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;1016:72::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;86:10894::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;987:23::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;86:10894;;;;;;;;;;;;;;-1:-1:-1;86:10894:0;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;86:10894:0;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;86:10894:0;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;107:33::-;;;;;:::i;:::-;;:::o;86:10894::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;1127:45::-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;86:10894::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;-1:-1:-1;86:10894:0;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;146:26::-;;;;;;:::i;:::-;;:::o;86:10894::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;10174:704::-;;10233:17;;:::i;:::-;10270:9;10262:60;10270:9;:26;;10282:14;:7;:14;:::i;:::-;10270:26;:::i;:::-;;;:::i;:::-;;10262:60;:::i;:::-;10332:37;10351:18;:7;10359:9;10351:18;;:::i;:::-;;10332:37;:::i;:::-;10434:1;10420:32;10434:17;:10;:1;:10;:17;:::i;:::-;10420:32;:::i;:::-;10479:1;10467:13;10479:1;10467:13;:::i;:::-;10505:3;10482:1;:21;;10486:17;:10;:1;:10;:17;:::i;:::-;10482:21;:::i;:::-;;;:::i;:::-;;;;;10505:3;10542:17;10524:61;10542:43;;:28;:17;10560:9;10542:28;;:::i;:::-;10571:13;;:10;:1;:10;10582:1;10571:13;;:::i;:::-;;;:::i;:::-;10542:43;;:::i;:::-;;:::i;:::-;10524:61;:12;10537:1;;10524:61;;;:::i;:::-;;:::i;:::-;10505:3;:::i;:::-;10467:13;;10482:21;;;;;;10656:1;:10;;;;;:::i;:::-;10690:1;;:10;;10728:12;10763:1;:9;;10793:1;:7;;;;;:::i;:::-;10822:1;;:8;;;;;:::i;:::-;10852:1;:8;;;;;:::i;:::-;10621:250;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;10614:257;:::o;86:10894::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1704:1636::-;;;;1927:32;;:21;:12;;;:::i;:::-;:21;:::i;:::-;;1949:9;1927:32;1949:9;1927:32;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;1704:1636;1891:68;2005:32;;:21;:12;;;:::i;:::-;:21;:::i;:::-;;2027:9;2005:32;2027:9;2005:32;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;1704:1636;1969:68;2055:6;:9;;:6;:9;;:::i;:::-;:14;;2068:1;2055:14;:::i;:::-;;;:::i;:::-;;;:32;;;1704:1636;2047:65;;;:::i;:::-;2130:24;;:9;:24;;:::i;:::-;:31;;2158:3;2130:31;:::i;:::-;;;:::i;:::-;;;:66;;;1704:1636;2122:101;;;:::i;:::-;2241:23;;:9;:23;;:::i;:::-;:30;;2268:3;2241:30;:::i;:::-;;;:::i;:::-;;;:64;;;1704:1636;2233:99;;;:::i;:::-;2363:14;:7;:14;:::i;:::-;2422:11;2409:44;;:42;:25;2422:11;;;:::i;:::-;2409:25;:::i;:::-;:42;:::i;:::-;;:44;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1704:1636;2388:65;2509:1;2495:15;;;:::i;:::-;;;;:::i;:::-;2485:26;;;:::i;:::-;2564:1;;2550:16;;;:::i;:::-;;;;:::i;:::-;2590:9;;2576:8;2585:1;2576:23;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;2623:9;2609:8;2618:1;2609:23;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;2696:1;2676:22;;;:::i;:::-;;;;:::i;:::-;2721:9;2708:7;2716:1;;2708:22;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;2740:7;2748:1;;2740:22;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;2773:7;:12;;;:::i;:::-;2817:8;;2849;2880:7;2908:9;2939:20;2981:1;;2786:207;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;2773:221;;;:::i;:::-;3031:6;:12;;;;;:::i;:::-;3046:2;3031:17;;;:::i;:::-;;;;:::i;:::-;3051:6;:10;;;:19;;;;;:::i;:::-;3073:1;3051:23;;;:::i;:::-;;;;:::i;:::-;3031:43;;;:::i;:::-;3102:6;;:12;;;;;:::i;:::-;3117:2;3102:17;;;:::i;:::-;;;;:::i;:::-;3122:6;:10;;;:19;;;;;:::i;:::-;3144:1;3122:23;;;:::i;:::-;;;;:::i;:::-;3102:43;;;:::i;:::-;3196:7;3155:17;3173:8;3155:27;;;:::i;:::-;3183:9;3155:38;;;:::i;:::-;:48;;;;:::i;:::-;3213:17;3231:8;3213:27;;;:::i;:::-;3241:9;3213:38;;;:::i;:::-;:48;;;;:::i;:::-;3301:9;3312;3323;3277:56;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1704:1636::o;2409:44::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;2241:64::-;2275:9;2233:99;2275:23;;:9;:23;;:::i;:::-;:30;;2302:3;2275:30;:::i;:::-;;;:::i;:::-;;;2241:64;;;;2130:66;2165:9;2122:101;2165:24;;:9;:24;;:::i;:::-;:31;;2193:3;2165:31;:::i;:::-;;;:::i;:::-;;;2130:66;;;;2055:32;2073:6;2047:65;2073:9;;:6;:9;;:::i;:::-;:14;;2086:1;2073:14;:::i;:::-;;;:::i;:::-;;;2055:32;;;;2005;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;1927:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;86:10894::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;3346:3910::-;;3397:60;3405:9;:26;;3417:14;:7;:14;:::i;:::-;3405:26;:::i;:::-;;;:::i;:::-;;3397:60;:::i;:::-;3467:49;3498:18;:7;3506:9;3498:18;;:::i;:::-;;3467:49;:::i;:::-;3534:13;3526:83;3534:20;;:13;:20;;:::i;:::-;:44;;3558:20;3534:44;:::i;:::-;;;:::i;:::-;;3526:83;:::i;:::-;3639:25;;:22;:13;:22;3662:1;3639:25;;:::i;:::-;;;:::i;:::-;3693:13;:25;;:22;:13;:22;3716:1;3693:25;;:::i;:::-;;;:::i;:::-;3737:13;3736:24;3737:23;;:13;3751:8;3737:23;;:::i;:::-;;:::i;:::-;3736:24;;:::i;:::-;:52;;;3346:3910;3728:88;;;:::i;:::-;3827:30;3853:4;3827:23;:13;3841:8;3827:23;;:::i;:::-;:30;:::i;:::-;3867;3893:4;3867:23;:13;3881:8;3867:23;;:::i;:::-;:30;:::i;:::-;3952:31;;:21;:12;;;:::i;:::-;:21;:::i;:::-;;3974:8;3952:31;3974:8;3952:31;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;3346:3910;3916:67;4029:12;:31;;:21;:12;;;:::i;:::-;:21;:::i;:::-;;4051:8;4029:31;4051:8;4029:31;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;3346:3910;3993:67;4089:17;:38;;:28;:17;4107:9;4089:28;;:::i;:::-;4118:8;4089:38;;:::i;:::-;;:::i;:::-;4155:17;:38;;:28;:17;4173:9;4155:28;;:::i;:::-;4184:8;4155:38;;:::i;:::-;;:::i;:::-;4204:16;;;:::i;:::-;4230:15;;;:::i;:::-;4386:11;4373:44;;:42;:25;4386:11;;;:::i;:::-;4373:25;:::i;:::-;:42;:::i;:::-;;:44;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3346:3910;4419:9;4356:73;4419:9;4356:73;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;4346:84;;;;:::i;:::-;;;:::i;:::-;;4494:1;4485:10;4494:1;4485:10;:::i;:::-;4480:1888;4504:3;4497:1;:5;;4501:1;4497:5;:::i;:::-;;;:::i;:::-;;;;;4998:41;4622:302;;4667:6;4622:302;4667:6;4622:302;4667:6;;4622:302;;4667:6;4708:13;4622:302;;4708:24;:21;:13;:21;4730:1;4708:24;;:::i;:::-;;4622:302;4850:19;;4801:24;:21;:13;:21;4823:1;4801:24;;:::i;:::-;;4850:13;:19;;:::i;:::-;4899:10;4622:302;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;4998:41;:::i;:::-;5064:9;;:20;;5077:7;5064:20;:::i;:::-;;;:::i;:::-;;;5063:50;;;;5088:1;5063:50;5088:1;5063:50;:::i;:::-;;5139:9;;5150:8;;5160;5170:9;5132:48;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5198:7;:12;;5209:1;5198:12;:::i;:::-;;;:::i;:::-;;5194:129;;5967:41;5591:302;;5465:10;5591:302;5465:10;5591:302;;5465:10;5448:28;;5591:302;5465:10;5448:28;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5438:39;;;;:::i;:::-;;;:::i;:::-;;5636:6;;;5677:13;5591:302;;5677:24;:21;:13;:21;5699:1;5677:24;;:::i;:::-;;5591:302;5819:19;;5770:24;:21;:13;:21;5591:302;5770:24;;:::i;:::-;;5819:13;:19;;:::i;:::-;5868:10;5591:302;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;5967:41;:::i;:::-;6033:9;;;:20;;6046:7;6033:20;:::i;:::-;;;:::i;:::-;;;6032:50;;;;6057:1;;6032:50;6057:1;6032:50;:::i;:::-;;6108:9;;6119:8;;6129;6139:9;6101:48;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;6167:7;:12;;6178:1;6167:12;:::i;:::-;;;:::i;:::-;;6163:129;;6328:28;;4504:3;6345:10;6328:28;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;6318:39;;;;:::i;:::-;;;:::i;:::-;;4504:3;;:::i;:::-;4485:10;;;6163:129;6210:8;;;;;;;;;;;;;6246;;6272:5;4480:1888;6455:8;:13;;6467:1;6455:13;:::i;:::-;;;:::i;:::-;;6451:463;;4480:1888;6974:21;;;;7087:31;6974:21;;7005:31;7046;6974:21;6951:44;6974:21;6951:20;:13;:20;:44;:::i;:::-;7005:20;7028:8;7005:13;:20;:31;:::i;:::-;7046:23;7072:5;7046:13;;:23;:::i;:::-;:31;:::i;:::-;7087:23;7113:5;7087:13;;:23;:::i;:::-;:31;:::i;:::-;7128:27;:12;;;:::i;:::-;:27;:::i;:::-;;7156:8;7166:2;7128:41;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;4480:1888;7220:9;7231:8;7205:44;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3346:3910::o;7128:41::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;6451:463::-;7087:31;6509:6;;;;6652:68;6509:6;;;;;6689:13;6652:32;6688;6509:6;6653:13;6591:43;6509;:6;6529:23;:19;;:10;6509:17;:12;6652:68;6509:6;:12;;;:::i;:::-;:17;6524:2;6509:17;:::i;:::-;;;:::i;:::-;6529:6;:10;;:19;;:::i;:::-;:23;6551:1;6529:23;:::i;:::-;;;:::i;:::-;6509:43;;:::i;:::-;6591:6;6611:23;:19;;:10;6591:17;:12;;:6;:12;;:::i;:::-;:17;6606:2;6591:17;:::i;:::-;;;:::i;:::-;6611:6;:10;;:19;;:::i;:::-;:23;6633:1;6611:23;:::i;:::-;;;:::i;:::-;6591:43;;:::i;:::-;6653:7;:13;6663:3;6653:13;:::i;:::-;;;:::i;:::-;6652:32;:::i;:::-;6689:7;:13;6699:3;6689:13;:::i;:::-;;;:::i;:::-;6688:32;:::i;:::-;6652:68;:::i;:::-;;;:::i;:::-;;;6648:256;;;;7046:31;6751:8;7005:31;6787:8;6648:256;;6451:463;;;;;;6648:256;7046:31;6845:8;6881;7005:31;6881:8;6648:256;;;6032:50;6062:19;:7;:19;:::i;:::-;6032:50;;5194:129;5241:8;;;;;;;;;;;;;;;5277;;5303:5;;;5063:50;5093:19;:7;5103:9;5093:19;;:::i;:::-;5063:50;;4497:5;;;;;;;;;;;;;;;;;4373:44;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;4029:31::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;3952:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;3736:52::-;3765:13;3728:88;3764:24;3765:23;;:13;3779:8;3765:23;;:::i;:::-;;:::i;:::-;3764:24;;:::i;:::-;3736:52;;;;10884:94;10931:7;;:::i;:::-;10957;:14;:7;:14;:::i;:::-;10950:21;:::o;86:10894::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;7267:2900::-;7358:7;;:::i;:::-;7436:6;:67;:32;:28;;:19;:6;;:15;;:19;;:28;;:::i;:::-;:32;7467:1;7436:32;:::i;:::-;;;:::i;:::-;7471;;:19;:15;:6;:15;;:19;;:32;;:::i;:::-;7436:67;;:::i;:::-;8558:38;8559:30;7536:67;:28;;:19;:15;:6;:15;;:19;;:28;;:::i;:::-;7567:36;:32;;:19;:6;;:15;;:19;;:32;;:::i;:::-;:36;7602:1;7567:36;:::i;:::-;;;:::i;:::-;7536:67;;:::i;:::-;7751:3;8497:36;8498:28;7751:3;8396:62;7726:28;7751:3;7726:28;:::i;:::-;7764:29;7790:3;7764:29;:::i;:::-;7845:6;:31;;:6;;:22;;:31;;:::i;:::-;:53;;7880:18;7845:53;:::i;:::-;;;:::i;:::-;;7841:220;;;;7902:20;7920:2;7902:20;7920:2;7902:20;:::i;:::-;;;:::i;:::-;7841:220;8135:6;:31;;:22;:6;:22;;:31;;:::i;:::-;:53;;8170:18;8135:53;:::i;:::-;;;:::i;:::-;;8131:85;;7841:220;8416:37;;:22;8311:61;8396:62;8330:6;8311:61;8330:41;:37;:6;;8416:41;8330:6;:22;;:37;;:::i;:::-;:41;8370:1;8330:41;:::i;:::-;;;:::i;:::-;8311:61;:::i;:::-;;;:::i;:::-;8416:6;:22;;:37;;:::i;:::-;:41;8456:1;8416:41;:::i;:::-;;;:::i;:::-;8396:62;:::i;:::-;;;:::i;:::-;8498:11;:28;:::i;:::-;8497:36;8530:3;8497:36;:::i;:::-;;;:::i;:::-;8559:12;:30;:::i;:::-;8558:38;8593:3;8558:38;:::i;:::-;;;:::i;:::-;8657:11;:27;;8672:12;8657:27;:::i;:::-;;;:::i;:::-;;;8653:46;;8765:26;:11;:26;:::i;:::-;8906:6;8882:50;:44;8890:35;8898:26;8906:17;;:6;:17;;:::i;:::-;8898:26;:::i;:::-;8890:35;:::i;:::-;8882:44;:::i;:::-;:50;8929:3;8882:50;:::i;:::-;;;:::i;:::-;9033:27;;:19;:15;:6;:15;;:19;;:27;;:::i;:::-;:32;;9063:2;9033:32;:::i;:::-;;;:::i;:::-;;:67;;;;9114:27;;9033:67;9068:2;9033:67;:::i;:::-;;9114:27;:::i;:::-;;;:::i;:::-;;9110:46;;9280:59;9281:51;9289:42;9297:33;9305:24;:17;;:6;:17;;:::i;:::-;:24;9326:3;9305:24;:::i;:::-;;;:::i;:::-;9297:33;:::i;:::-;9289:42;:::i;:::-;9281:51;:::i;:::-;9280:59;9336:3;9280:59;:::i;:::-;;;:::i;:::-;9349:61;9370:40;:36;;:22;:6;:22;;:36;;:::i;:::-;:40;9409:1;9370:40;:::i;:::-;;;:::i;:::-;9349:61;:::i;:::-;9455:3;9431:71;9454:48;9455:42;:3;:42;9461:36;;:22;:6;:22;;:36;;:::i;:::-;9455:42;;:::i;:::-;;:::i;:::-;9454:48;9501:1;9454:48;:::i;:::-;;;:::i;:::-;9431:71;:::i;:::-;9528:8;:21;;:8;9539:10;9528:21;:::i;:::-;;;:::i;:::-;;9524:170;;;;9563:6;;;:11;9562:18;9563:6;:11;9572:2;9563:11;:::i;:::-;;;:::i;:::-;9562:18;9578:2;9562:18;:::i;:::-;;;:::i;:::-;9524:170;;9757:12;;:6;:12;;:::i;:::-;:40;;9773:24;9757:40;:::i;:::-;;;:::i;:::-;;:86;;;9524:170;9753:384;;;;9877:6;:12;9876:20;9877:6;:12;9886:3;9877:12;:::i;:::-;;;:::i;:::-;9876:20;9893:3;9876:20;:::i;:::-;;;:::i;:::-;9753:384;10147:13;:::o;9753:384::-;9925:12;;:6;:12;;:::i;:::-;:38;;9941:22;9925:38;:::i;:::-;;;:::i;:::-;;:132;;;;9753:384;9921:216;;;9753:384;;;9921:216;10099:12;10098:20;10099:6;:12;10108:3;10099:12;:::i;:::-;;;:::i;:::-;10098:20;10115:3;10098:20;:::i;:::-;;;:::i;:::-;9921:216;;9925:132;9968:6;;:37;;:6;:15;:6;:15;;:19;;:37;;:::i;:::-;:42;;10009:1;9968:42;:::i;:::-;;;:::i;:::-;;:88;;;;;9925:132;9967:90;9925:132;;;9968:88;10014:37;:6;;:19;:15;:6;;:15;;:19;;:37;;:::i;:::-;:42;;10055:1;10014:42;:::i;:::-;;;:::i;:::-;;9968:88;;;9757:86;9801:6;:37;;:6;:15;:6;:15;;:19;;:37;;:::i;:::-;:42;;9842:1;9801:42;:::i;:::-;;;:::i;:::-;;9757:86;;9524:170;9630:31;9642:18;9630:31;:8;9642:3;:18;:3;:18;:::i;:::-;;:::i;:::-;9630:31;:::i;:::-;;;:::i;:::-;;9626:68;;9524:170;;;9626:68;9675:6;:10;9674:17;9675:6;:10;9684:1;9675:10;:::i;:::-;;;:::i;:::-;9674:17;9689:2;9674:17;:::i;:::-;;;:::i;:::-;9626:68;;;9110:46;9152:1;;9145:8;9152:1;9145:8;:::i;:::-;;:::o;9033:67::-;9114:27;;9073;;:19;:15;:6;:15;;:19;;:27;;:::i;:::-;9033:67;;8653:46;8695:1;;;8688:8;8695:1;8688:8;:::i;:::-;;:::o;8131:85::-;8211:2;8416:37;;:22;8311:61;8396:62;8211:2;8311:61;8330:41;:37;8211:2;;8192:21;8416:41;8211:2;8192:21;8211:2;8192:21;:::i;:::-;;;:::i;:::-;8131:85;;;;;;;;;;;;;;;;7841:220;7958:31;;:6;;:22;;:31;;:::i;:::-;:53;;7993:18;7958:53;:::i;:::-;;;:::i;:::-;;7954:107;;7841:220;;;7954:107;8015:20;8037:21;8033:2;8015:20;8033:2;8015:20;:::i;:::-;;;:::i;:::-;8056:2;8037:21;8056:2;8037:21;:::i;:::-;;;:::i;:::-;7954:107;;"
            },
            "methodIdentifiers": {
              "agentFactory()": "7df107ea",
              "agentInBattle(uint256)": "825b2124",
              "battleAgentHealth(uint256,uint256)": "2d24d097",
              "battles(uint256)": "606d2e96",
              "cadenceArch()": "d0d250bd",
              "fight(uint256)": "df6a37aa",
              "getBattle(uint256)": "6dd0ce7a",
              "getBattleCount()": "f470d5ec",
              "startBattle(uint256,(uint8,uint8,uint8),uint256,(uint8,uint8,uint8))": "c230fe0b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cadenceArch\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"attacker\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"defender\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"damage\",\"type\":\"uint256\"}],\"name\":\"Attack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"winner\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loser\",\"type\":\"uint256\"}],\"name\":\"BattleFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agent1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"agent2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Arena.ArenaType\",\"name\":\"arena\",\"type\":\"uint8\"}],\"name\":\"BattleStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"contract IAgentFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agentInBattle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battleAgentHealth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"internalType\":\"enum Arena.ArenaType\",\"name\":\"arena\",\"type\":\"uint8\"},{\"internalType\":\"enum Arena.BattleStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"winner\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cadenceArch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_battleId\",\"type\":\"uint256\"}],\"name\":\"fight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_battleId\",\"type\":\"uint256\"}],\"name\":\"getBattle\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"battleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"agentIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"agentHealths\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"aggressiveness\",\"type\":\"uint8\"},{\"internalType\":\"enum Strategy\",\"name\":\"strategy\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskTolerance\",\"type\":\"uint8\"}],\"internalType\":\"struct BattleTactics[]\",\"name\":\"tactics\",\"type\":\"tuple[]\"},{\"internalType\":\"enum Arena.ArenaType\",\"name\":\"arena\",\"type\":\"uint8\"},{\"internalType\":\"enum Arena.BattleStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"winner\",\"type\":\"uint256\"}],\"internalType\":\"struct Arena.BattleView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBattleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agent1Id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"aggressiveness\",\"type\":\"uint8\"},{\"internalType\":\"enum Strategy\",\"name\":\"strategy\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskTolerance\",\"type\":\"uint8\"}],\"internalType\":\"struct BattleTactics\",\"name\":\"_tactics1\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_agent2Id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"aggressiveness\",\"type\":\"uint8\"},{\"internalType\":\"enum Strategy\",\"name\":\"strategy\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskTolerance\",\"type\":\"uint8\"}],\"internalType\":\"struct BattleTactics\",\"name\":\"_tactics2\",\"type\":\"tuple\"}],\"name\":\"startBattle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arena.sol\":\"Arena\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Arena.sol\":{\"keccak256\":\"0x228e0c12d2316b7cd9150c9d07548c6e104511e4e620488eec3b217b960771c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://733490bea5e821baacb2f89734c83490ed6845204a9c75bd7bcc69b1d8c65b15\",\"dweb:/ipfs/QmUjhKAXVUCbKECgyhBtQFbTzRGhZaxRuRpufRT2RtkHDE\"]},\"contracts/Interfaces.sol\":{\"keccak256\":\"0x1a0faaec16300010def16aab8e7fafa059b752ea184c4a62e10b9ff30bd71d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://213a193dec818b3cc4042c8d3db6bf5c50dc22c93f946723544ad50a918fe1eb\",\"dweb:/ipfs/QmXqq6j671y1zks4iGUEyN4oBC7wEdfkzjxztqA4xhJjq7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 5,
                "contract": "contracts/Arena.sol:Arena",
                "label": "agentFactory",
                "offset": 0,
                "slot": "0",
                "type": "t_contract(IAgentFactory)1158"
              },
              {
                "astId": 7,
                "contract": "contracts/Arena.sol:Arena",
                "label": "cadenceArch",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 75,
                "contract": "contracts/Arena.sol:Arena",
                "label": "battles",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_struct(Battle)32_storage)dyn_storage"
              },
              {
                "astId": 81,
                "contract": "contracts/Arena.sol:Arena",
                "label": "battleAgentHealth",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
              },
              {
                "astId": 85,
                "contract": "contracts/Arena.sol:Arena",
                "label": "agentInBattle",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Battle)32_storage)dyn_storage": {
                "base": "t_struct(Battle)32_storage",
                "encoding": "dynamic_array",
                "label": "struct Arena.Battle[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(BattleTactics)1119_storage)dyn_storage": {
                "base": "t_struct(BattleTactics)1119_storage",
                "encoding": "dynamic_array",
                "label": "struct BattleTactics[]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)dyn_storage": {
                "base": "t_uint256",
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_contract(IAgentFactory)1158": {
                "encoding": "inplace",
                "label": "contract IAgentFactory",
                "numberOfBytes": "20"
              },
              "t_enum(ArenaType)11": {
                "encoding": "inplace",
                "label": "enum Arena.ArenaType",
                "numberOfBytes": "1"
              },
              "t_enum(BattleStatus)14": {
                "encoding": "inplace",
                "label": "enum Arena.BattleStatus",
                "numberOfBytes": "1"
              },
              "t_enum(Strategy)1111": {
                "encoding": "inplace",
                "label": "enum Strategy",
                "numberOfBytes": "1"
              },
              "t_mapping(t_uint256,t_bool)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(uint256 => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_uint256)"
              },
              "t_mapping(t_uint256,t_uint256)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_struct(Battle)32_storage": {
                "encoding": "inplace",
                "label": "struct Arena.Battle",
                "members": [
                  {
                    "astId": 16,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "battleId",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 19,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "agentIds",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_array(t_uint256)dyn_storage"
                  },
                  {
                    "astId": 23,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "tactics",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_array(t_struct(BattleTactics)1119_storage)dyn_storage"
                  },
                  {
                    "astId": 26,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "arena",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_enum(ArenaType)11"
                  },
                  {
                    "astId": 29,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "status",
                    "offset": 1,
                    "slot": "3",
                    "type": "t_enum(BattleStatus)14"
                  },
                  {
                    "astId": 31,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "winner",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(BattleTactics)1119_storage": {
                "encoding": "inplace",
                "label": "struct BattleTactics",
                "members": [
                  {
                    "astId": 1113,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "aggressiveness",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint8"
                  },
                  {
                    "astId": 1116,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "strategy",
                    "offset": 1,
                    "slot": "0",
                    "type": "t_enum(Strategy)1111"
                  },
                  {
                    "astId": 1118,
                    "contract": "contracts/Arena.sol:Arena",
                    "label": "riskTolerance",
                    "offset": 2,
                    "slot": "0",
                    "type": "t_uint8"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          }
        }
      },
      "contracts/Interfaces.sol": {
        "IAgentFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "xp",
                  "type": "uint256"
                }
              ],
              "name": "gainExperience",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getAgent",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "level",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "experience",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "strength",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "agility",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "intelligence",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint8",
                          "name": "elementalAffinity",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct IAgentFactory.DNA",
                      "name": "dna",
                      "type": "tuple"
                    },
                    {
                      "internalType": "string",
                      "name": "metadataCID",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "equippedItem",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IAgentFactory.Agent",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "gainExperience(uint256,uint256)": "953b6a91",
              "getAgent(uint256)": "2de5aaf7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xp\",\"type\":\"uint256\"}],\"name\":\"gainExperience\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAgent\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agility\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intelligence\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"elementalAffinity\",\"type\":\"uint8\"}],\"internalType\":\"struct IAgentFactory.DNA\",\"name\":\"dna\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"equippedItem\",\"type\":\"uint256\"}],\"internalType\":\"struct IAgentFactory.Agent\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IAgentFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x1a0faaec16300010def16aab8e7fafa059b752ea184c4a62e10b9ff30bd71d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://213a193dec818b3cc4042c8d3db6bf5c50dc22c93f946723544ad50a918fe1eb\",\"dweb:/ipfs/QmXqq6j671y1zks4iGUEyN4oBC7wEdfkzjxztqA4xhJjq7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "ICadenceArch": {
          "abi": [
            {
              "inputs": [],
              "name": "revertibleRandom",
              "outputs": [
                {
                  "internalType": "uint64",
                  "name": "",
                  "type": "uint64"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "revertibleRandom()": "705fab20"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"revertibleRandom\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"ICadenceArch\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x1a0faaec16300010def16aab8e7fafa059b752ea184c4a62e10b9ff30bd71d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://213a193dec818b3cc4042c8d3db6bf5c50dc22c93f946723544ad50a918fe1eb\",\"dweb:/ipfs/QmXqq6j671y1zks4iGUEyN4oBC7wEdfkzjxztqA4xhJjq7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "IItemFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "power",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "mint(address,uint8,uint256)": "4ed387b2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IItemFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0x1a0faaec16300010def16aab8e7fafa059b752ea184c4a62e10b9ff30bd71d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://213a193dec818b3cc4042c8d3db6bf5c50dc22c93f946723544ad50a918fe1eb\",\"dweb:/ipfs/QmXqq6j671y1zks4iGUEyN4oBC7wEdfkzjxztqA4xhJjq7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      }
    }
  }
}